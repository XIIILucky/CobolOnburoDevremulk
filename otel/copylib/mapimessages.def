      * C:\asya\acugt\MUHA\Copylib\MAPIMessages.def - ActiveX control 
      * definitions for MSMAPI
      * Generated: Cuma, Aralýk 01, 2000
           
           OBJECT @MSMAPI
           
      * Constants for Delete
           
      * DeleteConstants
           CLASS @DeleteConstants
               CLSID, 20C62CB1-15DA-101B-B9A8-444553540000
               NAME, "DeleteConstants"
      * "long mapMessageDelete"
               ENUMERATOR, @mapMessageDelete, 0
      * "long mapRecipientDelete"
               ENUMERATOR, @mapRecipientDelete, 1
      * "long mapAttachmentDelete"
               ENUMERATOR, @mapAttachmentDelete, 2
           
      * Constants for Messages control Action property.
           
      * MessagesActionConstants
           CLASS @MessagesActionConstants
               CLSID, B54A7431-FC5B-11CF-89BF-00AA00688B10
               NAME, "MessagesActionConstants"
      * "long mapFetch"
               ENUMERATOR, @mapFetch, 1
      * "long mapSendDialog"
               ENUMERATOR, @mapSendDialog, 2
      * "long mapSend"
               ENUMERATOR, @mapSend, 3
      * "long mapSave"
               ENUMERATOR, @mapSave, 4
      * "long mapCopy"
               ENUMERATOR, @mapCopy, 5
      * "long mapCompose"
               ENUMERATOR, @mapCompose, 6
      * "long mapReply"
               ENUMERATOR, @mapReply, 7
      * "long mapReplyAll"
               ENUMERATOR, @mapReplyAll, 8
      * "long mapForward"
               ENUMERATOR, @mapForward, 9
      * "long mapDelete"
               ENUMERATOR, @mapDelete, 10
      * "long mapShowAddressBook"
               ENUMERATOR, @mapShowAddressBook, 11
      * "long mapShowRecipDetails"
               ENUMERATOR, @mapShowRecipDetails, 12
      * "long mapResolveName"
               ENUMERATOR, @mapResolveName, 13
      * "long mapDeleteRecip"
               ENUMERATOR, @mapDeleteRecip, 14
      * "long mapDeleteAttachment"
               ENUMERATOR, @mapDeleteAttachment, 15
           
      * MAPI Error Codes
           
      * MAPIErrors
           CLASS @MAPIErrors
               CLSID, 20C62CB2-15DA-101B-B9A8-444553540000
               NAME, "MAPIErrors"
      * "long mapSuccessSuccess"
               ENUMERATOR, @mapSuccessSuccess, 32000
      * "long mapUserAbort"
               ENUMERATOR, @mapUserAbort, 32001
      * "long mapFailure"
               ENUMERATOR, @mapFailure, 32002
      * "long mapLoginFail"
               ENUMERATOR, @mapLoginFail, 32003
      * "long mapDiskFull"
               ENUMERATOR, @mapDiskFull, 32004
      * "long mapInsufficientMem"
               ENUMERATOR, @mapInsufficientMem, 32005
      * "long mapAccessDenied"
               ENUMERATOR, @mapAccessDenied, 32006
      * "long mapGeneralFailure"
               ENUMERATOR, @mapGeneralFailure, 32007
      * "long mapTooManySessions"
               ENUMERATOR, @mapTooManySessions, 32008
      * "long mapTooManyFiles"
               ENUMERATOR, @mapTooManyFiles, 32009
      * "long mapTooManyRecipients"
               ENUMERATOR, @mapTooManyRecipients, 32010
      * "long mapAttachmentNotFound"
               ENUMERATOR, @mapAttachmentNotFound, 32011
      * "long mapAttachmentOpenFailure"
               ENUMERATOR, @mapAttachmentOpenFailure, 32012
      * "long mapAttachmentWriteFailure"
               ENUMERATOR, @mapAttachmentWriteFailure, 32013
      * "long mapUnknownRecipient"
               ENUMERATOR, @mapUnknownRecipient, 32014
      * "long mapBadRecipType"
               ENUMERATOR, @mapBadRecipType, 32015
      * "long mapNoMessages"
               ENUMERATOR, @mapNoMessages, 32016
      * "long mapInvalidMessage"
               ENUMERATOR, @mapInvalidMessage, 32017
      * "long mapTextTooLarge"
               ENUMERATOR, @mapTextTooLarge, 32018
      * "long mapInvalidSession"
               ENUMERATOR, @mapInvalidSession, 32019
      * "long mapTypeNotSupported"
               ENUMERATOR, @mapTypeNotSupported, 32020
      * "long mapAmbiguousRecipient"
               ENUMERATOR, @mapAmbiguousRecipient, 32021
      * "long mapMessageInUse"
               ENUMERATOR, @mapMessageInUse, 32022
      * "long mapNetworkFailure"
               ENUMERATOR, @mapNetworkFailure, 32023
      * "long mapInvalidEditFields"
               ENUMERATOR, @mapInvalidEditFields, 32024
      * "long mapInvalidRecips"
               ENUMERATOR, @mapInvalidRecips, 32025
      * "long mapNotSupported"
               ENUMERATOR, @mapNotSupported, 32026
      * "long mapSessionExist"
               ENUMERATOR, @mapSessionExist, 32050
      * "long mapInvalidBuffer"
               ENUMERATOR, @mapInvalidBuffer, 32051
      * "long mapInvalidReadBufferAction"
               ENUMERATOR, @mapInvalidReadBufferAction, 32052
      * "long mapNoSession"
               ENUMERATOR, @mapNoSession, 32053
      * "long mapInvalidRecipient"
               ENUMERATOR, @mapInvalidRecipient, 32054
      * "long mapInvalidComposeBufferAction"
               ENUMERATOR, @mapInvalidComposeBufferAction, 32055
      * "long mapControlFailure"
               ENUMERATOR, @mapControlFailure, 32056
      * "long mapNoRecipients"
               ENUMERATOR, @mapNoRecipients, 32057
      * "long mapNoAttachment"
               ENUMERATOR, @mapNoAttachment, 32058
           
      * Error Constants
           
      * ErrorConstants
           CLASS @ErrorConstants
               CLSID, 3438EDD0-D90A-11CF-89B4-00AA00688B10
               NAME, "ErrorConstants"
      * "long mpeOutOfMemory"
               ENUMERATOR, @mpeOutOfMemory, 7
      * "long mpeErrorLoadingMAPI"
               ENUMERATOR, @mpeErrorLoadingMAPI, 48
      * "long mpeInvalidPropertyValue"
               ENUMERATOR, @mpeInvalidPropertyValue, 380
      * "long mpeInvalidPropertyArrayIndex"
               ENUMERATOR, @mpeInvalidPropertyArrayIndex, 381
      * "long mpeSetNotSupported"
               ENUMERATOR, @mpeSetNotSupported, 383
      * "long mpeGetNotSupported"
               ENUMERATOR, @mpeGetNotSupported, 394
      * "long mpeUserCancelled"
               ENUMERATOR, @mpeUserCancelled, 32001
      * "long mpeUnspecifiedFailure"
               ENUMERATOR, @mpeUnspecifiedFailure, 32002
      * "long mpeLoginFailed"
               ENUMERATOR, @mpeLoginFailed, 32003
      * "long mpeDiskFull"
               ENUMERATOR, @mpeDiskFull, 32004
      * "long mpeInsufficientMemory"
               ENUMERATOR, @mpeInsufficientMemory, 32005
      * "long mpeAccessDenied"
               ENUMERATOR, @mpeAccessDenied, 32006
      * "long mpeMAPIFailure"
               ENUMERATOR, @mpeMAPIFailure, 32007
      * "long mpeTooManySessions"
               ENUMERATOR, @mpeTooManySessions, 32008
      * "long mpeTooManyFiles"
               ENUMERATOR, @mpeTooManyFiles, 32009
      * "long mpeTooManyRecipients"
               ENUMERATOR, @mpeTooManyRecipients, 32010
      * "long mpeAttachmentNotFound"
               ENUMERATOR, @mpeAttachmentNotFound, 32011
      * "long mpeFailedOpeningAttachment"
               ENUMERATOR, @mpeFailedOpeningAttachment, 32012
      * "long mpeFailedWritingAttachment"
               ENUMERATOR, @mpeFailedWritingAttachment, 32013
      * "long mpeUnknownRecipient"
               ENUMERATOR, @mpeUnknownRecipient, 32014
      * "long mpeInvalidRecipientType"
               ENUMERATOR, @mpeInvalidRecipientType, 32015
      * "long mpeNoMessages"
               ENUMERATOR, @mpeNoMessages, 32016
      * "long mpeInvalidMessage"
               ENUMERATOR, @mpeInvalidMessage, 32017
      * "long mpeTextTooLarge"
               ENUMERATOR, @mpeTextTooLarge, 32018
      * "long mpeInvalidSession"
               ENUMERATOR, @mpeInvalidSession, 32019
      * "long mpeTypeNotSupported"
               ENUMERATOR, @mpeTypeNotSupported, 32020
      * "long mpeAmbiguousRecipient"
               ENUMERATOR, @mpeAmbiguousRecipient, 32021
      * "long mpeMessageInUse"
               ENUMERATOR, @mpeMessageInUse, 32022
      * "long mpeNetworkFailure"
               ENUMERATOR, @mpeNetworkFailure, 32023
      * "long mpeInvalidEditFields"
               ENUMERATOR, @mpeInvalidEditFields, 32024
      * "long mpeInvalidRecipients"
               ENUMERATOR, @mpeInvalidRecipients, 32025
      * "long mpeNotSupported"
               ENUMERATOR, @mpeNotSupported, 32026
      * "long mpeUserAbortedAction"
               ENUMERATOR, @mpeUserAbortedAction, 32027
      * "long mpeMAPIMissing"
               ENUMERATOR, @mpeMAPIMissing, 32048
      * "long mpeLogonFailure"
               ENUMERATOR, @mpeLogonFailure, 32050
      * "long mpePropertyIsReadOnly"
               ENUMERATOR, @mpePropertyIsReadOnly, 32051
      * "long mpeInvalidAction"
               ENUMERATOR, @mpeInvalidAction, 32052
      * "long mpeNoValidSessionID"
               ENUMERATOR, @mpeNoValidSessionID, 32053
      * "long mpeNoOriginator"
               ENUMERATOR, @mpeNoOriginator, 32054
      * "long mpeActionNotValid"
               ENUMERATOR, @mpeActionNotValid, 32055
      * "long mpeNoMessageList"
               ENUMERATOR, @mpeNoMessageList, 32056
      * "long mpeNoRecipients"
               ENUMERATOR, @mpeNoRecipients, 32057
      * "long mpeNoAttachments"
               ENUMERATOR, @mpeNoAttachments, 32058
           
      * Constants for RecipType Property
           
      * RecipTypeConstants
           CLASS @RecipTypeConstants
               CLSID, 20C62CB3-15DA-101B-B9A8-444553540000
               NAME, "RecipTypeConstants"
      * "long mapOrigList"
               ENUMERATOR, @mapOrigList, 0
      * "long mapToList"
               ENUMERATOR, @mapToList, 1
      * "long mapCcList"
               ENUMERATOR, @mapCcList, 2
      * "long mapBccList"
               ENUMERATOR, @mapBccList, 3
           
      * Constants for AttachType Property
           
      * AttachTypeConstants
           CLASS @AttachTypeConstants
               CLSID, 20C62CB4-15DA-101B-B9A8-444553540000
               NAME, "AttachTypeConstants"
      * "long mapData"
               ENUMERATOR, @mapData, 0
      * "long mapEOLE"
               ENUMERATOR, @mapEOLE, 1
      * "long mapSOLE"
               ENUMERATOR, @mapSOLE, 2
           
      * Constants for Session control Action property.
           
      * SessionActionConstants
           CLASS @SessionActionConstants
               CLSID, 20C62CB5-15DA-101B-B9A8-444553540000
               NAME, "SessionActionConstants"
      * "long mapSignOn"
               ENUMERATOR, @mapSignOn, 1
      * "long mapSignOff"
               ENUMERATOR, @mapSignOff, 2
           
      * Microsoft MAPI Session Control
           
      * IMapiSession
           CLASS @IMapiSession
               CLSID, F49AC0B0-DF74-11CF-8E74-00A0C90F26F8
               NAME, "IMapiSession"
      * DownLoadMail
      * Specifies if any new mail should be downloaded when a new session is 
      * initiated.
               PROPERTY-GET, 1, @DownLoadMail
                       RETURNING "boolean", TYPE 11
      * DownLoadMail
      * Specifies if any new mail should be downloaded when a new session is 
      * initiated.
               PROPERTY-PUT, 1, @DownLoadMail,
                   "boolean (Property Value)", TYPE 11
      * LogonUI
      * Specifies whether or not a dialog box is provided for sign-on.
               PROPERTY-GET, 2, @LogonUI
                       RETURNING "boolean", TYPE 11
      * LogonUI
      * Specifies whether or not a dialog box is provided for sign-on.
               PROPERTY-PUT, 2, @LogonUI,
                   "boolean (Property Value)", TYPE 11
      * NewSession
      * Specifies whether a new mail session should be established, even if a 
      * valid session currently exists.
               PROPERTY-GET, 3, @NewSession
                       RETURNING "boolean", TYPE 11
      * NewSession
      * Specifies whether a new mail session should be established, even if a 
      * valid session currently exists.
               PROPERTY-PUT, 3, @NewSession,
                   "boolean (Property Value)", TYPE 11
      * Action
      * Determines what action is performed when the MAPI messages control is 
      * invoked.
               PROPERTY-GET, 4, @Action
                       RETURNING "short", TYPE 2
      * Action
      * Determines what action is performed when the MAPI messages control is 
      * invoked.
               PROPERTY-PUT, 4, @Action,
                   "short (Property Value)", TYPE 2
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-GET, 5, @SessionID
                       RETURNING "long", TYPE 3
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-PUT, 5, @SessionID,
                   "long (Property Value)", TYPE 3
      * Password
      * Specifies the account password associated with the UserName property.
               PROPERTY-GET, 6, @Password
                       RETURNING "BSTR", TYPE 8
      * Password
      * Specifies the account password associated with the UserName property.
               PROPERTY-PUT, 6, @Password,
                   "BSTR (Property Value)", TYPE 8
      * UserName
      * Specifies the account user name.
               PROPERTY-GET, 7, @UserName
                       RETURNING "BSTR", TYPE 8
      * UserName
      * Specifies the account user name.
               PROPERTY-PUT, 7, @UserName,
                   "BSTR (Property Value)", TYPE 8
      * SignOn
      * Starts the messaging session and signs the user on the account specified 
      * by the UserName and Password properties.
               METHOD, 8, @SignOn
      * SignOff
      * Ends the messaging session and signs the user off the account specified 
      * by the UserName and Password properties.
               METHOD, 9, @SignOff
      * AboutBox
               METHOD, -552, @AboutBox
           
      * Microsoft MAPI Session Control
           
      * MAPISessionEvents
           CLASS @MAPISessionEvents
               CLSID, 20C62CA2-15DA-101B-B9A8-444553540000
               NAME, "MAPISessionEvents"
           
      * Microsoft MAPI Session Control
           
      * MAPISession
           CLASS @MAPISession
               CLSID, 20C62CA0-15DA-101B-B9A8-444553540000
               NAME, "MAPISession"
               DEFAULT-INTERFACE, "IMapiSession"
               DEFAULT-SOURCE, "MAPISessionEvents"
      * DownLoadMail
      * Specifies if any new mail should be downloaded when a new session is 
      * initiated.
               PROPERTY-GET, 1, @DownLoadMail
                       RETURNING "boolean", TYPE 11
      * DownLoadMail
      * Specifies if any new mail should be downloaded when a new session is 
      * initiated.
               PROPERTY-PUT, 1, @DownLoadMail,
                   "boolean (Property Value)", TYPE 11
      * LogonUI
      * Specifies whether or not a dialog box is provided for sign-on.
               PROPERTY-GET, 2, @LogonUI
                       RETURNING "boolean", TYPE 11
      * LogonUI
      * Specifies whether or not a dialog box is provided for sign-on.
               PROPERTY-PUT, 2, @LogonUI,
                   "boolean (Property Value)", TYPE 11
      * NewSession
      * Specifies whether a new mail session should be established, even if a 
      * valid session currently exists.
               PROPERTY-GET, 3, @NewSession
                       RETURNING "boolean", TYPE 11
      * NewSession
      * Specifies whether a new mail session should be established, even if a 
      * valid session currently exists.
               PROPERTY-PUT, 3, @NewSession,
                   "boolean (Property Value)", TYPE 11
      * Action
      * Determines what action is performed when the MAPI messages control is 
      * invoked.
               PROPERTY-GET, 4, @Action
                       RETURNING "short", TYPE 2
      * Action
      * Determines what action is performed when the MAPI messages control is 
      * invoked.
               PROPERTY-PUT, 4, @Action,
                   "short (Property Value)", TYPE 2
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-GET, 5, @SessionID
                       RETURNING "long", TYPE 3
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-PUT, 5, @SessionID,
                   "long (Property Value)", TYPE 3
      * Password
      * Specifies the account password associated with the UserName property.
               PROPERTY-GET, 6, @Password
                       RETURNING "BSTR", TYPE 8
      * Password
      * Specifies the account password associated with the UserName property.
               PROPERTY-PUT, 6, @Password,
                   "BSTR (Property Value)", TYPE 8
      * UserName
      * Specifies the account user name.
               PROPERTY-GET, 7, @UserName
                       RETURNING "BSTR", TYPE 8
      * UserName
      * Specifies the account user name.
               PROPERTY-PUT, 7, @UserName,
                   "BSTR (Property Value)", TYPE 8
      * SignOn
      * Starts the messaging session and signs the user on the account specified 
      * by the UserName and Password properties.
               METHOD, 8, @SignOn
      * SignOff
      * Ends the messaging session and signs the user off the account specified 
      * by the UserName and Password properties.
               METHOD, 9, @SignOff
      * AboutBox
               METHOD, -552, @AboutBox
           
      * Microsoft MAPI Messages Control
           
      * IMapiMessages
           CLASS @IMapiMessages
               CLSID, F49AC0B2-DF74-11CF-8E74-00A0C90F26F8
               NAME, "IMapiMessages"
      * AddressCaption
      * Specifies the caption appearing at the top of the Address Book dialog 
      * box.
               PROPERTY-GET, 1, @AddressCaption
                       RETURNING "BSTR", TYPE 8
      * AddressCaption
      * Specifies the caption appearing at the top of the Address Book dialog 
      * box.
               PROPERTY-PUT, 1, @AddressCaption,
                   "BSTR (Property Value)", TYPE 8
      * AddressEditFieldCount
      * Specifies the number of edit controls available to the user in the 
      * Address Book dialog box.
               PROPERTY-GET, 2, @AddressEditFieldCount
                       RETURNING "short", TYPE 2
      * AddressEditFieldCount
      * Specifies the number of edit controls available to the user in the 
      * Address Book dialog box.
               PROPERTY-PUT, 2, @AddressEditFieldCount,
                   "short (Property Value)", TYPE 2
      * AddressLabel
      * Specifies the appearance of the To edit control in the Address Book.
               PROPERTY-GET, 3, @AddressLabel
                       RETURNING "BSTR", TYPE 8
      * AddressLabel
      * Specifies the appearance of the To edit control in the Address Book.
               PROPERTY-PUT, 3, @AddressLabel,
                   "BSTR (Property Value)", TYPE 8
      * AddressModifiable
      * Specifies whether the Address Book can be modified.
               PROPERTY-GET, 4, @AddressModifiable
                       RETURNING "boolean", TYPE 11
      * AddressModifiable
      * Specifies whether the Address Book can be modified.
               PROPERTY-PUT, 4, @AddressModifiable,
                   "boolean (Property Value)", TYPE 11
      * AddressResolveUI
      * Specifies whether a dialog box is displayed for recipient name 
      * resolution during addressing when the ResolveName method is specified.
               PROPERTY-GET, 5, @AddressResolveUI
                       RETURNING "boolean", TYPE 11
      * AddressResolveUI
      * Specifies whether a dialog box is displayed for recipient name 
      * resolution during addressing when the ResolveName method is specified.
               PROPERTY-PUT, 5, @AddressResolveUI,
                   "boolean (Property Value)", TYPE 11
      * AttachmentCount
      * Specifies the total number of attachments associated with the currently 
      * indexed message.
               PROPERTY-GET, 6, @AttachmentCount
                       RETURNING "long", TYPE 3
      * AttachmentCount
      * Specifies the total number of attachments associated with the currently 
      * indexed message.
               PROPERTY-PUT, 6, @AttachmentCount,
                   "long (Property Value)", TYPE 3
      * AttachmentIndex
      * Sets the currently indexed attachment.
               PROPERTY-GET, 7, @AttachmentIndex
                       RETURNING "long", TYPE 3
      * AttachmentIndex
      * Sets the currently indexed attachment.
               PROPERTY-PUT, 7, @AttachmentIndex,
                   "long (Property Value)", TYPE 3
      * AttachmentName
      * Specifies the name of the currently indexed attachment file.
               PROPERTY-GET, 8, @AttachmentName
                       RETURNING "BSTR", TYPE 8
      * AttachmentName
      * Specifies the name of the currently indexed attachment file.
               PROPERTY-PUT, 8, @AttachmentName,
                   "BSTR (Property Value)", TYPE 8
      * AttachmentPathName
      * Specifies the full path name of the currently indexed attachment
               PROPERTY-GET, 9, @AttachmentPathName
                       RETURNING "BSTR", TYPE 8
      * AttachmentPathName
      * Specifies the full path name of the currently indexed attachment
               PROPERTY-PUT, 9, @AttachmentPathName,
                   "BSTR (Property Value)", TYPE 8
      * AttachmentPosition
      * Specifies the position of the currently indexed attachment within the 
      * message body
               PROPERTY-GET, 10, @AttachmentPosition
                       RETURNING "long", TYPE 3
      * AttachmentPosition
      * Specifies the position of the currently indexed attachment within the 
      * message body
               PROPERTY-PUT, 10, @AttachmentPosition,
                   "long (Property Value)", TYPE 3
      * AttachmentType
      * Specifies the type of the currently indexed file attachment.
               PROPERTY-GET, 11, @AttachmentType
                       RETURNING "short", TYPE 2
      * AttachmentType
      * Specifies the type of the currently indexed file attachment.
               PROPERTY-PUT, 11, @AttachmentType,
                   "short (Property Value)", TYPE 2
      * FetchMsgType
      * Specifies the message type to populate the message set.
               PROPERTY-GET, 12, @FetchMsgType
                       RETURNING "BSTR", TYPE 8
      * FetchMsgType
      * Specifies the message type to populate the message set.
               PROPERTY-PUT, 12, @FetchMsgType,
                   "BSTR (Property Value)", TYPE 8
      * FetchSorted
      * Specifies the message order when populating the message set with 
      * messages from the Inbox.
               PROPERTY-GET, 13, @FetchSorted
                       RETURNING "boolean", TYPE 11
      * FetchSorted
      * Specifies the message order when populating the message set with 
      * messages from the Inbox.
               PROPERTY-PUT, 13, @FetchSorted,
                   "boolean (Property Value)", TYPE 11
      * FetchUnreadOnly
      * Determines whether to restrict the messages in the message set to unread 
      * messages only.
               PROPERTY-GET, 14, @FetchUnreadOnly
                       RETURNING "boolean", TYPE 11
      * FetchUnreadOnly
      * Determines whether to restrict the messages in the message set to unread 
      * messages only.
               PROPERTY-PUT, 14, @FetchUnreadOnly,
                   "boolean (Property Value)", TYPE 11
      * MsgConversationID
      * Specifies the conversation thread identification value for the currently 
      * indexed message.
               PROPERTY-GET, 15, @MsgConversationID
                       RETURNING "BSTR", TYPE 8
      * MsgConversationID
      * Specifies the conversation thread identification value for the currently 
      * indexed message.
               PROPERTY-PUT, 15, @MsgConversationID,
                   "BSTR (Property Value)", TYPE 8
      * MsgCount
      * Indicates the total number of messages present in the message set during 
      * the current messaging session.
               PROPERTY-GET, 16, @MsgCount
                       RETURNING "long", TYPE 3
      * MsgCount
      * Indicates the total number of messages present in the message set during 
      * the current messaging session.
               PROPERTY-PUT, 16, @MsgCount,
                   "long (Property Value)", TYPE 3
      * MsgDateReceived
      * Specifies the date on which the currently indexed message was received.
               PROPERTY-GET, 17, @MsgDateReceived
                       RETURNING "BSTR", TYPE 8
      * MsgDateReceived
      * Specifies the date on which the currently indexed message was received.
               PROPERTY-PUT, 17, @MsgDateReceived,
                   "BSTR (Property Value)", TYPE 8
      * MsgID
      * Specifies the string identifier of the currently indexed message.
               PROPERTY-GET, 18, @MsgID
                       RETURNING "BSTR", TYPE 8
      * MsgID
      * Specifies the string identifier of the currently indexed message.
               PROPERTY-PUT, 18, @MsgID,
                   "BSTR (Property Value)", TYPE 8
      * MsgIndex
      * Specifies the index number of the currently indexed message.
               PROPERTY-GET, 19, @MsgIndex
                       RETURNING "long", TYPE 3
      * MsgIndex
      * Specifies the index number of the currently indexed message.
               PROPERTY-PUT, 19, @MsgIndex,
                   "long (Property Value)", TYPE 3
      * MsgNoteText
      * Specifies the text body of the message.
               PROPERTY-GET, 20, @MsgNoteText
                       RETURNING "BSTR", TYPE 8
      * MsgNoteText
      * Specifies the text body of the message.
               PROPERTY-PUT, 20, @MsgNoteText,
                   "BSTR (Property Value)", TYPE 8
      * MsgOrigAddress
      * Indicates the mail address of the originator of the currently indexed 
      * message
               PROPERTY-GET, 21, @MsgOrigAddress
                       RETURNING "BSTR", TYPE 8
      * MsgOrigAddress
      * Indicates the mail address of the originator of the currently indexed 
      * message
               PROPERTY-PUT, 21, @MsgOrigAddress,
                   "BSTR (Property Value)", TYPE 8
      * MsgOrigDisplayName
      * Specifies the originator's name for the currently indexed message
               PROPERTY-GET, 22, @MsgOrigDisplayName
                       RETURNING "BSTR", TYPE 8
      * MsgOrigDisplayName
      * Specifies the originator's name for the currently indexed message
               PROPERTY-PUT, 22, @MsgOrigDisplayName,
                   "BSTR (Property Value)", TYPE 8
      * MsgRead
      * Indicates whether the message has already been read.
               PROPERTY-GET, 23, @MsgRead
                       RETURNING "boolean", TYPE 11
      * MsgRead
      * Indicates whether the message has already been read.
               PROPERTY-PUT, 23, @MsgRead,
                   "boolean (Property Value)", TYPE 11
      * MsgReceiptRequested
      * Specifies whether a return receipt is requested for the currently 
      * indexed message.
               PROPERTY-GET, 24, @MsgReceiptRequested
                       RETURNING "boolean", TYPE 11
      * MsgReceiptRequested
      * Specifies whether a return receipt is requested for the currently 
      * indexed message.
               PROPERTY-PUT, 24, @MsgReceiptRequested,
                   "boolean (Property Value)", TYPE 11
      * MsgSent
      * Specifies whether the currently indexed message has already been sent to 
      * the mail server for distribution
               PROPERTY-GET, 25, @MsgSent
                       RETURNING "boolean", TYPE 11
      * MsgSent
      * Specifies whether the currently indexed message has already been sent to 
      * the mail server for distribution
               PROPERTY-PUT, 25, @MsgSent,
                   "boolean (Property Value)", TYPE 11
      * RecipAddress
      * Specifies the electronic mail address of the currently indexed 
      * recipient.
               PROPERTY-GET, 26, @RecipAddress
                       RETURNING "BSTR", TYPE 8
      * RecipAddress
      * Specifies the electronic mail address of the currently indexed 
      * recipient.
               PROPERTY-PUT, 26, @RecipAddress,
                   "BSTR (Property Value)", TYPE 8
      * RecipCount
      * Specifies the total number of recipients for the currently indexed 
      * message.
               PROPERTY-GET, 27, @RecipCount
                       RETURNING "long", TYPE 3
      * RecipCount
      * Specifies the total number of recipients for the currently indexed 
      * message.
               PROPERTY-PUT, 27, @RecipCount,
                   "long (Property Value)", TYPE 3
      * RecipDisplayName
      * Specifies the name of the currently indexed recipient.
               PROPERTY-GET, 28, @RecipDisplayName
                       RETURNING "BSTR", TYPE 8
      * RecipDisplayName
      * Specifies the name of the currently indexed recipient.
               PROPERTY-PUT, 28, @RecipDisplayName,
                   "BSTR (Property Value)", TYPE 8
      * RecipIndex
      * Sets the currently indexed recipient
               PROPERTY-GET, 29, @RecipIndex
                       RETURNING "long", TYPE 3
      * RecipIndex
      * Sets the currently indexed recipient
               PROPERTY-PUT, 29, @RecipIndex,
                   "long (Property Value)", TYPE 3
      * RecipType
      * Specifies the type of the currently indexed recipient.
               PROPERTY-GET, 30, @RecipType
                       RETURNING "short", TYPE 2
      * RecipType
      * Specifies the type of the currently indexed recipient.
               PROPERTY-PUT, 30, @RecipType,
                   "short (Property Value)", TYPE 2
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-GET, 31, @SessionID
                       RETURNING "long", TYPE 3
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-PUT, 31, @SessionID,
                   "long (Property Value)", TYPE 3
      * MsgSubject
      * Specifies the subject line for the currently indexed message as 
      * displayed in the message header
               PROPERTY-GET, 32, @MsgSubject
                       RETURNING "BSTR", TYPE 8
      * MsgSubject
      * Specifies the subject line for the currently indexed message as 
      * displayed in the message header
               PROPERTY-PUT, 32, @MsgSubject,
                   "BSTR (Property Value)", TYPE 8
      * MsgType
      * Specifies the type of the currently indexed message.
               PROPERTY-GET, 33, @MsgType
                       RETURNING "BSTR", TYPE 8
      * MsgType
      * Specifies the type of the currently indexed message.
               PROPERTY-PUT, 33, @MsgType,
                   "BSTR (Property Value)", TYPE 8
      * Action
      * Specifies what action is performed by the MAPI Control
               PROPERTY-GET, 34, @Action
                       RETURNING "short", TYPE 2
      * Action
      * Specifies what action is performed by the MAPI Control
               PROPERTY-PUT, 34, @Action,
                   "short (Property Value)", TYPE 2
      * Compose
      * Composes a message.
               METHOD, 35, @Compose
      * Copy
      * Copies the currently indexed message to the compose buffer.
               METHOD, 36, @Copy
      * Delete
      * Deletes a message, recipient, or attachment.
               METHOD, 45, @Delete,
                   "VARIANT" @vObj, TYPE 12
                       OPTIONAL 1
      * Fetch
      * Creates a message set from selected messages in the Inbox.
               METHOD, 37, @Fetch
      * Forward
      * Forwards a message.
               METHOD, 38, @Forward
      * Reply
      * Replies to a message.
               METHOD, 39, @Reply
      * ReplyAll
      * Replies to all message recipients.
               METHOD, 40, @ReplyAll
      * ResolveName
      * Resolves the name of the currently indexed recipient.
               METHOD, 41, @ResolveName
      * Save
      * Saves the message currently in the compose buffer (with MsgIndex = -1).
               METHOD, 42, @Save
      * Show
      * Shows details about recipient or the Address Book.
               METHOD, 44, @Show,
                   "VARIANT" @vDetails, TYPE 12
                       OPTIONAL 1
      * AboutBox
               METHOD, -552, @AboutBox
      * Send
      * Sends the message currently in the Compose buffer.
               METHOD, 43, @Send,
                   "VARIANT" @vDialog, TYPE 12
                       OPTIONAL 1
           
      * Event interface for Microsoft MAPI Messages Control
           
      * MAPIMessagesEvents
           CLASS @MAPIMessagesEvents
               CLSID, 20C62CAD-15DA-101B-B9A8-444553540000
               NAME, "MAPIMessagesEvents"
           
      * Microsoft MAPI Messages Control
           
      *** Primary Interface ***
           
      * MAPIMessages
           CLASS @MAPIMessages
               CLSID, 20C62CAB-15DA-101B-B9A8-444553540000
               NAME, "MAPIMessages"
               PRIMARY-INTERFACE
               ACTIVE-X-CONTROL
               DEFAULT-INTERFACE, "IMapiMessages"
               DEFAULT-SOURCE, "MAPIMessagesEvents"
      * AddressCaption
      * Specifies the caption appearing at the top of the Address Book dialog 
      * box.
               PROPERTY-GET, 1, @AddressCaption
                       RETURNING "BSTR", TYPE 8
      * AddressCaption
      * Specifies the caption appearing at the top of the Address Book dialog 
      * box.
               PROPERTY-PUT, 1, @AddressCaption,
                   "BSTR (Property Value)", TYPE 8
      * AddressEditFieldCount
      * Specifies the number of edit controls available to the user in the 
      * Address Book dialog box.
               PROPERTY-GET, 2, @AddressEditFieldCount
                       RETURNING "short", TYPE 2
      * AddressEditFieldCount
      * Specifies the number of edit controls available to the user in the 
      * Address Book dialog box.
               PROPERTY-PUT, 2, @AddressEditFieldCount,
                   "short (Property Value)", TYPE 2
      * AddressLabel
      * Specifies the appearance of the To edit control in the Address Book.
               PROPERTY-GET, 3, @AddressLabel
                       RETURNING "BSTR", TYPE 8
      * AddressLabel
      * Specifies the appearance of the To edit control in the Address Book.
               PROPERTY-PUT, 3, @AddressLabel,
                   "BSTR (Property Value)", TYPE 8
      * AddressModifiable
      * Specifies whether the Address Book can be modified.
               PROPERTY-GET, 4, @AddressModifiable
                       RETURNING "boolean", TYPE 11
      * AddressModifiable
      * Specifies whether the Address Book can be modified.
               PROPERTY-PUT, 4, @AddressModifiable,
                   "boolean (Property Value)", TYPE 11
      * AddressResolveUI
      * Specifies whether a dialog box is displayed for recipient name 
      * resolution during addressing when the ResolveName method is specified.
               PROPERTY-GET, 5, @AddressResolveUI
                       RETURNING "boolean", TYPE 11
      * AddressResolveUI
      * Specifies whether a dialog box is displayed for recipient name 
      * resolution during addressing when the ResolveName method is specified.
               PROPERTY-PUT, 5, @AddressResolveUI,
                   "boolean (Property Value)", TYPE 11
      * AttachmentCount
      * Specifies the total number of attachments associated with the currently 
      * indexed message.
               PROPERTY-GET, 6, @AttachmentCount
                       RETURNING "long", TYPE 3
      * AttachmentCount
      * Specifies the total number of attachments associated with the currently 
      * indexed message.
               PROPERTY-PUT, 6, @AttachmentCount,
                   "long (Property Value)", TYPE 3
      * AttachmentIndex
      * Sets the currently indexed attachment.
               PROPERTY-GET, 7, @AttachmentIndex
                       RETURNING "long", TYPE 3
      * AttachmentIndex
      * Sets the currently indexed attachment.
               PROPERTY-PUT, 7, @AttachmentIndex,
                   "long (Property Value)", TYPE 3
      * AttachmentName
      * Specifies the name of the currently indexed attachment file.
               PROPERTY-GET, 8, @AttachmentName
                       RETURNING "BSTR", TYPE 8
      * AttachmentName
      * Specifies the name of the currently indexed attachment file.
               PROPERTY-PUT, 8, @AttachmentName,
                   "BSTR (Property Value)", TYPE 8
      * AttachmentPathName
      * Specifies the full path name of the currently indexed attachment
               PROPERTY-GET, 9, @AttachmentPathName
                       RETURNING "BSTR", TYPE 8
      * AttachmentPathName
      * Specifies the full path name of the currently indexed attachment
               PROPERTY-PUT, 9, @AttachmentPathName,
                   "BSTR (Property Value)", TYPE 8
      * AttachmentPosition
      * Specifies the position of the currently indexed attachment within the 
      * message body
               PROPERTY-GET, 10, @AttachmentPosition
                       RETURNING "long", TYPE 3
      * AttachmentPosition
      * Specifies the position of the currently indexed attachment within the 
      * message body
               PROPERTY-PUT, 10, @AttachmentPosition,
                   "long (Property Value)", TYPE 3
      * AttachmentType
      * Specifies the type of the currently indexed file attachment.
               PROPERTY-GET, 11, @AttachmentType
                       RETURNING "short", TYPE 2
      * AttachmentType
      * Specifies the type of the currently indexed file attachment.
               PROPERTY-PUT, 11, @AttachmentType,
                   "short (Property Value)", TYPE 2
      * FetchMsgType
      * Specifies the message type to populate the message set.
               PROPERTY-GET, 12, @FetchMsgType
                       RETURNING "BSTR", TYPE 8
      * FetchMsgType
      * Specifies the message type to populate the message set.
               PROPERTY-PUT, 12, @FetchMsgType,
                   "BSTR (Property Value)", TYPE 8
      * FetchSorted
      * Specifies the message order when populating the message set with 
      * messages from the Inbox.
               PROPERTY-GET, 13, @FetchSorted
                       RETURNING "boolean", TYPE 11
      * FetchSorted
      * Specifies the message order when populating the message set with 
      * messages from the Inbox.
               PROPERTY-PUT, 13, @FetchSorted,
                   "boolean (Property Value)", TYPE 11
      * FetchUnreadOnly
      * Determines whether to restrict the messages in the message set to unread 
      * messages only.
               PROPERTY-GET, 14, @FetchUnreadOnly
                       RETURNING "boolean", TYPE 11
      * FetchUnreadOnly
      * Determines whether to restrict the messages in the message set to unread 
      * messages only.
               PROPERTY-PUT, 14, @FetchUnreadOnly,
                   "boolean (Property Value)", TYPE 11
      * MsgConversationID
      * Specifies the conversation thread identification value for the currently 
      * indexed message.
               PROPERTY-GET, 15, @MsgConversationID
                       RETURNING "BSTR", TYPE 8
      * MsgConversationID
      * Specifies the conversation thread identification value for the currently 
      * indexed message.
               PROPERTY-PUT, 15, @MsgConversationID,
                   "BSTR (Property Value)", TYPE 8
      * MsgCount
      * Indicates the total number of messages present in the message set during 
      * the current messaging session.
               PROPERTY-GET, 16, @MsgCount
                       RETURNING "long", TYPE 3
      * MsgCount
      * Indicates the total number of messages present in the message set during 
      * the current messaging session.
               PROPERTY-PUT, 16, @MsgCount,
                   "long (Property Value)", TYPE 3
      * MsgDateReceived
      * Specifies the date on which the currently indexed message was received.
               PROPERTY-GET, 17, @MsgDateReceived
                       RETURNING "BSTR", TYPE 8
      * MsgDateReceived
      * Specifies the date on which the currently indexed message was received.
               PROPERTY-PUT, 17, @MsgDateReceived,
                   "BSTR (Property Value)", TYPE 8
      * MsgID
      * Specifies the string identifier of the currently indexed message.
               PROPERTY-GET, 18, @MsgID
                       RETURNING "BSTR", TYPE 8
      * MsgID
      * Specifies the string identifier of the currently indexed message.
               PROPERTY-PUT, 18, @MsgID,
                   "BSTR (Property Value)", TYPE 8
      * MsgIndex
      * Specifies the index number of the currently indexed message.
               PROPERTY-GET, 19, @MsgIndex
                       RETURNING "long", TYPE 3
      * MsgIndex
      * Specifies the index number of the currently indexed message.
               PROPERTY-PUT, 19, @MsgIndex,
                   "long (Property Value)", TYPE 3
      * MsgNoteText
      * Specifies the text body of the message.
               PROPERTY-GET, 20, @MsgNoteText
                       RETURNING "BSTR", TYPE 8
      * MsgNoteText
      * Specifies the text body of the message.
               PROPERTY-PUT, 20, @MsgNoteText,
                   "BSTR (Property Value)", TYPE 8
      * MsgOrigAddress
      * Indicates the mail address of the originator of the currently indexed 
      * message
               PROPERTY-GET, 21, @MsgOrigAddress
                       RETURNING "BSTR", TYPE 8
      * MsgOrigAddress
      * Indicates the mail address of the originator of the currently indexed 
      * message
               PROPERTY-PUT, 21, @MsgOrigAddress,
                   "BSTR (Property Value)", TYPE 8
      * MsgOrigDisplayName
      * Specifies the originator's name for the currently indexed message
               PROPERTY-GET, 22, @MsgOrigDisplayName
                       RETURNING "BSTR", TYPE 8
      * MsgOrigDisplayName
      * Specifies the originator's name for the currently indexed message
               PROPERTY-PUT, 22, @MsgOrigDisplayName,
                   "BSTR (Property Value)", TYPE 8
      * MsgRead
      * Indicates whether the message has already been read.
               PROPERTY-GET, 23, @MsgRead
                       RETURNING "boolean", TYPE 11
      * MsgRead
      * Indicates whether the message has already been read.
               PROPERTY-PUT, 23, @MsgRead,
                   "boolean (Property Value)", TYPE 11
      * MsgReceiptRequested
      * Specifies whether a return receipt is requested for the currently 
      * indexed message.
               PROPERTY-GET, 24, @MsgReceiptRequested
                       RETURNING "boolean", TYPE 11
      * MsgReceiptRequested
      * Specifies whether a return receipt is requested for the currently 
      * indexed message.
               PROPERTY-PUT, 24, @MsgReceiptRequested,
                   "boolean (Property Value)", TYPE 11
      * MsgSent
      * Specifies whether the currently indexed message has already been sent to 
      * the mail server for distribution
               PROPERTY-GET, 25, @MsgSent
                       RETURNING "boolean", TYPE 11
      * MsgSent
      * Specifies whether the currently indexed message has already been sent to 
      * the mail server for distribution
               PROPERTY-PUT, 25, @MsgSent,
                   "boolean (Property Value)", TYPE 11
      * RecipAddress
      * Specifies the electronic mail address of the currently indexed 
      * recipient.
               PROPERTY-GET, 26, @RecipAddress
                       RETURNING "BSTR", TYPE 8
      * RecipAddress
      * Specifies the electronic mail address of the currently indexed 
      * recipient.
               PROPERTY-PUT, 26, @RecipAddress,
                   "BSTR (Property Value)", TYPE 8
      * RecipCount
      * Specifies the total number of recipients for the currently indexed 
      * message.
               PROPERTY-GET, 27, @RecipCount
                       RETURNING "long", TYPE 3
      * RecipCount
      * Specifies the total number of recipients for the currently indexed 
      * message.
               PROPERTY-PUT, 27, @RecipCount,
                   "long (Property Value)", TYPE 3
      * RecipDisplayName
      * Specifies the name of the currently indexed recipient.
               PROPERTY-GET, 28, @RecipDisplayName
                       RETURNING "BSTR", TYPE 8
      * RecipDisplayName
      * Specifies the name of the currently indexed recipient.
               PROPERTY-PUT, 28, @RecipDisplayName,
                   "BSTR (Property Value)", TYPE 8
      * RecipIndex
      * Sets the currently indexed recipient
               PROPERTY-GET, 29, @RecipIndex
                       RETURNING "long", TYPE 3
      * RecipIndex
      * Sets the currently indexed recipient
               PROPERTY-PUT, 29, @RecipIndex,
                   "long (Property Value)", TYPE 3
      * RecipType
      * Specifies the type of the currently indexed recipient.
               PROPERTY-GET, 30, @RecipType
                       RETURNING "short", TYPE 2
      * RecipType
      * Specifies the type of the currently indexed recipient.
               PROPERTY-PUT, 30, @RecipType,
                   "short (Property Value)", TYPE 2
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-GET, 31, @SessionID
                       RETURNING "long", TYPE 3
      * SessionID
      * Stores the current messaging session handle.
               PROPERTY-PUT, 31, @SessionID,
                   "long (Property Value)", TYPE 3
      * MsgSubject
      * Specifies the subject line for the currently indexed message as 
      * displayed in the message header
               PROPERTY-GET, 32, @MsgSubject
                       RETURNING "BSTR", TYPE 8
      * MsgSubject
      * Specifies the subject line for the currently indexed message as 
      * displayed in the message header
               PROPERTY-PUT, 32, @MsgSubject,
                   "BSTR (Property Value)", TYPE 8
      * MsgType
      * Specifies the type of the currently indexed message.
               PROPERTY-GET, 33, @MsgType
                       RETURNING "BSTR", TYPE 8
      * MsgType
      * Specifies the type of the currently indexed message.
               PROPERTY-PUT, 33, @MsgType,
                   "BSTR (Property Value)", TYPE 8
      * Action
      * Specifies what action is performed by the MAPI Control
               PROPERTY-GET, 34, @Action
                       RETURNING "short", TYPE 2
      * Action
      * Specifies what action is performed by the MAPI Control
               PROPERTY-PUT, 34, @Action,
                   "short (Property Value)", TYPE 2
      * Compose
      * Composes a message.
               METHOD, 35, @Compose
      * Copy
      * Copies the currently indexed message to the compose buffer.
               METHOD, 36, @Copy
      * Delete
      * Deletes a message, recipient, or attachment.
               METHOD, 45, @Delete,
                   "VARIANT" @vObj, TYPE 12
                       OPTIONAL 1
      * Fetch
      * Creates a message set from selected messages in the Inbox.
               METHOD, 37, @Fetch
      * Forward
      * Forwards a message.
               METHOD, 38, @Forward
      * Reply
      * Replies to a message.
               METHOD, 39, @Reply
      * ReplyAll
      * Replies to all message recipients.
               METHOD, 40, @ReplyAll
      * ResolveName
      * Resolves the name of the currently indexed recipient.
               METHOD, 41, @ResolveName
      * Save
      * Saves the message currently in the compose buffer (with MsgIndex = -1).
               METHOD, 42, @Save
      * Show
      * Shows details about recipient or the Address Book.
               METHOD, 44, @Show,
                   "VARIANT" @vDetails, TYPE 12
                       OPTIONAL 1
      * AboutBox
               METHOD, -552, @AboutBox
      * Send
      * Sends the message currently in the Compose buffer.
               METHOD, 43, @Send,
                   "VARIANT" @vDialog, TYPE 12
                       OPTIONAL 1
