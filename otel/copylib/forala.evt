* forala.evt
* forala.evt is generated from D:\Asya\acugt.ytl\otel\forala.Psf
* This is a generated file. DO NOT modify this file directly.


 Form1-Event-Proc.
     .

 Form1-Exception-Proc.
     PERFORM Form1-Ex-Other
     .
***   start event editor code   ***
*
 Form1-Bef-Create.
    perform adresleri-tasi
    open input genel
    move 1 to genel-anahtar
    read genel no lock
      invalid
        continue
    end-read
    close genel
    .
*
 Form1-Aft-Initdata.
    move tarih-tasi to tarih
    move "N" to rap-tip
    display acc-01 acc-02 acc-03
            acc-04 .
*
 Form1-Ex-Other.
    evaluate key-status
      when 1 perform yardimlar
      when 2 perform rapor-islem
    end-evaluate.
*
 yardimlar.
    evaluate control-id
      when 12
      when 2001 perform ara-acenta
      when 16
      when 17   perform ara-grup
    end-evaluate.
*
 ara-acenta.
    initialize acenta-cagir
    call "/asya/ytl/obj/otel/acenara.asy" 
      using acenta-cagir  
      on exception 
        perform callerr-proc
      not on exception
        if acenta-cagir <> spaces
           move acenta-cagir to acn-kod
           display acc-04
        end-if
    end-call
    move 4 to accept-control
    move 12 to control-id.
*
 ara-grup.
    initialize acn-grup-kod
    call "/asya/ytl/obj/otel/grupara.asy" 
      using "A", acn-grup-kod  
      on exception 
        perform callerr-proc
      not on exception
        display acc-08
    end-call
    move 4 to accept-control
    move 17 to control-id.
*
 acc-04-Aft-Procedure.
     open input acenta
     if acn-kod = spaces
        if acn-grup-kod = spaces
           move "Tum Acentalar"   to acenta-adi
        end-if
     else
        move acn-kod    to acenta-kodu
        read acenta no lock invalid
             move "Tanimsiz Acenta ..." to acenta-adi
             move 4 to accept-control
             move 12 to control-id
        end-read
        initialize acn-grup-kod
        move "Acenta Filtresi" to grup-adi
        display acc-08 lb-acngrupadi
     end-if
     display lb-acenadi,
     close acenta.
*
 acc-08-Aft-Procedure.
     open input grup
     if acn-grup-kod = spaces
        if acn-kod = spaces
           move "Tum Gruplar"   to grup-adi
        end-if
     else
        initialize grup-rec
        set grup-acenta to true
        move acn-grup-kod    to grup-kodu
        read grup no lock invalid
             move "Tanimsiz Acenta Grubu..." to grup-adi
             move 4 to accept-control
             move 17 to control-id
        end-read
        initialize acn-kod
        move "Grup Filtresi" to acenta-adi
        display acc-04 lb-acenadi
     end-if
     display lb-acngrupadi
     close grup.
*
 acenta-ger-ekle.
     open input acenta
      initialize takas-rec dokumer-rec detay 
                performans-kont
     move 1       to takas-tip
     start takas key not < takas-alt-anah invalid
           continue
     not invalid
     initialize fs-takas
     perform with test after until fs-takas = "10"
     read takas next no lock end move "10" to fs-takas
     not at end
          if takas-acenta = high-values then  
             move "10" to fs-takas
             else
           initialize dokumer-rec detay sayac
* Eger bilbord bittiyse yada fazlasini sattiysa
* o gunun bilbordu sifirlaniyor , eger hic bilbordu
* kalmadiysa kayit islem gormeyecek
          perform varying ii from 1 by 1 until ii > 31x
                  if takas-gun-sat-oda(ii) not > zeroes
                     initialize takas-gun-sat-oda(ii)
                  else
                     add 1 to sayac
                  end-if
          end-perform
          if sayac > zeroes
             continue
          else
             exit perform cycle
          end-if
          initialize top-sat-bil
          move takas-acenta        to acenta-kodu
          read acenta no lock invalid
          
            move acenta-kodu to acenta-adi
          if acenta-kodu(1:3) = high-values then
             if acenta-kodu(4:1) = "D" then move "TOP COMP       " to acenta-adi end-if
             if acenta-kodu(4:1) = "F" then move "TOP House USE  " to acenta-adi end-if
           
          end-if
          end-read
          move acenta-adi    to det-1(2:)
          perform varying i from 1 by 1 until i > 31x
                  compute top-sat-bil  = 
                  top-sat-bil  + takas-gun-sat-oda(i) 
                  compute takas-gen-sat-oda  = 
                  takas-gen-sat-oda  + takas-gun-sat-oda(i) 
                  move takas-gun-sat-oda(i) to z-4
                  compute kalan-oda(i) = kalan-oda(i) -
                                         takas-gun-sat-oda(i)
                  move z-4                     to det-2(i)
          end-perform
          move top-sat-bil to z-6
           move z-6           to det-3
          write dokumer-rec from detay
          
          end-if
     end-read
     end-perform
     end-start
     close acenta.
*
 rapor-islem.
     evaluate ay 
      when 1 when 3 when 5 when 7 when 8 when 10 when 12
          move 31 to 31x
     
      when 2
         if yil = 2004  or  yil = 2008 or  yil = 2012 or 
            yil = 2016  or  yil = 2020 then
               move 29 to 31x
          
            else
               move 28 to 31x
         end-if
     when other
        move 30 to 31x
        
     end-evaluate
     initialize comp-oda-dizi
     perform takas-no-al.
     open output takas close takas 
     open i-o takas with mass-update.
     perform takvim-oku.
     if gec-gecme = 1
        close takas
        delete file takas
        exit paragraph.

     open i-o genelfis
     move 1 to genelfis-anahtar
     read genelfis no lock invalid
          accept print-no from time
     not invalid
          add 1 to print-no
          rewrite genelfis-rec end-rewrite
     end-read
     close genelfis
     initialize dokumer-rec dokumer-anah dokumer-ozellikler-rec dokumer-dosya
      
     set  dokumer-asya-set to true
     move print-no         to dokumer-dosya-adi

     open output dokumer
*/WINDOW TITLE
     initialize dokumer-rec detay
     move "W"                    to det-dokumer-20(1:)
     move "Beklenen Doluluk Forecast" to det-filler
     write dokumer-rec from detay
*/ BASLIKLAR
     initialize dokumer-rec detay
     move "B"                  to det-dokumer-20(1:)
     move "Beklenen Doluluk Forecast" to det-filler
     write dokumer-rec from detay
     initialize dokumer-rec detay
     move "B"                  to det-dokumer-20(1:)
     write dokumer-rec from detay

*/ DOKUMER OZELLIKLER-REC
     initialize dokumer-rec detay
     move "O"                        to det-dokumer-20(1:)
     move "E" to dokumer-oto-sayfa-basi
     move 56  to dokumer-oto-sayfa-satir
     move "|" to dokumer-detay-kolon-ayirici
     move "LLLLLLLLLLLLLLLLLLLLLLLL" to dokumer-align-occ
     move dokumer-ozellikler-rec     to det-filler
     write dokumer-rec from detay
*/ BASLIKLAR 
     initialize dokumer-rec detay
     move "D1"               to det-dokumer-20(1:)     
     perform varying i from 1 by 1 until i > 31x
             move gun-dizi(i)    to det-2(i)(1:2)
             move ay-dizi(i)     to det-2(i)(3:2)
             move "|"            to fil-1 fil-2(i) fil-3
     end-perform
     move "TOPLAM"                to det-3
     write dokumer-rec from detay.

     initialize dokumer-rec detay
     move "D2"               to det-dokumer-20(1:)     
     move "-"                to det-dokumer-20(5:1)
     perform varying i from 1 by 1 until i > 31x
              move all "-"   to det-1 det-2(i) det-3
              move "|"       to fil-1 fil-2(i) fil-3
     end-perform
     write dokumer-rec from detay
****************
       perform acenta-ger-ekle


*************
*Geriye kalan oda miktarlari takas-tip 1 de 
     initialize takas-rec
     move 1 to takas-tip 
     move high-values to takas-acenta
     read takas no lock invalid
          continue
     end-read
     initialize  dokumer-rec detay kalan-oda-dizi
     perform varying i from 1 by 1 until i > 31x
             move takas-gun-sat-oda(i) to z-4 
             move z-4                    to det-2(i)
     end-perform
     move "REEL ODA TOP"          to det-1
     move takas-gen-sat-oda  to z-6
    
     move z-6                 to det-3
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay


     initialize dokumer-rec detay kalan-oda-dizi
     perform varying i from 1 by 1 until i > 31x
             move takas-gun-kalan-oda(i) to z-4 kalan-oda(i)
           
             move z-4                    to det-2(i)
     end-perform
     move "REEL KALAN ODA"          to det-1
     move takas-gen-kal-oda  to z-6
    
     move z-6                 to det-3
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay

     initialize dokumer-rec detay
     perform varying i from 1 by 1 until i > 31x
     compute yuzdek rounded = 
            (takas-gun-sat-oda(i) /( takas-gun-sat-oda(i) +  takas-gun-kalan-oda(i)) ) * 100
             
               move yuzdek                to yuzde-gosterk
               move yuzde-gosterk         to det-2(i)
     end-perform
     move "REEL DOLU%"          to det-1
     compute yuzde rounded = 
            (takas-gen-sat-oda / toplam-hazir-oda) * 100
     
     move yuzde                to yuzde-goster
     move yuzde-goster         to det-3
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay

*acenta bilbordlar takas-tip 2 de
     initialize takas-rec dokumer-rec detay 
                performans-kont
     move 2       to takas-tip
     start takas key not < takas-alt-anah invalid
           continue
     not invalid
     initialize fs-takas
     perform with test after until fs-takas = "10"
     read takas next no lock end move "10" to fs-takas
     not at end
          initialize dokumer-rec detay sayac
* Eger bilbord bittiyse yada fazlasini sattiysa
* o gunun bilbordu sifirlaniyor , eger hic bilbordu
* kalmadiysa kayit islem gormeyecek
          perform varying ii from 1 by 1 until ii > 31x
                  if takas-gun-sat-oda(ii) not > zeroes
                     initialize takas-gun-sat-oda(ii)
                  else
                     add 1 to sayac
                  end-if
          end-perform
          if sayac > zeroes
             continue
          else
             exit perform cycle
          end-if
          if performans-kont = high-values
             move takas-performans to performans-kont
          else
             if takas-performans <> performans-kont
                
                
                move "SON KALAN-"        to det-1
                move performans-kont   to det-1(11:)
                perform performans-satir-ekle
             end-if
          end-if
             initialize top-sat-bil
*          move takas-acenta        to det-1
          move takas-acenta-adi    to det-1(2:)
          perform varying i from 1 by 1 until i > 31x
                  compute top-sat-bil = top-sat-bil +
                  takas-gun-sat-oda(i)
                  move takas-gun-sat-oda(i) to z-4
                  compute kalan-oda(i) = kalan-oda(i) -
                                         takas-gun-sat-oda(i)
                  move z-4                     to det-2(i)
          end-perform
          move top-sat-bil to z-6
          move z-6    to det-3
          write dokumer-rec from detay
          move "E"    to kalan-eh
     end-read
     end-perform
     end-start.

     if kalan-eh = "E" 
       
        move "SON KALAN-"        to det-1
         move performans-kont   to det-1(11:)  
        perform performans-satir-ekle.

     move "Kalan :"            to det-1
     
     
     
     
*     perform performans-satir-ekle.

     

     initialize dokumer-rec detay 
      perform varying i from 1 by 1 until i > 31x
             compute takas-gun-sat-oda(i) =
               hazir-oda(i) - kalan-oda(i)
             move takas-gun-sat-oda(i)    to z-4
             move z-4                    to det-2(i)
             
     end-perform
    
     move toplam             to z-6
     move z-6     to det-3
    
     move "BEKLENEN ODA"          to det-1
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay



      initialize dokumer-rec detay 
     
      perform varying i from 1 by 1 until i > 31x
          if kalan-oda(i) > 0 then 
             
             compute yuzdek rounded =
                 takas-gun-sat-oda(i) / hazir-oda(i) * 100
             move yuzdek                to yuzde-gosterk
             move yuzde-gosterk         to det-2(i)
          else
             move "****" to det-2(i)
           end-if
     end-perform
    
     compute yuzde rounded = 
             (toplam / toplam-hazir-oda) * 100
     move yuzde             to yuzde-goster
     move yuzde-goster      to det-3
    
     move "BEKLENEN %"          to det-1
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay


****************
    initialize dokumer-rec detay 
    initialize comp-toplam
    
      perform varying i from 1 by 1 until i > 31x
         
             compute takas-gun-sat-oda(i) =
               hazir-oda(i) - kalan-oda(i) - comp-oda(i)
            compute comp-toplam = comp-toplam  + takas-gun-sat-oda(i)
             move takas-gun-sat-oda(i)    to z-4
             move z-4                    to det-2(i)
             
     end-perform
    
     move comp-toplam             to z-6
     move z-6     to det-3
    
     move "COMP HARIC ODA"          to det-1
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay



      initialize dokumer-rec detay 
     
      perform varying i from 1 by 1 until i > 31x
          if takas-gun-sat-oda(i) < hazir-oda(i) then 
             
             compute yuzdek rounded =
                 takas-gun-sat-oda(i) / hazir-oda(i) * 100
             move yuzdek                to yuzde-gosterk
             move yuzde-gosterk         to det-2(i)
          else
             move "****" to det-2(i)
           end-if
     end-perform
    
     compute yuzde rounded = 
             (comp-toplam / toplam-hazir-oda) * 100
     move yuzde             to yuzde-goster
     move yuzde-goster      to det-3
    
     move "BEKLENEN %"          to det-1
     move "A"                  to det-dokumer-20(3:1)
     move 144                  to det-renk1
     write dokumer-rec from detay




     close dokumer
     call dokumer-prog on exception
          perform callerr-proc
     not on exception
          cancel dokumer-prog
     end-call
     close takas
     delete file takas.


 performans-satir-ekle.
     initialize toplam
     initialize top-sat-bil
     perform varying i from 1 by 1 until i > 31x
             move kalan-oda(i)    to z-4
             move z-4             to det-2(i)
             compute toplam = toplam + kalan-oda(i)
     end-perform
     move toplam to z-6
     compute toplam = toplam-hazir-oda - toplam
     move z-6      to det-3
     move "1"               to det-dokumer-20(10:1)
     move "A"               to det-dokumer-20(3:1)
     move 481               to det-renk1
     write dokumer-rec from detay
     initialize dokumer-rec detay
     move takas-performans  to performans-kont
     initialize kalan-eh.
        
 takvim-oku.
     initialize takvim-rec i ii gec-gecme tarih-dizi 
     hazir-oda-dizi toplam-hazir-oda

     open input takvim cast rez bilbord acenta grup konum odalar cast3.

     move tarih to takvim-anah.
     start takvim key not < takvim-anah invalid
           move 4 to mesaj-no
           perform mesaj-ver
           move 1 to gec-gecme
     not invalid
     initialize fs-takvim
     perform with test after until fs-takvim = "10"
     read takvim next no lock end move "10" to fs-takvim
     not at end
          add 1 to i
          if i > 31x
             exit perform
          end-if
          initialize takas-rec
          move 1               to takas-tip
          move high-values to takas-acenta
          read takas no lock invalid
               initialize takas-rec
               move high-values to takas-acenta
               move 1          to takas-tip
          end-read
          move takvim-gun       to gun-dizi(i) takas-gun(i)
          move takvim-ay        to ay-dizi(i)  takas-ay(i)
          move takvim-yil       to yil-dizi(i) takas-yil(i)
          move takvim-hazir-oda to hazir-oda(i)
          perform cast-oku
          add takvim-hazir-oda  to toplam-hazir-oda
          compute takas-gun-kalan-oda(i) =
                  hazir-oda(i) - takas-gun-sat-oda(i)
        
          compute takas-gen-sat-oda      =
                  takas-gen-sat-oda   + takas-gun-sat-oda(i)
           compute takas-gen-kal-oda      =
                  takas-gen-kal-oda   + takas-gun-kalan-oda(i)
          write takas-rec invalid
                rewrite takas-rec end-rewrite
          end-write

          perform bilbord-oku

     end-read
     end-perform
     end-start
     close takvim cast rez bilbord acenta grup konum odalar cast3.


 bilbord-oku.
      
     initialize bilbord-rec  son-acenta son-tarih
     move takvim-anah     to bilbord-tarih
     start bilbord key not < bilbord-anah2 invalid
           exit paragraph
     not invalid
     initialize fs-bilbord
     perform with test after until fs-bilbord = "10"
     read bilbord next no lock end move "10" to fs-bilbord
     not at end
          if bilbord-tarih <> takvim-anah
             move "10" to fs-bilbord
             exit perform
          end-if
          initialize gec-gecme

          move bilbord-oda-tip   to konum-anahtar
          read konum no lock invalid 
               exit perform cycle
          end-read

          if acn-grup-kod not = spaces
             initialize grup-rec
             set grup-acenta       to true
             move acn-grup-kod     to grup-kodu
             move bilbord-acenta   to grup-alt
             read grup no lock invalid 
                  exit perform cycle
             end-read
          else
             if acn-kod not = spaces and 
                acn-kod <> bilbord-acenta
                    exit perform cycle
                end-if
          end-if
          if bilbord-oda-tip = 1 then 
             move bilbord-acenta to son-acenta
             move bilbord-rson-tarih to son-tarih
          end-if
          initialize takas-rec
          if bilbord-acenta = son-acenta and 
             son-tarih > "20000000" and  op-haric = 1  and
             son-tarih < tarih-tasi then 
             exit perform cycle
          end-if
          move 2                 to takas-tip
          move bilbord-acenta    to takas-acenta
          read takas no lock invalid
               initialize takas-rec
                  move 2                 to takas-tip
                  move bilbord-acenta    to takas-acenta acenta-kodu
                  read acenta no lock invalid
                       display message box bilbord-acenta
                       move "*****"      to acenta-adi(5:)
                  end-read
                  move acenta-rap-sira   to takas-rap-sira
                  move acenta-performans to takas-performans
                  move acenta-adi        to takas-acenta-adi
                  if acenta-performans = zeroes or
                     acenta-performans = spaces
                            move high-values to acenta-performans
                  end-if
          end-read
          compute takas-gun-sat-oda(i) = 
                  takas-gun-sat-oda(i) + bilbord-oda - bilbord-sat-oda   
          compute takas-gen-sat-oda    =
                  takas-gen-sat-oda    + bilbord-oda - bilbord-sat-oda   
          write takas-rec invalid
                rewrite takas-rec end-rewrite
          end-write
     end-read
     end-perform
     end-start.


 cast-oku.
      open input kodlar02
     initialize cast-rec
     move takvim-anah      to cast-tarih
     start cast key not < cast-tarih invalid
           continue
     not invalid
     initialize fs-cast
     perform with test after until fs-cast = "10"
     read cast next no lock end move "10" to fs-cast
     not at end
           if cast-tarih > takvim-anah
              move "10" to fs-cast
              exit perform
           end-if
           move cast-rez-no    to rez-no
           read rez no lock invalid
                exit perform cycle
           end-read
           evaluate true
           when rap-tip = "N"
                if rez-durumu <> "I"
                   exit perform cycle
                end-if
                if rez-k-g-b <> "K"
                   if rez-k-g-b   = "O" and info-dahil = 1
                     continue
                     else
                     exit perform cycle
                    end-if
                end-if
               
           when rap-tip = "W"
                if rez-durumu <> "I"
                   exit perform cycle
                end-if
                if rez-k-g-b = "K"
                   exit perform cycle
                end-if
           when rap-tip = "S"
                if rez-durumu <> "S"
                   exit perform cycle
                end-if
           end-evaluate
           if rez-odano not = spaces and birles-dus = 1 then 
              move rez-odano to odalar-anah
              read odalar no lock invalid continue
              not invalid
                 if odalar-hayali = "H" then
                         exit perform cycle
                 end-if
              end-read
            end-if  

           if rez-cik-tar = takvim-anah
              exit perform cycle
           end-if
           initialize takas-rec  comp-rez
            move 1               to takas-tip
             move rez-acenta to takas-acenta

            
              
              initialize kodlar02-rec
                 move "B" to KODLAR02-TIPI
               
               move rez-odeme-tipi to kodlar02-kodu
               read kodlar02 no lock invalid
                  continue
                   not invalid
                   if ode-TIPI = "D" or "F"
                      move 1 to   comp-rez
                      if comp-ayir = 1 then
                      move high-values to takas-acenta
                      move  ode-tipi to  takas-acenta(4:1)
                      end-if
                   end-if
               end-read


        
           

            read takas no lock invalid
                   continue
                
            
            end-read
             compute takas-gun-sat-oda(i) =
                   takas-gun-sat-oda(i) + 1
                   if comp-rez not = 1 
             compute takas-gun-net-oda(i) =
                   takas-gun-net-oda(i) + 1
                   end-if
           write takas-rec invalid rewrite takas-rec end-write
          
           initialize takas-rec
          move 1               to takas-tip
          move high-values to takas-acenta
          read takas no lock invalid
               initialize takas-rec
               move 1          to takas-tip
               move high-values to takas-acenta
          end-read
           
           compute takas-gun-sat-oda(i) =
                   takas-gun-sat-oda(i) + 1
           if comp-rez not = 1 
             compute takas-gun-net-oda(i) =
                   takas-gun-net-oda(i) + 1
                   else
             compute  comp-oda(i) = comp-oda(i) + 1
           end-if
           write takas-rec invalid rewrite takas-rec end-write
            
     end-read
     end-perform
     end-start.
     close kodlar02.
 takas-no-al.
     open i-o genelfis
     move 1 to genelfis-anahtar
     read genelfis no lock
       invalid 
         move 1 to ekran-fis-1,
     end-read
    
     add 1 to ekran-fis-1
     move ekran-fis-1(2:) to takas-no
     rewrite genelfis-rec invalid 
             write genelfis-rec end-write
     end-rewrite
     close genelfis
     .
 
