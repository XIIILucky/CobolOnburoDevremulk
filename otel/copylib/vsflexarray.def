      * \ASYA\ACUGT\otel\Copylib\vsFlexArray.def - ActiveX control definitions 
      * for vsFlexLib
      * Generated: Pazartesi, Þubat 14, 2000
           
           OBJECT @vsFlexLib
           
      * MergeCompareSettings
           CLASS @MergeCompareSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "MergeCompareSettings"
      * "long flexMCExact"
               ENUMERATOR, @flexMCExact, 0
      * "long flexMCNoCase"
               ENUMERATOR, @flexMCNoCase, 1
      * "long flexMCTrimNoCase"
               ENUMERATOR, @flexMCTrimNoCase, 2
           
      * EllipsisSettings
           CLASS @EllipsisSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "EllipsisSettings"
      * "long flexNoEllipsis"
               ENUMERATOR, @flexNoEllipsis, 0
      * "long flexEllipsisEnd"
               ENUMERATOR, @flexEllipsisEnd, 1
      * "long flexEllipsisPath"
               ENUMERATOR, @flexEllipsisPath, 2
           
      * CellCheckedSettings
           CLASS @CellCheckedSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "CellCheckedSettings"
      * "long flexNoCheckbox"
               ENUMERATOR, @flexNoCheckbox, 0
      * "long flexChecked"
               ENUMERATOR, @flexChecked, 1
      * "long flexUnchecked"
               ENUMERATOR, @flexUnchecked, 2
           
      * TabBehaviorSettings
           CLASS @TabBehaviorSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "TabBehaviorSettings"
      * "long flexTabControls"
               ENUMERATOR, @flexTabControls, 0
      * "long flexTabCells"
               ENUMERATOR, @flexTabCells, 1
           
      * SaveLoadSettings
           CLASS @SaveLoadSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "SaveLoadSettings"
      * "long flexFileAll"
               ENUMERATOR, @flexFileAll, 0
      * "long flexFileData"
               ENUMERATOR, @flexFileData, 1
      * "long flexFileFormat"
               ENUMERATOR, @flexFileFormat, 2
           
      * ArchiveSettings
           CLASS @ArchiveSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ArchiveSettings"
      * "long arcAdd"
               ENUMERATOR, @arcAdd, 0
      * "long arcStore"
               ENUMERATOR, @arcStore, 1
      * "long arcExtract"
               ENUMERATOR, @arcExtract, 2
      * "long arcDelete"
               ENUMERATOR, @arcDelete, 3
           
      * ArchiveInfoSettings
           CLASS @ArchiveInfoSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ArchiveInfoSettings"
      * "long arcFileCount"
               ENUMERATOR, @arcFileCount, 0
      * "long arcFileName"
               ENUMERATOR, @arcFileName, 1
      * "long arcFileSize"
               ENUMERATOR, @arcFileSize, 2
      * "long arcFileCompressedSize"
               ENUMERATOR, @arcFileCompressedSize, 3
      * "long arcFileDate"
               ENUMERATOR, @arcFileDate, 4
           
      * OleDragModeSettings
           CLASS @OleDragModeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "OleDragModeSettings"
      * "long flexOleDragManual"
               ENUMERATOR, @flexOleDragManual, 0
      * "long flexOleDragAutomatic"
               ENUMERATOR, @flexOleDragAutomatic, 1
           
      * OleDropModeSettings
           CLASS @OleDropModeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "OleDropModeSettings"
      * "long flexOleDropNone"
               ENUMERATOR, @flexOleDropNone, 0
      * "long flexOleDropManual"
               ENUMERATOR, @flexOleDropManual, 1
      * "long flexOleDropAutomatic"
               ENUMERATOR, @flexOleDropAutomatic, 2
           
      * DataModeSettings
           CLASS @DataModeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "DataModeSettings"
      * "long flexDMFree"
               ENUMERATOR, @flexDMFree, 0
      * "long flexDMBound"
               ENUMERATOR, @flexDMBound, 1
           
      * OwnerDrawSettings
           CLASS @OwnerDrawSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "OwnerDrawSettings"
      * "long flexODNone"
               ENUMERATOR, @flexODNone, 0
      * "long flexODOver"
               ENUMERATOR, @flexODOver, 1
      * "long flexODContent"
               ENUMERATOR, @flexODContent, 2
      * "long flexODComplete"
               ENUMERATOR, @flexODComplete, 3
      * "long flexODOverFixed"
               ENUMERATOR, @flexODOverFixed, 4
      * "long flexODContentFixed"
               ENUMERATOR, @flexODContentFixed, 5
      * "long flexODCompleteFixed"
               ENUMERATOR, @flexODCompleteFixed, 6
           
      * DataTypeSettings
           CLASS @DataTypeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "DataTypeSettings"
      * "long flexDTEmpty"
               ENUMERATOR, @flexDTEmpty, 0
      * "long flexDTShort"
               ENUMERATOR, @flexDTShort, 2
      * "long flexDTLong"
               ENUMERATOR, @flexDTLong, 3
      * "long flexDTSingle"
               ENUMERATOR, @flexDTSingle, 4
      * "long flexDTDouble"
               ENUMERATOR, @flexDTDouble, 5
      * "long flexDTCurrency"
               ENUMERATOR, @flexDTCurrency, 6
      * "long flexDTDate"
               ENUMERATOR, @flexDTDate, 7
      * "long flexDTString"
               ENUMERATOR, @flexDTString, 8
      * "long flexDTBoolean"
               ENUMERATOR, @flexDTBoolean, 11
      * "long flexDTLong8"
               ENUMERATOR, @flexDTLong8, 20
      * "long flexDTStringC"
               ENUMERATOR, @flexDTStringC, 30
      * "long flexDTStringW"
               ENUMERATOR, @flexDTStringW, 31
           
      * AutoSizeSettings
           CLASS @AutoSizeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "AutoSizeSettings"
      * "long flexAutoSizeColWidth"
               ENUMERATOR, @flexAutoSizeColWidth, 0
      * "long flexAutoSizeRowHeight"
               ENUMERATOR, @flexAutoSizeRowHeight, 1
           
      * CollapsedSettings
           CLASS @CollapsedSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "CollapsedSettings"
      * "long flexOutlineExpanded"
               ENUMERATOR, @flexOutlineExpanded, 0
      * "long flexOutlineSubtotals"
               ENUMERATOR, @flexOutlineSubtotals, 1
      * "long flexOutlineCollapsed"
               ENUMERATOR, @flexOutlineCollapsed, 2
           
      * OutlineBarSettings
           CLASS @OutlineBarSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "OutlineBarSettings"
      * "long flexOutlineBarNone"
               ENUMERATOR, @flexOutlineBarNone, 0
      * "long flexOutlineBarComplete"
               ENUMERATOR, @flexOutlineBarComplete, 1
      * "long flexOutlineBarSimple"
               ENUMERATOR, @flexOutlineBarSimple, 2
           
      * SubtotalSettings
           CLASS @SubtotalSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "SubtotalSettings"
      * "long flexSTNone"
               ENUMERATOR, @flexSTNone, 0
      * "long flexSTClear"
               ENUMERATOR, @flexSTClear, 1
      * "long flexSTSum"
               ENUMERATOR, @flexSTSum, 2
      * "long flexSTPercent"
               ENUMERATOR, @flexSTPercent, 3
      * "long flexSTCount"
               ENUMERATOR, @flexSTCount, 4
      * "long flexSTAverage"
               ENUMERATOR, @flexSTAverage, 5
      * "long flexSTMax"
               ENUMERATOR, @flexSTMax, 6
      * "long flexSTMin"
               ENUMERATOR, @flexSTMin, 7
      * "long flexSTStd"
               ENUMERATOR, @flexSTStd, 8
      * "long flexSTVar"
               ENUMERATOR, @flexSTVar, 9
           
      * SortSettings
           CLASS @SortSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "SortSettings"
      * "long flexSortNone"
               ENUMERATOR, @flexSortNone, 0
      * "long flexSortGenericAscending"
               ENUMERATOR, @flexSortGenericAscending, 1
      * "long flexSortGenericDescending"
               ENUMERATOR, @flexSortGenericDescending, 2
      * "long flexSortNumericAscending"
               ENUMERATOR, @flexSortNumericAscending, 3
      * "long flexSortNumericDescending"
               ENUMERATOR, @flexSortNumericDescending, 4
      * "long flexSortStringNoCaseAscending"
               ENUMERATOR, @flexSortStringNoCaseAscending, 5
      * "long flexSortStringNoCaseDescending"
               ENUMERATOR, @flexSortStringNoCaseDescending, 6
      * "long flexSortStringAscending"
               ENUMERATOR, @flexSortStringAscending, 7
      * "long flexSortStringDescending"
               ENUMERATOR, @flexSortStringDescending, 8
      * "long flexSortCustom"
               ENUMERATOR, @flexSortCustom, 9
      * "long flexSortUseColSort"
               ENUMERATOR, @flexSortUseColSort, 10
           
      * ClearWhatSettings
           CLASS @ClearWhatSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ClearWhatSettings"
      * "long flexClearEverything"
               ENUMERATOR, @flexClearEverything, 0
      * "long flexClearText"
               ENUMERATOR, @flexClearText, 1
      * "long flexClearFormatting"
               ENUMERATOR, @flexClearFormatting, 2
           
      * ClearWhereSettings
           CLASS @ClearWhereSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ClearWhereSettings"
      * "long flexClearEverywhere"
               ENUMERATOR, @flexClearEverywhere, 0
      * "long flexClearScrollable"
               ENUMERATOR, @flexClearScrollable, 1
      * "long flexClearSelection"
               ENUMERATOR, @flexClearSelection, 2
           
      * AppearanceSettings
           CLASS @AppearanceSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "AppearanceSettings"
      * "long flexFlat"
               ENUMERATOR, @flexFlat, 0
      * "long flex3D"
               ENUMERATOR, @flex3D, 1
           
      * FocusRectSettings
           CLASS @FocusRectSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "FocusRectSettings"
      * "long flexFocusNone"
               ENUMERATOR, @flexFocusNone, 0
      * "long flexFocusLight"
               ENUMERATOR, @flexFocusLight, 1
      * "long flexFocusHeavy"
               ENUMERATOR, @flexFocusHeavy, 2
           
      * ShowSelSettings
           CLASS @ShowSelSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ShowSelSettings"
      * "long flexHighlightNever"
               ENUMERATOR, @flexHighlightNever, 0
      * "long flexHighlightAlways"
               ENUMERATOR, @flexHighlightAlways, 1
      * "long flexHighlightWithFocus"
               ENUMERATOR, @flexHighlightWithFocus, 2
           
      * ScrollBarsSettings
           CLASS @ScrollBarsSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "ScrollBarsSettings"
      * "long flexScrollBarNone"
               ENUMERATOR, @flexScrollBarNone, 0
      * "long flexScrollBarHorizontal"
               ENUMERATOR, @flexScrollBarHorizontal, 1
      * "long flexScrollBarVertical"
               ENUMERATOR, @flexScrollBarVertical, 2
      * "long flexScrollBarBoth"
               ENUMERATOR, @flexScrollBarBoth, 3
           
      * TextStyleSettings
           CLASS @TextStyleSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "TextStyleSettings"
      * "long flexTextFlat"
               ENUMERATOR, @flexTextFlat, 0
      * "long flexTextRaised"
               ENUMERATOR, @flexTextRaised, 1
      * "long flexTextInset"
               ENUMERATOR, @flexTextInset, 2
      * "long flexTextRaisedLight"
               ENUMERATOR, @flexTextRaisedLight, 3
      * "long flexTextInsetLight"
               ENUMERATOR, @flexTextInsetLight, 4
           
      * FillStyleSettings
           CLASS @FillStyleSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "FillStyleSettings"
      * "long flexFillSingle"
               ENUMERATOR, @flexFillSingle, 0
      * "long flexFillRepeat"
               ENUMERATOR, @flexFillRepeat, 1
           
      * GridStyleSettings
           CLASS @GridStyleSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "GridStyleSettings"
      * "long flexGridNone"
               ENUMERATOR, @flexGridNone, 0
      * "long flexGridFlat"
               ENUMERATOR, @flexGridFlat, 1
      * "long flexGridInset"
               ENUMERATOR, @flexGridInset, 2
      * "long flexGridRaised"
               ENUMERATOR, @flexGridRaised, 3
      * "long flexGridFlatHorz"
               ENUMERATOR, @flexGridFlatHorz, 4
      * "long flexGridInsetHorz"
               ENUMERATOR, @flexGridInsetHorz, 5
      * "long flexGridRaisedHorz"
               ENUMERATOR, @flexGridRaisedHorz, 6
      * "long flexGridSkipHorz"
               ENUMERATOR, @flexGridSkipHorz, 7
      * "long flexGridFlatVert"
               ENUMERATOR, @flexGridFlatVert, 8
      * "long flexGridInsetVert"
               ENUMERATOR, @flexGridInsetVert, 9
      * "long flexGridRaisedVert"
               ENUMERATOR, @flexGridRaisedVert, 10
      * "long flexGridSkipVert"
               ENUMERATOR, @flexGridSkipVert, 11
           
      * SelModeSettings
           CLASS @SelModeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "SelModeSettings"
      * "long flexSelectionFree"
               ENUMERATOR, @flexSelectionFree, 0
      * "long flexSelectionByRow"
               ENUMERATOR, @flexSelectionByRow, 1
      * "long flexSelectionByColumn"
               ENUMERATOR, @flexSelectionByColumn, 2
      * "long flexSelectionListBox"
               ENUMERATOR, @flexSelectionListBox, 3
           
      * MergeSettings
           CLASS @MergeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "MergeSettings"
      * "long flexMergeNever"
               ENUMERATOR, @flexMergeNever, 0
      * "long flexMergeFree"
               ENUMERATOR, @flexMergeFree, 1
      * "long flexMergeRestrictRows"
               ENUMERATOR, @flexMergeRestrictRows, 2
      * "long flexMergeRestrictColumns"
               ENUMERATOR, @flexMergeRestrictColumns, 3
      * "long flexMergeRestrictAll"
               ENUMERATOR, @flexMergeRestrictAll, 4
           
      * PictureTypeSettings
           CLASS @PictureTypeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "PictureTypeSettings"
      * "long flexPictureColor"
               ENUMERATOR, @flexPictureColor, 0
      * "long flexPictureMonochrome"
               ENUMERATOR, @flexPictureMonochrome, 1
           
      * AllowUserResizeSettings
           CLASS @AllowUserResizeSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "AllowUserResizeSettings"
      * "long flexResizeNone"
               ENUMERATOR, @flexResizeNone, 0
      * "long flexResizeColumns"
               ENUMERATOR, @flexResizeColumns, 1
      * "long flexResizeRows"
               ENUMERATOR, @flexResizeRows, 2
      * "long flexResizeBoth"
               ENUMERATOR, @flexResizeBoth, 3
           
      * SubtotalPositionSettings
           CLASS @SubtotalPositionSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "SubtotalPositionSettings"
      * "long flexSTBelow"
               ENUMERATOR, @flexSTBelow, 0
      * "long flexSTAbove"
               ENUMERATOR, @flexSTAbove, 1
           
      * MousePointerSettings
           CLASS @MousePointerSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "MousePointerSettings"
      * "long flexDefault"
               ENUMERATOR, @flexDefault, 0
      * "long flexArrow"
               ENUMERATOR, @flexArrow, 1
      * "long flexCross"
               ENUMERATOR, @flexCross, 2
      * "long flexIBeam"
               ENUMERATOR, @flexIBeam, 3
      * "long flexIcon"
               ENUMERATOR, @flexIcon, 4
      * "long flexSize"
               ENUMERATOR, @flexSize, 5
      * "long flexSizeNESW"
               ENUMERATOR, @flexSizeNESW, 6
      * "long flexSizeNS"
               ENUMERATOR, @flexSizeNS, 7
      * "long flexSizeNWSE"
               ENUMERATOR, @flexSizeNWSE, 8
      * "long flexSizeEW"
               ENUMERATOR, @flexSizeEW, 9
      * "long flexUpArrow"
               ENUMERATOR, @flexUpArrow, 10
      * "long flexHourglass"
               ENUMERATOR, @flexHourglass, 11
      * "long flexNoDrop"
               ENUMERATOR, @flexNoDrop, 12
      * "long flexArrowHourGlass"
               ENUMERATOR, @flexArrowHourGlass, 13
      * "long flexArrowQuestion"
               ENUMERATOR, @flexArrowQuestion, 14
      * "long flexSizeAll"
               ENUMERATOR, @flexSizeAll, 15
      * "long flexCustom"
               ENUMERATOR, @flexCustom, 99
           
      * AlignmentSettings
           CLASS @AlignmentSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "AlignmentSettings"
      * "long flexAlignLeftTop"
               ENUMERATOR, @flexAlignLeftTop, 0
      * "long flexAlignLeftCenter"
               ENUMERATOR, @flexAlignLeftCenter, 1
      * "long flexAlignLeftBottom"
               ENUMERATOR, @flexAlignLeftBottom, 2
      * "long flexAlignCenterTop"
               ENUMERATOR, @flexAlignCenterTop, 3
      * "long flexAlignCenterCenter"
               ENUMERATOR, @flexAlignCenterCenter, 4
      * "long flexAlignCenterBottom"
               ENUMERATOR, @flexAlignCenterBottom, 5
      * "long flexAlignRightTop"
               ENUMERATOR, @flexAlignRightTop, 6
      * "long flexAlignRightCenter"
               ENUMERATOR, @flexAlignRightCenter, 7
      * "long flexAlignRightBottom"
               ENUMERATOR, @flexAlignRightBottom, 8
      * "long flexAlignGeneral"
               ENUMERATOR, @flexAlignGeneral, 9
           
      * PictureAlignmentSettings
           CLASS @PictureAlignmentSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "PictureAlignmentSettings"
      * "long flexPicAlignLeftTop"
               ENUMERATOR, @flexPicAlignLeftTop, 0
      * "long flexPicAlignLeftCenter"
               ENUMERATOR, @flexPicAlignLeftCenter, 1
      * "long flexPicAlignLeftBottom"
               ENUMERATOR, @flexPicAlignLeftBottom, 2
      * "long flexPicAlignCenterTop"
               ENUMERATOR, @flexPicAlignCenterTop, 3
      * "long flexPicAlignCenterCenter"
               ENUMERATOR, @flexPicAlignCenterCenter, 4
      * "long flexPicAlignCenterBottom"
               ENUMERATOR, @flexPicAlignCenterBottom, 5
      * "long flexPicAlignRightTop"
               ENUMERATOR, @flexPicAlignRightTop, 6
      * "long flexPicAlignRightCenter"
               ENUMERATOR, @flexPicAlignRightCenter, 7
      * "long flexPicAlignRightBottom"
               ENUMERATOR, @flexPicAlignRightBottom, 8
      * "long flexPicAlignStretch"
               ENUMERATOR, @flexPicAlignStretch, 9
      * "long flexPicAlignTile"
               ENUMERATOR, @flexPicAlignTile, 10
           
      * StringErrorSettings
           CLASS @StringErrorSettings
               CLSID, 00000000-0000-0000-0000-000000000000
               NAME, "StringErrorSettings"
      * "long flexErrNone"
               ENUMERATOR, @flexErrNone, 0
      * "long flexErrOutOfMemory"
               ENUMERATOR, @flexErrOutOfMemory, 1
      * "long flexErrSquareB"
               ENUMERATOR, @flexErrSquareB, 2
      * "long flexErrCurlyB"
               ENUMERATOR, @flexErrCurlyB, 3
      * "long flexErrBadPattern"
               ENUMERATOR, @flexErrBadPattern, 4
      * "long flexErrBadTagIndex"
               ENUMERATOR, @flexErrBadTagIndex, 5
      * "long flexErrNoMatch"
               ENUMERATOR, @flexErrNoMatch, 6
      * "long flexErrInvalidMatchIndex"
               ENUMERATOR, @flexErrInvalidMatchIndex, 7
           
      * IVBDataObject
           CLASS @IVBDataObject
               CLSID, 36CA0725-DB2F-11D0-BAA2-444553540000
               NAME, "IVBDataObject"
      * Clear
               METHOD, 2, @Clear
      * GetData
               METHOD, 3, @GetData,
                   "short" @Format, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
               METHOD, 4, @GetFormat,
                   "short" @Format, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
               METHOD, 5, @SetData,
                   "VARIANT" @Value, TYPE 12,
                   "VARIANT" @Format, TYPE 12
                       OPTIONAL 2
      * Files
               PROPERTY-GET, 6, @Files,
                   "short" @index, TYPE 2
                       RETURNING "BSTR", TYPE 8
      * FileCount
               PROPERTY-GET, 1, @FileCount
                       RETURNING "short", TYPE 2
      * FileCount
               PROPERTY-PUT, 1, @FileCount,
                   "short (Property Value)", TYPE 2
           
      * DataObject
           CLASS @DataObject
               CLSID, 36CA0727-DB2F-11D0-BAA2-444553540000
               NAME, "DataObject"
               DEFAULT-INTERFACE, "IVBDataObject"
      * Clear
               METHOD, 2, @Clear
      * GetData
               METHOD, 3, @GetData,
                   "short" @Format, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
               METHOD, 4, @GetFormat,
                   "short" @Format, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
               METHOD, 5, @SetData,
                   "VARIANT" @Value, TYPE 12,
                   "VARIANT" @Format, TYPE 12
                       OPTIONAL 2
      * Files
               PROPERTY-GET, 6, @Files,
                   "short" @index, TYPE 2
                       RETURNING "BSTR", TYPE 8
      * FileCount
               PROPERTY-GET, 1, @FileCount
                       RETURNING "short", TYPE 2
      * FileCount
               PROPERTY-PUT, 1, @FileCount,
                   "short (Property Value)", TYPE 2
           
      * vsFlexArray Dispatch Interface
           
      * _DvsFlexArray
           CLASS @_DvsFlexArray
               CLSID, 8AE029D1-08E3-11D1-BAA2-444553540000
               NAME, "_DvsFlexArray"
      * ColAlignment
      * Returns or sets the alignment of the given column.
               PROPERTY-GET, 99, @ColAlignment,
                   "long" @Col, TYPE 3
                       RETURNING "AlignmentSettings", TYPE 3
      * ColAlignment
      * Returns or sets the alignment of the given column.
               PROPERTY-PUT, 99, @ColAlignment,
                   "long" @Col, TYPE 3,
                   "AlignmentSettings (Property Value)", TYPE 3
      * ColWidth
      * Returns or sets the width of the specified column in twips.
               PROPERTY-GET, 100, @ColWidth,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColWidth
      * Returns or sets the width of the specified column in twips.
               PROPERTY-PUT, 100, @ColWidth,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * RowHeight
      * Returns or sets the height of the specified row in twips.
               PROPERTY-GET, 101, @RowHeight,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowHeight
      * Returns or sets the height of the specified row in twips.
               PROPERTY-PUT, 101, @RowHeight,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * MergeRow
      * Returns or sets whether a row will have its cells merged (see also the 
      * MergeCells property).
               PROPERTY-GET, 102, @MergeRow,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * MergeRow
      * Returns or sets whether a row will have its cells merged (see also the 
      * MergeCells property).
               PROPERTY-PUT, 102, @MergeRow,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * MergeCol
      * Returns or sets whether a column will have its cells merged (see also 
      * the MergeCells property).
               PROPERTY-GET, 103, @MergeCol,
                   "long" @Col, TYPE 3
                       RETURNING "boolean", TYPE 11
      * MergeCol
      * Returns or sets whether a column will have its cells merged (see also 
      * the MergeCells property).
               PROPERTY-PUT, 103, @MergeCol,
                   "long" @Col, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * RowPosition
      * Moves a given row into a new position.
               PROPERTY-GET, 104, @RowPosition,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowPosition
      * Moves a given row into a new position.
               PROPERTY-PUT, 104, @RowPosition,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * ColPosition
      * Moves a given column into a new position.
               PROPERTY-GET, 105, @ColPosition,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColPosition
      * Moves a given column into a new position.
               PROPERTY-PUT, 105, @ColPosition,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * RowData
      * Returns or sets a user-defined long value associated with the given 
      * row.
               PROPERTY-GET, 106, @RowData,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowData
      * Returns or sets a user-defined long value associated with the given 
      * row.
               PROPERTY-PUT, 106, @RowData,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * ColData
      * Returns or sets a user-defined long value associated with the given 
      * column.
               PROPERTY-GET, 107, @ColData,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColData
      * Returns or sets a user-defined long value associated with the given 
      * column.
               PROPERTY-PUT, 107, @ColData,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * AddItem
      * Adds a row to the control.
               METHOD, 90, @AddItem,
                   "BSTR" @Item, TYPE 8,
                   "VARIANT" @Row, TYPE 12
                       OPTIONAL 1
      * RemoveItem
      * Removes a row from the control.
               METHOD, 91, @RemoveItem,
                   "long" @Row, TYPE 3
      * TextMatrix
      * Returns or sets the contents of a cell identified by its row and column 
      * coordinates.
               PROPERTY-GET, 108, @TextMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * TextMatrix
      * Returns or sets the contents of a cell identified by its row and column 
      * coordinates.
               PROPERTY-PUT, 108, @TextMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * Clear
      * Clears the contents of the control. Optional parameters specify what to 
      * clear and where.
               METHOD, 92, @Clear,
                   "VARIANT" @Where, TYPE 12,
                   "VARIANT" @What, TYPE 12
                       OPTIONAL 2
      * EditCell
      * Activates edit mode.
               METHOD, 93, @EditCell
      * ValueMatrix
      * Returns the numeric value of a cell identified by its row and column 
      * coordinates.
               PROPERTY-GET, 109, @ValueMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
                       RETURNING "double", TYPE 5
      * IsSubtotal
      * Returns or sets whether a row contains subtotals (as opposed to data).
               PROPERTY-GET, 110, @IsSubtotal,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * IsSubtotal
      * Returns or sets whether a row contains subtotals (as opposed to data).
               PROPERTY-PUT, 110, @IsSubtotal,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * Subtotal
      * Calculates subtotals.
               METHOD, 94, @Subtotal,
                   "SubtotalSettings" @Function, TYPE 3,
                   "VARIANT" @GroupOn, TYPE 12,
                   "VARIANT" @TotalOn, TYPE 12,
                   "VARIANT" @Format, TYPE 12,
                   "VARIANT" @BackColor, TYPE 12,
                   "VARIANT" @ForeColor, TYPE 12,
                   "VARIANT" @FontBold, TYPE 12,
                   "VARIANT" @Caption, TYPE 12,
                   "VARIANT" @MatchFrom, TYPE 12
                       OPTIONAL 8
      * Refresh
               METHOD, -550, @Refresh
      * Outline
      * Sets an outline level for displaying subtotals.
               METHOD, 95, @Outline,
                   "short" @Level, TYPE 2
      * FixedAlignment
      * Returns or sets the alignment for the fixed rows in a column.
               PROPERTY-GET, 111, @FixedAlignment,
                   "long" @Col, TYPE 3
                       RETURNING "AlignmentSettings", TYPE 3
      * FixedAlignment
      * Returns or sets the alignment for the fixed rows in a column.
               PROPERTY-PUT, 111, @FixedAlignment,
                   "long" @Col, TYPE 3,
                   "AlignmentSettings (Property Value)", TYPE 3
      * RowIsVisible
      * Returns whether a given row is currently within view.
               PROPERTY-GET, 112, @RowIsVisible,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * ColIsVisible
      * Returns whether a given column is currently within view.
               PROPERTY-GET, 113, @ColIsVisible,
                   "long" @Col, TYPE 3
                       RETURNING "boolean", TYPE 11
      * RowPos
      * Returns the top (y) coordinate of a row relative to the edge of the 
      * control, in twips.
               PROPERTY-GET, 114, @RowPos,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * ColPos
      * Returns the left (x) coordinate of a column relative to the edge of the 
      * control, in twips.
               PROPERTY-GET, 115, @ColPos,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * IsSelected
      * Returns or sets whether a row is selected (for listbox-type 
      * selections).
               PROPERTY-GET, 116, @IsSelected,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * IsSelected
      * Returns or sets whether a row is selected (for listbox-type 
      * selections).
               PROPERTY-PUT, 116, @IsSelected,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * TextArray
      * Returns or sets the contents of a cell identified by a single index.
               PROPERTY-GET, 117, @TextArray,
                   "long" @index, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * TextArray
      * Returns or sets the contents of a cell identified by a single index.
               PROPERTY-PUT, 117, @TextArray,
                   "long" @index, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * IsCollapsed
      * Returns or sets whether an outline row is collapsed or expanded.
               PROPERTY-GET, 118, @IsCollapsed,
                   "long" @Row, TYPE 3
                       RETURNING "CollapsedSettings", TYPE 3
      * IsCollapsed
      * Returns or sets whether an outline row is collapsed or expanded.
               PROPERTY-PUT, 118, @IsCollapsed,
                   "long" @Row, TYPE 3,
                   "CollapsedSettings (Property Value)", TYPE 3
      * Select
      * Selects a range of cells.
               METHOD, 96, @Select,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "VARIANT" @RowSel, TYPE 12,
                   "VARIANT" @ColSel, TYPE 12
                       OPTIONAL 2
      * AutoSize
      * Resizes column widths or row heights to fit cell contents.
               METHOD, 97, @AutoSize,
                   "long" @Col1, TYPE 3,
                   "VARIANT" @Col2, TYPE 12,
                   "VARIANT" @Equal, TYPE 12
                       OPTIONAL 2
      * DataRefresh
      * Forces the control to re-fetch all data from its data source.
               METHOD, 98, @DataRefresh
      * CellBorder
      * Draws a border around and within the selected cells.
               METHOD, 124, @CellBorder,
                   "OLE_COLOR" @Color, TYPE 19,
                   "short" @Left, TYPE 2,
                   "short" @Top, TYPE 2,
                   "short" @Right, TYPE 2,
                   "short" @Bottom, TYPE 2,
                   "short" @Vertical, TYPE 2,
                   "short" @Horizontal, TYPE 2
      * OleDrag
      * Initiates an OLE drag operation.
               METHOD, 128, @OleDrag
      * SaveGrid
      * Saves grid contents and format to a file.
               METHOD, 129, @SaveGrid,
                   "BSTR" @FileName, TYPE 8,
                   "SaveLoadSettings" @SaveWhat, TYPE 3
                       RETURNING "long", TYPE 3
      * LoadGrid
      * Loads grid contents and format from a file.
               METHOD, 130, @LoadGrid,
                   "BSTR" @FileName, TYPE 8,
                   "SaveLoadSettings" @LoadWhat, TYPE 3
                       RETURNING "long", TYPE 3
      * Archive
      * Adds, extracts, or deletes files from a vsFlex archive file.
               METHOD, 131, @Archive,
                   "BSTR" @arcFileName, TYPE 8,
                   "BSTR" @FileName, TYPE 8,
                   "ArchiveSettings" @Action, TYPE 3
      * ArchiveInfo
      * Gets information from a vsFlex archive file.
               PROPERTY-GET, 132, @ArchiveInfo,
                   "BSTR" @ArcFile, TYPE 8,
                   "ArchiveInfoSettings" @InfoType, TYPE 3,
                   "VARIANT" @index, TYPE 12
                       OPTIONAL 1
                       RETURNING "VARIANT", TYPE 12
      * ColSort
      * Returns or sets the sorting order for each column (for use with the Sort 
      * property).
               PROPERTY-GET, 135, @ColSort,
                   "long" @Col, TYPE 3
                       RETURNING "SortSettings", TYPE 3
      * ColSort
      * Returns or sets the sorting order for each column (for use with the Sort 
      * property).
               PROPERTY-PUT, 135, @ColSort,
                   "long" @Col, TYPE 3,
                   "SortSettings (Property Value)", TYPE 3
      * ColFormat
      * Returns or sets the format used to display numeric values.
               PROPERTY-GET, 137, @ColFormat,
                   "long" @Col, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * ColFormat
      * Returns or sets the format used to display numeric values.
               PROPERTY-PUT, 137, @ColFormat,
                   "long" @Col, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * ColDataType
      * Returns or sets the data type for the column.
               PROPERTY-GET, 138, @ColDataType,
                   "long" @Col, TYPE 3
                       RETURNING "DataTypeSettings", TYPE 3
      * ColDataType
      * Returns or sets the data type for the column.
               PROPERTY-PUT, 138, @ColDataType,
                   "long" @Col, TYPE 3,
                   "DataTypeSettings (Property Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * FontName
               PROPERTY-GET, 9, @FontName
                       RETURNING "BSTR", TYPE 8
      * FontName
               PROPERTY-PUT, 9, @FontName,
                   "BSTR (Property Value)", TYPE 8
      * FontSize
               PROPERTY-GET, 10, @FontSize
                       RETURNING "single", TYPE 4
      * FontSize
               PROPERTY-PUT, 10, @FontSize,
                   "single (Property Value)", TYPE 4
      * FontBold
               PROPERTY-GET, 11, @FontBold
                       RETURNING "boolean", TYPE 11
      * FontBold
               PROPERTY-PUT, 11, @FontBold,
                   "boolean (Property Value)", TYPE 11
      * FontItalic
               PROPERTY-GET, 12, @FontItalic
                       RETURNING "boolean", TYPE 11
      * FontItalic
               PROPERTY-PUT, 12, @FontItalic,
                   "boolean (Property Value)", TYPE 11
      * FontStrikethru
               PROPERTY-GET, 13, @FontStrikethru
                       RETURNING "boolean", TYPE 11
      * FontStrikethru
               PROPERTY-PUT, 13, @FontStrikethru,
                   "boolean (Property Value)", TYPE 11
      * FontUnderline
               PROPERTY-GET, 14, @FontUnderline
                       RETURNING "boolean", TYPE 11
      * FontUnderline
               PROPERTY-PUT, 14, @FontUnderline,
                   "boolean (Property Value)", TYPE 11
      * Rows
      * Returns or sets the total number of rows in the control.
               PROPERTY-GET, 17, @Rows
                       RETURNING "long", TYPE 3
      * Rows
      * Returns or sets the total number of rows in the control.
               PROPERTY-PUT, 17, @Rows,
                   "long (Property Value)", TYPE 3
      * Cols
      * Returns or sets the total number of columns in the control.
               PROPERTY-GET, 18, @Cols
                       RETURNING "long", TYPE 3
      * Cols
      * Returns or sets the total number of columns in the control.
               PROPERTY-PUT, 18, @Cols,
                   "long (Property Value)", TYPE 3
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-GET, 15, @Version
                       RETURNING "short", TYPE 2
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-PUT, 15, @Version,
                   "short (Property Value)", TYPE 2
      * FormatString
      * Assigns column widths, alignments, and fixed row and column text.
               PROPERTY-GET, 16, @FormatString
                       RETURNING "BSTR", TYPE 8
      * FormatString
      * Assigns column widths, alignments, and fixed row and column text.
               PROPERTY-PUT, 16, @FormatString,
                   "BSTR (Property Value)", TYPE 8
      * FixedRows
      * Returns or sets the total number of fixed (non-scrollable) rows.
               PROPERTY-GET, 19, @FixedRows
                       RETURNING "long", TYPE 3
      * FixedRows
      * Returns or sets the total number of fixed (non-scrollable) rows.
               PROPERTY-PUT, 19, @FixedRows,
                   "long (Property Value)", TYPE 3
      * FixedCols
      * Returns or sets the total number of fixed (non-scrollable) columns.
               PROPERTY-GET, 20, @FixedCols
                       RETURNING "long", TYPE 3
      * FixedCols
      * Returns or sets the total number of fixed (non-scrollable) columns.
               PROPERTY-PUT, 20, @FixedCols,
                   "long (Property Value)", TYPE 3
      * TopRow
      * Returns or sets the zero-based index of the topmost non-fixed row 
      * displayed in the control.
               PROPERTY-GET, 21, @TopRow
                       RETURNING "long", TYPE 3
      * TopRow
      * Returns or sets the zero-based index of the topmost non-fixed row 
      * displayed in the control.
               PROPERTY-PUT, 21, @TopRow,
                   "long (Property Value)", TYPE 3
      * LeftCol
      * Returns or sets the zero-based index of the leftmost non-fixed column 
      * displayed in the control.
               PROPERTY-GET, 22, @LeftCol
                       RETURNING "long", TYPE 3
      * LeftCol
      * Returns or sets the zero-based index of the leftmost non-fixed column 
      * displayed in the control.
               PROPERTY-PUT, 22, @LeftCol,
                   "long (Property Value)", TYPE 3
      * Row
      * Returns or sets the zero-based index of the current row.
               PROPERTY-GET, 23, @Row
                       RETURNING "long", TYPE 3
      * Row
      * Returns or sets the zero-based index of the current row.
               PROPERTY-PUT, 23, @Row,
                   "long (Property Value)", TYPE 3
      * Col
      * Returns or sets the zero-based index of the current column.
               PROPERTY-GET, 24, @Col
                       RETURNING "long", TYPE 3
      * Col
      * Returns or sets the zero-based index of the current column.
               PROPERTY-PUT, 24, @Col,
                   "long (Property Value)", TYPE 3
      * RowSel
      * Returns or sets the extent of a range of rows.
               PROPERTY-GET, 25, @RowSel
                       RETURNING "long", TYPE 3
      * RowSel
      * Returns or sets the extent of a range of rows.
               PROPERTY-PUT, 25, @RowSel,
                   "long (Property Value)", TYPE 3
      * ColSel
      * Returns or sets the extent of a range of columns.
               PROPERTY-GET, 26, @ColSel
                       RETURNING "long", TYPE 3
      * ColSel
      * Returns or sets the extent of a range of columns.
               PROPERTY-PUT, 26, @ColSel,
                   "long (Property Value)", TYPE 3
      * Text
      * Returns or sets the contents of the selected cell or range.
               PROPERTY-GET, 27, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns or sets the contents of the selected cell or range.
               PROPERTY-PUT, 27, @Text,
                   "BSTR (Property Value)", TYPE 8
      * BackColor
      * Returns or sets the background color of the non-fixed cells.
               PROPERTY-GET, 28, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns or sets the background color of the non-fixed cells.
               PROPERTY-PUT, 28, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColor
      * Returns or sets the foreground color of the non-fixed cells.
               PROPERTY-GET, 29, @ForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColor
      * Returns or sets the foreground color of the non-fixed cells.
               PROPERTY-PUT, 29, @ForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorFixed
      * Returns or sets the background color of the fixed rows and columns.
               PROPERTY-GET, 30, @BackColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorFixed
      * Returns or sets the background color of the fixed rows and columns.
               PROPERTY-PUT, 30, @BackColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColorFixed
      * Returns or sets the foreground color of the fixed rows and columns.
               PROPERTY-GET, 31, @ForeColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColorFixed
      * Returns or sets the foreground color of the fixed rows and columns.
               PROPERTY-PUT, 31, @ForeColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorSel
      * Returns or sets the background color of the selected cells.
               PROPERTY-GET, 32, @BackColorSel
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorSel
      * Returns or sets the background color of the selected cells.
               PROPERTY-PUT, 32, @BackColorSel,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColorSel
      * Returns or sets the foreground color of the selected cells.
               PROPERTY-GET, 33, @ForeColorSel
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColorSel
      * Returns or sets the foreground color of the selected cells.
               PROPERTY-PUT, 33, @ForeColorSel,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorBkg
      * Returns or sets the background color of the area not covered by any 
      * cells.
               PROPERTY-GET, 34, @BackColorBkg
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorBkg
      * Returns or sets the background color of the area not covered by any 
      * cells.
               PROPERTY-PUT, 34, @BackColorBkg,
                   "OLE_COLOR (Property Value)", TYPE 19
      * WordWrap
      * Returns or sets whether text wider that its cell will wrap.
               PROPERTY-GET, 35, @WordWrap
                       RETURNING "boolean", TYPE 11
      * WordWrap
      * Returns or sets whether text wider that its cell will wrap.
               PROPERTY-PUT, 35, @WordWrap,
                   "boolean (Property Value)", TYPE 11
      * TextStyle
      * Returns or sets 3D effects for displaying text in non-fixed cells.
               PROPERTY-GET, 36, @TextStyle
                       RETURNING "TextStyleSettings", TYPE 3
      * TextStyle
      * Returns or sets 3D effects for displaying text in non-fixed cells.
               PROPERTY-PUT, 36, @TextStyle,
                   "TextStyleSettings (Property Value)", TYPE 3
      * TextStyleFixed
      * Returns or sets 3D effects for displaying text in fixed cells.
               PROPERTY-GET, 37, @TextStyleFixed
                       RETURNING "TextStyleSettings", TYPE 3
      * TextStyleFixed
      * Returns or sets 3D effects for displaying text in fixed cells.
               PROPERTY-PUT, 37, @TextStyleFixed,
                   "TextStyleSettings (Property Value)", TYPE 3
      * ScrollTrack
      * Returns or sets scrolling should occur while the user moves the scroll 
      * thumb.
               PROPERTY-GET, 1, @ScrollTrack
                       RETURNING "boolean", TYPE 11
      * ScrollTrack
      * Returns or sets scrolling should occur while the user moves the scroll 
      * thumb.
               PROPERTY-PUT, 1, @ScrollTrack,
                   "boolean (Property Value)", TYPE 11
      * FocusRect
      * Returns or sets the type of focus rectangle to be displayed around the 
      * current cell.
               PROPERTY-GET, 38, @FocusRect
                       RETURNING "FocusRectSettings", TYPE 3
      * FocusRect
      * Returns or sets the type of focus rectangle to be displayed around the 
      * current cell.
               PROPERTY-PUT, 38, @FocusRect,
                   "FocusRectSettings (Property Value)", TYPE 3
      * HighLight
      * Returns or sets whether selected cells will be highlighted.
               PROPERTY-GET, 39, @HighLight
                       RETURNING "ShowSelSettings", TYPE 3
      * HighLight
      * Returns or sets whether selected cells will be highlighted.
               PROPERTY-PUT, 39, @HighLight,
                   "ShowSelSettings (Property Value)", TYPE 3
      * Redraw
      * Enables or disables redrawing of the FlexArray control.
               PROPERTY-GET, 40, @Redraw
                       RETURNING "boolean", TYPE 11
      * Redraw
      * Enables or disables redrawing of the FlexArray control.
               PROPERTY-PUT, 40, @Redraw,
                   "boolean (Property Value)", TYPE 11
      * ScrollBars
      * Returns or sets whether the control will display horizontal or vertical 
      * scroll bars.
               PROPERTY-GET, 41, @ScrollBars
                       RETURNING "ScrollBarsSettings", TYPE 3
      * ScrollBars
      * Returns or sets whether the control will display horizontal or vertical 
      * scroll bars.
               PROPERTY-PUT, 41, @ScrollBars,
                   "ScrollBarsSettings (Property Value)", TYPE 3
      * MouseRow
      * Returns the zero-based index of the row under the mouse pointer.
               PROPERTY-GET, 42, @MouseRow
                       RETURNING "long", TYPE 3
      * MouseRow
      * Returns the zero-based index of the row under the mouse pointer.
               PROPERTY-PUT, 42, @MouseRow,
                   "long (Property Value)", TYPE 3
      * MouseCol
      * Returns the zero-based index of the column under the mouse pointer.
               PROPERTY-GET, 43, @MouseCol
                       RETURNING "long", TYPE 3
      * MouseCol
      * Returns the zero-based index of the column under the mouse pointer.
               PROPERTY-PUT, 43, @MouseCol,
                   "long (Property Value)", TYPE 3
      * CellLeft
      * Returns the left (x) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-GET, 44, @CellLeft
                       RETURNING "long", TYPE 3
      * CellLeft
      * Returns the left (x) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-PUT, 44, @CellLeft,
                   "long (Property Value)", TYPE 3
      * CellTop
      * Returns the top (y) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-GET, 45, @CellTop
                       RETURNING "long", TYPE 3
      * CellTop
      * Returns the top (y) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-PUT, 45, @CellTop,
                   "long (Property Value)", TYPE 3
      * CellWidth
      * Returns the width of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-GET, 46, @CellWidth
                       RETURNING "long", TYPE 3
      * CellWidth
      * Returns the width of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-PUT, 46, @CellWidth,
                   "long (Property Value)", TYPE 3
      * CellHeight
      * Returns the height of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-GET, 47, @CellHeight
                       RETURNING "long", TYPE 3
      * CellHeight
      * Returns the height of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-PUT, 47, @CellHeight,
                   "long (Property Value)", TYPE 3
      * RowHeightMin
      * Returns or sets a minimum row height for the entire control, in twips.
               PROPERTY-GET, 48, @RowHeightMin
                       RETURNING "long", TYPE 3
      * RowHeightMin
      * Returns or sets a minimum row height for the entire control, in twips.
               PROPERTY-PUT, 48, @RowHeightMin,
                   "long (Property Value)", TYPE 3
      * FillStyle
      * Returns or sets whether changes to the Text or Cell formatting 
      * properties apply to the current cell or to the entire selection.
               PROPERTY-GET, 49, @FillStyle
                       RETURNING "FillStyleSettings", TYPE 3
      * FillStyle
      * Returns or sets whether changes to the Text or Cell formatting 
      * properties apply to the current cell or to the entire selection.
               PROPERTY-PUT, 49, @FillStyle,
                   "FillStyleSettings (Property Value)", TYPE 3
      * GridLines
      * Returns or sets the type of lines to be drawn between non-fixed cells.
               PROPERTY-GET, 50, @GridLines
                       RETURNING "GridStyleSettings", TYPE 3
      * GridLines
      * Returns or sets the type of lines to be drawn between non-fixed cells.
               PROPERTY-PUT, 50, @GridLines,
                   "GridStyleSettings (Property Value)", TYPE 3
      * GridLinesFixed
      * Returns or sets the type of lines to be drawn between fixed cells.
               PROPERTY-GET, 51, @GridLinesFixed
                       RETURNING "GridStyleSettings", TYPE 3
      * GridLinesFixed
      * Returns or sets the type of lines to be drawn between fixed cells.
               PROPERTY-PUT, 51, @GridLinesFixed,
                   "GridStyleSettings (Property Value)", TYPE 3
      * GridColor
      * Returns or sets the color used to draw the grid lines between the 
      * non-fixed cells.
               PROPERTY-GET, 52, @GridColor
                       RETURNING "OLE_COLOR", TYPE 19
      * GridColor
      * Returns or sets the color used to draw the grid lines between the 
      * non-fixed cells.
               PROPERTY-PUT, 52, @GridColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * GridColorFixed
      * Returns or sets the color used to draw the grid lines between the fixed 
      * cells.
               PROPERTY-GET, 53, @GridColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * GridColorFixed
      * Returns or sets the color used to draw the grid lines between the fixed 
      * cells.
               PROPERTY-PUT, 53, @GridColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellBackColor
      * Returns or sets the background color of the selected cell or range.
               PROPERTY-GET, 54, @CellBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellBackColor
      * Returns or sets the background color of the selected cell or range.
               PROPERTY-PUT, 54, @CellBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellForeColor
      * Returns or sets the foreground color of the selected cell or range.
               PROPERTY-GET, 55, @CellForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellForeColor
      * Returns or sets the foreground color of the selected cell or range.
               PROPERTY-PUT, 55, @CellForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellAlignment
      * Returns or sets the alignment of text in the selected cell or range.
               PROPERTY-GET, 56, @CellAlignment
                       RETURNING "AlignmentSettings", TYPE 3
      * CellAlignment
      * Returns or sets the alignment of text in the selected cell or range.
               PROPERTY-PUT, 56, @CellAlignment,
                   "AlignmentSettings (Property Value)", TYPE 3
      * CellTextStyle
      * Returns or sets 3D effects for text in a selected cell or range.
               PROPERTY-GET, 57, @CellTextStyle
                       RETURNING "TextStyleSettings", TYPE 3
      * CellTextStyle
      * Returns or sets 3D effects for text in a selected cell or range.
               PROPERTY-PUT, 57, @CellTextStyle,
                   "TextStyleSettings (Property Value)", TYPE 3
      * CellPicture
      * Returns or sets the picture displayed in a selected cell or range.
               PROPERTY-GET, 58, @CellPicture
                       RETURNING "Picture*", TYPE 9
      * CellPicture
      * Returns or sets the picture displayed in a selected cell or range.
               PROPERTY-PUT, 58, @CellPicture,
                   "Picture* (Property Value)", TYPE 9
      * CellPictureAlignment
      * Returns or sets the alignment of the pictures in the selected cell or 
      * range.
               PROPERTY-GET, 59, @CellPictureAlignment
                       RETURNING "PictureAlignmentSettings", TYPE 3
      * CellPictureAlignment
      * Returns or sets the alignment of the pictures in the selected cell or 
      * range.
               PROPERTY-PUT, 59, @CellPictureAlignment,
                   "PictureAlignmentSettings (Property Value)", TYPE 3
      * CellFontName
      * Returns or sets the name of the font of the selected cell or range.
               PROPERTY-GET, 60, @CellFontName
                       RETURNING "BSTR", TYPE 8
      * CellFontName
      * Returns or sets the name of the font of the selected cell or range.
               PROPERTY-PUT, 60, @CellFontName,
                   "BSTR (Property Value)", TYPE 8
      * CellFontSize
      * Returns or sets the size of the font of the selected cell or range.
               PROPERTY-GET, 61, @CellFontSize
                       RETURNING "single", TYPE 4
      * CellFontSize
      * Returns or sets the size of the font of the selected cell or range.
               PROPERTY-PUT, 61, @CellFontSize,
                   "single (Property Value)", TYPE 4
      * CellFontBold
      * Returns or sets the Bold attribute of the font of the selected cell or 
      * range.
               PROPERTY-GET, 62, @CellFontBold
                       RETURNING "boolean", TYPE 11
      * CellFontBold
      * Returns or sets the Bold attribute of the font of the selected cell or 
      * range.
               PROPERTY-PUT, 62, @CellFontBold,
                   "boolean (Property Value)", TYPE 11
      * CellFontItalic
      * Returns or sets the Italic attribute of the font of the selected cell or 
      * range.
               PROPERTY-GET, 63, @CellFontItalic
                       RETURNING "boolean", TYPE 11
      * CellFontItalic
      * Returns or sets the Italic attribute of the font of the selected cell or 
      * range.
               PROPERTY-PUT, 63, @CellFontItalic,
                   "boolean (Property Value)", TYPE 11
      * CellFontWidth
      * Returns or sets the width of the font of the selected cell or range.
               PROPERTY-GET, 64, @CellFontWidth
                       RETURNING "single", TYPE 4
      * CellFontWidth
      * Returns or sets the width of the font of the selected cell or range.
               PROPERTY-PUT, 64, @CellFontWidth,
                   "single (Property Value)", TYPE 4
      * CellFontUnderline
      * Returns or sets the Underline attribute of the font of the selected cell 
      * or range.
               PROPERTY-GET, 74, @CellFontUnderline
                       RETURNING "boolean", TYPE 11
      * CellFontUnderline
      * Returns or sets the Underline attribute of the font of the selected cell 
      * or range.
               PROPERTY-PUT, 74, @CellFontUnderline,
                   "boolean (Property Value)", TYPE 11
      * CellFontStrikethru
      * Returns or sets the Strikethru attribute of the font of the selected 
      * cell or range.
               PROPERTY-GET, 75, @CellFontStrikethru
                       RETURNING "boolean", TYPE 11
      * CellFontStrikethru
      * Returns or sets the Strikethru attribute of the font of the selected 
      * cell or range.
               PROPERTY-PUT, 75, @CellFontStrikethru,
                   "boolean (Property Value)", TYPE 11
      * FontWidth
      * Returns or sets the width of the font, in points.
               PROPERTY-GET, 65, @FontWidth
                       RETURNING "single", TYPE 4
      * FontWidth
      * Returns or sets the width of the font, in points.
               PROPERTY-PUT, 65, @FontWidth,
                   "single (Property Value)", TYPE 4
      * Clip
      * Returns or sets the contents of a range.
               PROPERTY-GET, 66, @Clip
                       RETURNING "BSTR", TYPE 8
      * Clip
      * Returns or sets the contents of a range.
               PROPERTY-PUT, 66, @Clip,
                   "BSTR (Property Value)", TYPE 8
      * Sort
      * Sets a sorting order for the selected rows using the selected columns as 
      * keys.
               PROPERTY-GET, 67, @Sort
                       RETURNING "SortSettings", TYPE 3
      * Sort
      * Sets a sorting order for the selected rows using the selected columns as 
      * keys.
               PROPERTY-PUT, 67, @Sort,
                   "SortSettings (Property Value)", TYPE 3
      * SelectionMode
      * Returns or sets whether the control will select cells in a free range, 
      * by row, by column, or like a listbox.
               PROPERTY-GET, 68, @SelectionMode
                       RETURNING "SelModeSettings", TYPE 3
      * SelectionMode
      * Returns or sets whether the control will select cells in a free range, 
      * by row, by column, or like a listbox.
               PROPERTY-PUT, 68, @SelectionMode,
                   "SelModeSettings (Property Value)", TYPE 3
      * MergeCells
      * Returns or sets whether cells with the same contents will be merged into 
      * a single cell.
               PROPERTY-GET, 69, @MergeCells
                       RETURNING "MergeSettings", TYPE 3
      * MergeCells
      * Returns or sets whether cells with the same contents will be merged into 
      * a single cell.
               PROPERTY-PUT, 69, @MergeCells,
                   "MergeSettings (Property Value)", TYPE 3
      * Picture
      * Returns a picture of the entire control.
               PROPERTY-GET, 70, @Picture
                       RETURNING "Picture*", TYPE 9
      * Picture
      * Returns a picture of the entire control.
               PROPERTY-PUT, 70, @Picture,
                   "Picture* (Property Value)", TYPE 9
      * PictureType
      * Returns or sets the type of picture returned by the Picture property.
               PROPERTY-GET, 2, @PictureType
                       RETURNING "PictureTypeSettings", TYPE 3
      * PictureType
      * Returns or sets the type of picture returned by the Picture property.
               PROPERTY-PUT, 2, @PictureType,
                   "PictureTypeSettings (Property Value)", TYPE 3
      * AllowBigSelection
      * Returns or sets whether clicking on the fixed area will select entire 
      * columns and rows.
               PROPERTY-GET, 71, @AllowBigSelection
                       RETURNING "boolean", TYPE 11
      * AllowBigSelection
      * Returns or sets whether clicking on the fixed area will select entire 
      * columns and rows.
               PROPERTY-PUT, 71, @AllowBigSelection,
                   "boolean (Property Value)", TYPE 11
      * AllowUserResizing
      * Returns or sets whether the user is allowed to resize rows and columns 
      * with the mouse.
               PROPERTY-GET, 72, @AllowUserResizing
                       RETURNING "AllowUserResizeSettings", TYPE 3
      * AllowUserResizing
      * Returns or sets whether the user is allowed to resize rows and columns 
      * with the mouse.
               PROPERTY-PUT, 72, @AllowUserResizing,
                   "AllowUserResizeSettings (Property Value)", TYPE 3
      * MousePointer
      * Returns or sets the setting of the mouse pointer.
               PROPERTY-GET, 3, @MousePointer
                       RETURNING "MousePointerSettings", TYPE 3
      * MousePointer
      * Returns or sets the setting of the mouse pointer.
               PROPERTY-PUT, 3, @MousePointer,
                   "MousePointerSettings (Property Value)", TYPE 3
      * MouseIcon
      * Returns or sets the icon to be used as a mouse cursor.
               PROPERTY-GET, 73, @MouseIcon
                       RETURNING "Picture*", TYPE 9
      * MouseIcon
      * Returns or sets the icon to be used as a mouse cursor.
               PROPERTY-PUT, 73, @MouseIcon,
                   "Picture* (Property Value)", TYPE 9
      * DataSource
      * Returns or sets the data source.
               PROPERTY-GET, 76, @DataSource
                       RETURNING "IRowCursor*", TYPE 13
      * DataSource
      * Returns or sets the data source.
               PROPERTY-PUT, 76, @DataSource,
                   "IRowCursor* (Property Value)", TYPE 13
      * VirtualData
      * Returns or sets whether all data is fetched from the data source at once 
      * or as needed.
               PROPERTY-GET, 4, @VirtualData
                       RETURNING "boolean", TYPE 11
      * VirtualData
      * Returns or sets whether all data is fetched from the data source at once 
      * or as needed.
               PROPERTY-PUT, 4, @VirtualData,
                   "boolean (Property Value)", TYPE 11
      * Editable
      * Returns or sets whether the control allows in-cell editing.
               PROPERTY-GET, 5, @Editable
                       RETURNING "boolean", TYPE 11
      * Editable
      * Returns or sets whether the control allows in-cell editing.
               PROPERTY-PUT, 5, @Editable,
                   "boolean (Property Value)", TYPE 11
      * ComboList
      * Returns or sets the list to be used as a drop-down when editing a cell.
               PROPERTY-GET, 77, @ComboList
                       RETURNING "BSTR", TYPE 8
      * ComboList
      * Returns or sets the list to be used as a drop-down when editing a cell.
               PROPERTY-PUT, 77, @ComboList,
                   "BSTR (Property Value)", TYPE 8
      * Value
      * Returns the numeric value of the current cell.
               PROPERTY-GET, 78, @Value
                       RETURNING "double", TYPE 5
      * Value
      * Returns the numeric value of the current cell.
               PROPERTY-PUT, 78, @Value,
                   "double (Property Value)", TYPE 5
      * FloodColor
      * Returns or sets the color used to flood cells.
               PROPERTY-GET, 6, @FloodColor
                       RETURNING "OLE_COLOR", TYPE 19
      * FloodColor
      * Returns or sets the color used to flood cells.
               PROPERTY-PUT, 6, @FloodColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellFloodPercent
      * Returns or sets the percentage of flooding for a cell.
               PROPERTY-GET, 79, @CellFloodPercent
                       RETURNING "short", TYPE 2
      * CellFloodPercent
      * Returns or sets the percentage of flooding for a cell.
               PROPERTY-PUT, 79, @CellFloodPercent,
                   "short (Property Value)", TYPE 2
      * CellFloodColor
      * Returns or sets the color to be used for flooding a cell.
               PROPERTY-GET, 80, @CellFloodColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellFloodColor
      * Returns or sets the color to be used for flooding a cell.
               PROPERTY-PUT, 80, @CellFloodColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * SubtotalPosition
      * Returns or sets whether subtotals should be inserted above or below the 
      * totaled data.
               PROPERTY-GET, 81, @SubtotalPosition
                       RETURNING "SubtotalPositionSettings", TYPE 3
      * SubtotalPosition
      * Returns or sets whether subtotals should be inserted above or below the 
      * totaled data.
               PROPERTY-PUT, 81, @SubtotalPosition,
                   "SubtotalPositionSettings (Property Value)", TYPE 3
      * _Text
               PROPERTY-GET, 0, @_Text
                       RETURNING "BSTR", TYPE 8
      * _Text
               PROPERTY-PUT, 0, @_Text,
                   "BSTR (Property Value)", TYPE 8
      * BorderStyle
               PROPERTY-GET, -504, @BorderStyle
                       RETURNING "short", TYPE 2
      * BorderStyle
               PROPERTY-PUT, -504, @BorderStyle,
                   "short (Property Value)", TYPE 2
      * Font
               PROPERTY-GET, -512, @Font
                       RETURNING "Font*", TYPE 9
      * Font
               PROPERTY-PUT, -512, @Font,
                   "Font* (Property Value)", TYPE 9
      * Enabled
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Appearance
               PROPERTY-GET, -520, @Appearance
                       RETURNING "AppearanceSettings", TYPE 3
      * Appearance
               PROPERTY-PUT, -520, @Appearance,
                   "AppearanceSettings (Property Value)", TYPE 3
      * OutlineBar
      * Returns or sets the type of outline bar that should be displayed.
               PROPERTY-GET, 82, @OutlineBar
                       RETURNING "OutlineBarSettings", TYPE 3
      * OutlineBar
      * Returns or sets the type of outline bar that should be displayed.
               PROPERTY-PUT, 82, @OutlineBar,
                   "OutlineBarSettings (Property Value)", TYPE 3
      * TreeColor
      * Returns or sets the color used to draw the outline tree.
               PROPERTY-GET, 83, @TreeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TreeColor
      * Returns or sets the color used to draw the outline tree.
               PROPERTY-PUT, 83, @TreeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * GridLineWidth
      * Returns or sets the width of the grid lines, in pixels.
               PROPERTY-GET, 84, @GridLineWidth
                       RETURNING "short", TYPE 2
      * GridLineWidth
      * Returns or sets the width of the grid lines, in pixels.
               PROPERTY-PUT, 84, @GridLineWidth,
                   "short (Property Value)", TYPE 2
      * AutoResize
      * Returns or sets whether column widths will be automatically adjusted 
      * when data is loaded.
               PROPERTY-GET, 7, @AutoResize
                       RETURNING "boolean", TYPE 11
      * AutoResize
      * Returns or sets whether column widths will be automatically adjusted 
      * when data is loaded.
               PROPERTY-PUT, 7, @AutoResize,
                   "boolean (Property Value)", TYPE 11
      * BottomRow
      * Returns the zero-based index of the last row displayed in the control.
               PROPERTY-GET, 85, @BottomRow
                       RETURNING "long", TYPE 3
      * BottomRow
      * Returns the zero-based index of the last row displayed in the control.
               PROPERTY-PUT, 85, @BottomRow,
                   "long (Property Value)", TYPE 3
      * RightCol
      * Returns the zero-based index of the last column displayed in the 
      * control
               PROPERTY-GET, 86, @RightCol
                       RETURNING "long", TYPE 3
      * RightCol
      * Returns the zero-based index of the last column displayed in the 
      * control
               PROPERTY-PUT, 86, @RightCol,
                   "long (Property Value)", TYPE 3
      * ExtendLastCol
      * Returns or sets whether the last column should be adjusted to fit the 
      * control's width.
               PROPERTY-GET, 8, @ExtendLastCol
                       RETURNING "boolean", TYPE 11
      * ExtendLastCol
      * Returns or sets whether the last column should be adjusted to fit the 
      * control's width.
               PROPERTY-PUT, 8, @ExtendLastCol,
                   "boolean (Property Value)", TYPE 11
      * ClientWidth
      * Returns the width of the control's client area, in twips.
               PROPERTY-GET, 87, @ClientWidth
                       RETURNING "long", TYPE 3
      * ClientWidth
      * Returns the width of the control's client area, in twips.
               PROPERTY-PUT, 87, @ClientWidth,
                   "long (Property Value)", TYPE 3
      * ClientHeight
      * Returns the height of the control's client area, in twips.
               PROPERTY-GET, 88, @ClientHeight
                       RETURNING "long", TYPE 3
      * ClientHeight
      * Returns the height of the control's client area, in twips.
               PROPERTY-PUT, 88, @ClientHeight,
                   "long (Property Value)", TYPE 3
      * EditText
      * Returns or sets the text in the cell editor.
               PROPERTY-GET, 89, @EditText
                       RETURNING "BSTR", TYPE 8
      * EditText
      * Returns or sets the text in the cell editor.
               PROPERTY-PUT, 89, @EditText,
                   "BSTR (Property Value)", TYPE 8
      * hWnd
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * AutoSizeMode
      * Returns or sets whether AutoSize will adjust column widths or row 
      * heights to fit cell contents.
               PROPERTY-GET, 119, @AutoSizeMode
                       RETURNING "AutoSizeSettings", TYPE 3
      * AutoSizeMode
      * Returns or sets whether AutoSize will adjust column widths or row 
      * heights to fit cell contents.
               PROPERTY-PUT, 119, @AutoSizeMode,
                   "AutoSizeSettings (Property Value)", TYPE 3
      * RightToLeft
      * Returns or sets whether text should be displayed from right to left on 
      * Hebrew and Arabic systems.
               PROPERTY-GET, 120, @RightToLeft
                       RETURNING "boolean", TYPE 11
      * RightToLeft
      * Returns or sets whether text should be displayed from right to left on 
      * Hebrew and Arabic systems.
               PROPERTY-PUT, 120, @RightToLeft,
                   "boolean (Property Value)", TYPE 11
      * MultiTotals
      * Returns or sets whether subtotals will be displayed in a single row when 
      * possible.
               PROPERTY-GET, 121, @MultiTotals
                       RETURNING "boolean", TYPE 11
      * MultiTotals
      * Returns or sets whether subtotals will be displayed in a single row when 
      * possible.
               PROPERTY-PUT, 121, @MultiTotals,
                   "boolean (Property Value)", TYPE 11
      * BackColorAlternate
      * Returns or sets the background color for alternate rows (set to 0 to 
      * disable).
               PROPERTY-GET, 122, @BackColorAlternate
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorAlternate
      * Returns or sets the background color for alternate rows (set to 0 to 
      * disable).
               PROPERTY-PUT, 122, @BackColorAlternate,
                   "OLE_COLOR (Property Value)", TYPE 19
      * OwnerDraw
      * Returns or sets whether and when the control will fire the DrawCell 
      * event.
               PROPERTY-GET, 123, @OwnerDraw
                       RETURNING "OwnerDrawSettings", TYPE 3
      * OwnerDraw
      * Returns or sets whether and when the control will fire the DrawCell 
      * event.
               PROPERTY-PUT, 123, @OwnerDraw,
                   "OwnerDrawSettings (Property Value)", TYPE 3
      * DataMode
      * Returns or sets the type of data binding used by the control when it is 
      * connected to a data source (read-only or read/write).
               PROPERTY-GET, 125, @DataMode
                       RETURNING "DataModeSettings", TYPE 3
      * DataMode
      * Returns or sets the type of data binding used by the control when it is 
      * connected to a data source (read-only or read/write).
               PROPERTY-PUT, 125, @DataMode,
                   "DataModeSettings (Property Value)", TYPE 3
      * OleDragMode
      * Returns or sets whether the control can act as an OLE drag/drop source, 
      * either automatically or under program control.
               PROPERTY-GET, 126, @OleDragMode
                       RETURNING "OleDragModeSettings", TYPE 3
      * OleDragMode
      * Returns or sets whether the control can act as an OLE drag/drop source, 
      * either automatically or under program control.
               PROPERTY-PUT, 126, @OleDragMode,
                   "OleDragModeSettings (Property Value)", TYPE 3
      * OleDropMode
      * Returns or sets whether the control can act as an OLE drag/drop target, 
      * either automatically or under program control.
               PROPERTY-GET, 127, @OleDropMode
                       RETURNING "OleDropModeSettings", TYPE 3
      * OleDropMode
      * Returns or sets whether the control can act as an OLE drag/drop target, 
      * either automatically or under program control.
               PROPERTY-PUT, 127, @OleDropMode,
                   "OleDropModeSettings (Property Value)", TYPE 3
      * TabBehavior
      * Returns or sets whether the tab key will move focus between controls (VB 
      * default) or between grid cells.
               PROPERTY-GET, 133, @TabBehavior
                       RETURNING "TabBehaviorSettings", TYPE 3
      * TabBehavior
      * Returns or sets whether the tab key will move focus between controls (VB 
      * default) or between grid cells.
               PROPERTY-PUT, 133, @TabBehavior,
                   "TabBehaviorSettings (Property Value)", TYPE 3
      * SheetBorder
      * Returns or sets the color used to draw the border around the sheet.
               PROPERTY-GET, 134, @SheetBorder
                       RETURNING "OLE_COLOR", TYPE 19
      * SheetBorder
      * Returns or sets the color used to draw the border around the sheet.
               PROPERTY-PUT, 134, @SheetBorder,
                   "OLE_COLOR (Property Value)", TYPE 19
      * AllowSelection
      * Returns or sets whether the user can select ranges of cells with the 
      * mouse and keyboard.
               PROPERTY-GET, 136, @AllowSelection
                       RETURNING "boolean", TYPE 11
      * AllowSelection
      * Returns or sets whether the user can select ranges of cells with the 
      * mouse and keyboard.
               PROPERTY-PUT, 136, @AllowSelection,
                   "boolean (Property Value)", TYPE 11
      * PicturesOver
      * Returns or sets whether text and pictures should be overlaid in cells.
               PROPERTY-GET, 139, @PicturesOver
                       RETURNING "boolean", TYPE 11
      * PicturesOver
      * Returns or sets whether text and pictures should be overlaid in cells.
               PROPERTY-PUT, 139, @PicturesOver,
                   "boolean (Property Value)", TYPE 11
      * CellChecked
      * Returns or sets whether a grid cell has a check mark in it.
               PROPERTY-GET, 140, @CellChecked
                       RETURNING "CellCheckedSettings", TYPE 3
      * CellChecked
      * Returns or sets whether a grid cell has a check mark in it.
               PROPERTY-PUT, 140, @CellChecked,
                   "CellCheckedSettings (Property Value)", TYPE 3
      * MergeCompare
      * Returns or sets the type of comparison used when merging cells.
               PROPERTY-GET, 141, @MergeCompare
                       RETURNING "MergeCompareSettings", TYPE 3
      * MergeCompare
      * Returns or sets the type of comparison used when merging cells.
               PROPERTY-PUT, 141, @MergeCompare,
                   "MergeCompareSettings (Property Value)", TYPE 3
      * Ellipsis
      * Returns or sets whether the control should display ellipsis (...) after 
      * long strings.
               PROPERTY-GET, 142, @Ellipsis
                       RETURNING "EllipsisSettings", TYPE 3
      * Ellipsis
      * Returns or sets whether the control should display ellipsis (...) after 
      * long strings.
               PROPERTY-PUT, 142, @Ellipsis,
                   "EllipsisSettings (Property Value)", TYPE 3
           
      * vsFlexArray Event Interface
           
      * _DvsFlexArrayEvents
           CLASS @_DvsFlexArrayEvents
               CLSID, 8AE029D2-08E3-11D1-BAA2-444553540000
               NAME, "_DvsFlexArrayEvents"
      * SelChange
      * Fired after the selected range changes.
               METHOD, 1, @SelChange
      * RowColChange
      * Fired when the current cell changes to a different cell.
               METHOD, 2, @RowColChange
      * EnterCell
      * Fired when a cell becomes active.
               METHOD, 3, @EnterCell
      * LeaveCell
      * Fired before the current cell changes to a different cell.
               METHOD, 4, @LeaveCell
      * Scroll
      * Fired after the control scrolls.
               METHOD, 5, @Scroll
      * Compare
      * Fired when the Sort property is set to flexSortCustom, to allow custom 
      * comparison of rows.
               METHOD, 6, @Compare,
                   "long*" @Row1, TYPE 16387,
                   "long*" @Row2, TYPE 16387,
                   "short*" @Cmp, TYPE 16386
      * Click
               METHOD, -600, @Click
      * DblClick
               METHOD, -601, @DblClick
      * KeyDown
               METHOD, -602, @KeyDown,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyPress
               METHOD, -603, @KeyPress,
                   "short*" @KeyAscii, TYPE 16386
      * KeyUp
               METHOD, -604, @KeyUp,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * MouseDown
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @X, TYPE 3,
                   "OLE_YPOS_PIXELS" @Y, TYPE 3
      * MouseMove
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @X, TYPE 3,
                   "OLE_YPOS_PIXELS" @Y, TYPE 3
      * MouseUp
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @X, TYPE 3,
                   "OLE_YPOS_PIXELS" @Y, TYPE 3
      * UserResized
      * Fired after the user resizes a row or a column.
               METHOD, 7, @UserResized,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
      * Collapsed
      * Fired after the user expands or collapses a row group in an outline.
               METHOD, 8, @Collapsed
      * AfterEdit
      * Fired after the control exits cell edit mode.
               METHOD, 9, @AfterEdit,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
      * BeforeEdit
      * Fired before the control enters cell edit mode.
               METHOD, 10, @BeforeEdit,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "boolean*" @Cancel, TYPE 16395
      * KeyPressEdit
      * Fired when the user presses a key in cell-editing mode.
               METHOD, 11, @KeyPressEdit,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "short*" @KeyAscii, TYPE 16386
      * Validate
      * Fired before the control exits cell edit mode.
               METHOD, 12, @Validate,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "boolean*" @Cancel, TYPE 16395
      * BeforeDataRefresh
      * Fired before reading data from the record source.
               METHOD, 13, @BeforeDataRefresh,
                   "boolean*" @Cancel, TYPE 16395
      * AfterDataRefresh
      * Fired after reading data from the record source.
               METHOD, 14, @AfterDataRefresh
      * DrawCell
      * Fired when the OwnerDraw property is set to allow custom cell drawing.
               METHOD, 15, @DrawCell,
                   "long" @hDC, TYPE 3,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "long" @Left, TYPE 3,
                   "long" @Top, TYPE 3,
                   "long" @Right, TYPE 3,
                   "long" @Bottom, TYPE 3,
                   "boolean*" @Done, TYPE 16395
      * OLEStartDrag
      * Fired after an OLE drag operation is started (manually or 
      * automatically).
               METHOD, 16, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * Fired after every OLEDragOver event to allow the source component to 
      * provide visual feedback to the user.
               METHOD, 17, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * Fired on the source component when a target component performs the 
      * GetData method on the sources DataObject object.
               METHOD, 18, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * Fired after a drop, to inform the source component that a drag action 
      * was either performed or canceled.
               METHOD, 19, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * Fired when a component is dragged over another.
               METHOD, 20, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @X, TYPE 16388,
                   "single*" @Y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * Fired when a source component is dropped onto a target component.
               METHOD, 21, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @X, TYPE 16388,
                   "single*" @Y, TYPE 16388
      * KeyDownEdit
      * Fired when the user presses a key in cell-editing mode.
               METHOD, 22, @KeyDownEdit,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyUpEdit
      * Fired when the user presses a key in cell-editing mode.
               METHOD, 23, @KeyUpEdit,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * BeforePageBreak
      * Fired while printing the control to control page breaks.
               METHOD, 24, @BeforePageBreak,
                   "long" @Row, TYPE 3,
                   "boolean*" @BreakOK, TYPE 16395
      * GetHeaderRow
      * Fired while printing the control to set repeating header rows.
               METHOD, 25, @GetHeaderRow,
                   "long" @Row, TYPE 3,
                   "long*" @HeaderRow, TYPE 16387
      * Error
      * Fired after a data-access error.
               METHOD, 26, @Error,
                   "long" @ErrorCode, TYPE 3,
                   "boolean*" @ShowMsgBox, TYPE 16395
           
      * :-) VideoSoft vsFlexArray 3.0
           
      * vsFlexArray
           CLASS @vsFlexArray
               CLSID, 8AE029D3-08E3-11D1-BAA2-444553540000
               NAME, "vsFlexArray"
               DEFAULT-INTERFACE, "_DvsFlexArray"
               DEFAULT-SOURCE, "_DvsFlexArrayEvents"
      * ColAlignment
      * Returns or sets the alignment of the given column.
               PROPERTY-GET, 99, @ColAlignment,
                   "long" @Col, TYPE 3
                       RETURNING "AlignmentSettings", TYPE 3
      * ColAlignment
      * Returns or sets the alignment of the given column.
               PROPERTY-PUT, 99, @ColAlignment,
                   "long" @Col, TYPE 3,
                   "AlignmentSettings (Property Value)", TYPE 3
      * ColWidth
      * Returns or sets the width of the specified column in twips.
               PROPERTY-GET, 100, @ColWidth,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColWidth
      * Returns or sets the width of the specified column in twips.
               PROPERTY-PUT, 100, @ColWidth,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * RowHeight
      * Returns or sets the height of the specified row in twips.
               PROPERTY-GET, 101, @RowHeight,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowHeight
      * Returns or sets the height of the specified row in twips.
               PROPERTY-PUT, 101, @RowHeight,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * MergeRow
      * Returns or sets whether a row will have its cells merged (see also the 
      * MergeCells property).
               PROPERTY-GET, 102, @MergeRow,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * MergeRow
      * Returns or sets whether a row will have its cells merged (see also the 
      * MergeCells property).
               PROPERTY-PUT, 102, @MergeRow,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * MergeCol
      * Returns or sets whether a column will have its cells merged (see also 
      * the MergeCells property).
               PROPERTY-GET, 103, @MergeCol,
                   "long" @Col, TYPE 3
                       RETURNING "boolean", TYPE 11
      * MergeCol
      * Returns or sets whether a column will have its cells merged (see also 
      * the MergeCells property).
               PROPERTY-PUT, 103, @MergeCol,
                   "long" @Col, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * RowPosition
      * Moves a given row into a new position.
               PROPERTY-GET, 104, @RowPosition,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowPosition
      * Moves a given row into a new position.
               PROPERTY-PUT, 104, @RowPosition,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * ColPosition
      * Moves a given column into a new position.
               PROPERTY-GET, 105, @ColPosition,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColPosition
      * Moves a given column into a new position.
               PROPERTY-PUT, 105, @ColPosition,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * RowData
      * Returns or sets a user-defined long value associated with the given 
      * row.
               PROPERTY-GET, 106, @RowData,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * RowData
      * Returns or sets a user-defined long value associated with the given 
      * row.
               PROPERTY-PUT, 106, @RowData,
                   "long" @Row, TYPE 3,
                   "long (Property Value)", TYPE 3
      * ColData
      * Returns or sets a user-defined long value associated with the given 
      * column.
               PROPERTY-GET, 107, @ColData,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * ColData
      * Returns or sets a user-defined long value associated with the given 
      * column.
               PROPERTY-PUT, 107, @ColData,
                   "long" @Col, TYPE 3,
                   "long (Property Value)", TYPE 3
      * AddItem
      * Adds a row to the control.
               METHOD, 90, @AddItem,
                   "BSTR" @Item, TYPE 8,
                   "VARIANT" @Row, TYPE 12
                       OPTIONAL 1
      * RemoveItem
      * Removes a row from the control.
               METHOD, 91, @RemoveItem,
                   "long" @Row, TYPE 3
      * TextMatrix
      * Returns or sets the contents of a cell identified by its row and column 
      * coordinates.
               PROPERTY-GET, 108, @TextMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * TextMatrix
      * Returns or sets the contents of a cell identified by its row and column 
      * coordinates.
               PROPERTY-PUT, 108, @TextMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * Clear
      * Clears the contents of the control. Optional parameters specify what to 
      * clear and where.
               METHOD, 92, @Clear,
                   "VARIANT" @Where, TYPE 12,
                   "VARIANT" @What, TYPE 12
                       OPTIONAL 2
      * EditCell
      * Activates edit mode.
               METHOD, 93, @EditCell
      * ValueMatrix
      * Returns the numeric value of a cell identified by its row and column 
      * coordinates.
               PROPERTY-GET, 109, @ValueMatrix,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3
                       RETURNING "double", TYPE 5
      * IsSubtotal
      * Returns or sets whether a row contains subtotals (as opposed to data).
               PROPERTY-GET, 110, @IsSubtotal,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * IsSubtotal
      * Returns or sets whether a row contains subtotals (as opposed to data).
               PROPERTY-PUT, 110, @IsSubtotal,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * Subtotal
      * Calculates subtotals.
               METHOD, 94, @Subtotal,
                   "SubtotalSettings" @Function, TYPE 3,
                   "VARIANT" @GroupOn, TYPE 12,
                   "VARIANT" @TotalOn, TYPE 12,
                   "VARIANT" @Format, TYPE 12,
                   "VARIANT" @BackColor, TYPE 12,
                   "VARIANT" @ForeColor, TYPE 12,
                   "VARIANT" @FontBold, TYPE 12,
                   "VARIANT" @Caption, TYPE 12,
                   "VARIANT" @MatchFrom, TYPE 12
                       OPTIONAL 8
      * Refresh
               METHOD, -550, @Refresh
      * Outline
      * Sets an outline level for displaying subtotals.
               METHOD, 95, @Outline,
                   "short" @Level, TYPE 2
      * FixedAlignment
      * Returns or sets the alignment for the fixed rows in a column.
               PROPERTY-GET, 111, @FixedAlignment,
                   "long" @Col, TYPE 3
                       RETURNING "AlignmentSettings", TYPE 3
      * FixedAlignment
      * Returns or sets the alignment for the fixed rows in a column.
               PROPERTY-PUT, 111, @FixedAlignment,
                   "long" @Col, TYPE 3,
                   "AlignmentSettings (Property Value)", TYPE 3
      * RowIsVisible
      * Returns whether a given row is currently within view.
               PROPERTY-GET, 112, @RowIsVisible,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * ColIsVisible
      * Returns whether a given column is currently within view.
               PROPERTY-GET, 113, @ColIsVisible,
                   "long" @Col, TYPE 3
                       RETURNING "boolean", TYPE 11
      * RowPos
      * Returns the top (y) coordinate of a row relative to the edge of the 
      * control, in twips.
               PROPERTY-GET, 114, @RowPos,
                   "long" @Row, TYPE 3
                       RETURNING "long", TYPE 3
      * ColPos
      * Returns the left (x) coordinate of a column relative to the edge of the 
      * control, in twips.
               PROPERTY-GET, 115, @ColPos,
                   "long" @Col, TYPE 3
                       RETURNING "long", TYPE 3
      * IsSelected
      * Returns or sets whether a row is selected (for listbox-type 
      * selections).
               PROPERTY-GET, 116, @IsSelected,
                   "long" @Row, TYPE 3
                       RETURNING "boolean", TYPE 11
      * IsSelected
      * Returns or sets whether a row is selected (for listbox-type 
      * selections).
               PROPERTY-PUT, 116, @IsSelected,
                   "long" @Row, TYPE 3,
                   "boolean (Property Value)", TYPE 11
      * TextArray
      * Returns or sets the contents of a cell identified by a single index.
               PROPERTY-GET, 117, @TextArray,
                   "long" @index, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * TextArray
      * Returns or sets the contents of a cell identified by a single index.
               PROPERTY-PUT, 117, @TextArray,
                   "long" @index, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * IsCollapsed
      * Returns or sets whether an outline row is collapsed or expanded.
               PROPERTY-GET, 118, @IsCollapsed,
                   "long" @Row, TYPE 3
                       RETURNING "CollapsedSettings", TYPE 3
      * IsCollapsed
      * Returns or sets whether an outline row is collapsed or expanded.
               PROPERTY-PUT, 118, @IsCollapsed,
                   "long" @Row, TYPE 3,
                   "CollapsedSettings (Property Value)", TYPE 3
      * Select
      * Selects a range of cells.
               METHOD, 96, @Select,
                   "long" @Row, TYPE 3,
                   "long" @Col, TYPE 3,
                   "VARIANT" @RowSel, TYPE 12,
                   "VARIANT" @ColSel, TYPE 12
                       OPTIONAL 2
      * AutoSize
      * Resizes column widths or row heights to fit cell contents.
               METHOD, 97, @AutoSize,
                   "long" @Col1, TYPE 3,
                   "VARIANT" @Col2, TYPE 12,
                   "VARIANT" @Equal, TYPE 12
                       OPTIONAL 2
      * DataRefresh
      * Forces the control to re-fetch all data from its data source.
               METHOD, 98, @DataRefresh
      * CellBorder
      * Draws a border around and within the selected cells.
               METHOD, 124, @CellBorder,
                   "OLE_COLOR" @Color, TYPE 19,
                   "short" @Left, TYPE 2,
                   "short" @Top, TYPE 2,
                   "short" @Right, TYPE 2,
                   "short" @Bottom, TYPE 2,
                   "short" @Vertical, TYPE 2,
                   "short" @Horizontal, TYPE 2
      * OleDrag
      * Initiates an OLE drag operation.
               METHOD, 128, @OleDrag
      * SaveGrid
      * Saves grid contents and format to a file.
               METHOD, 129, @SaveGrid,
                   "BSTR" @FileName, TYPE 8,
                   "SaveLoadSettings" @SaveWhat, TYPE 3
                       RETURNING "long", TYPE 3
      * LoadGrid
      * Loads grid contents and format from a file.
               METHOD, 130, @LoadGrid,
                   "BSTR" @FileName, TYPE 8,
                   "SaveLoadSettings" @LoadWhat, TYPE 3
                       RETURNING "long", TYPE 3
      * Archive
      * Adds, extracts, or deletes files from a vsFlex archive file.
               METHOD, 131, @Archive,
                   "BSTR" @arcFileName, TYPE 8,
                   "BSTR" @FileName, TYPE 8,
                   "ArchiveSettings" @Action, TYPE 3
      * ArchiveInfo
      * Gets information from a vsFlex archive file.
               PROPERTY-GET, 132, @ArchiveInfo,
                   "BSTR" @ArcFile, TYPE 8,
                   "ArchiveInfoSettings" @InfoType, TYPE 3,
                   "VARIANT" @index, TYPE 12
                       OPTIONAL 1
                       RETURNING "VARIANT", TYPE 12
      * ColSort
      * Returns or sets the sorting order for each column (for use with the Sort 
      * property).
               PROPERTY-GET, 135, @ColSort,
                   "long" @Col, TYPE 3
                       RETURNING "SortSettings", TYPE 3
      * ColSort
      * Returns or sets the sorting order for each column (for use with the Sort 
      * property).
               PROPERTY-PUT, 135, @ColSort,
                   "long" @Col, TYPE 3,
                   "SortSettings (Property Value)", TYPE 3
      * ColFormat
      * Returns or sets the format used to display numeric values.
               PROPERTY-GET, 137, @ColFormat,
                   "long" @Col, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * ColFormat
      * Returns or sets the format used to display numeric values.
               PROPERTY-PUT, 137, @ColFormat,
                   "long" @Col, TYPE 3,
                   "BSTR (Property Value)", TYPE 8
      * ColDataType
      * Returns or sets the data type for the column.
               PROPERTY-GET, 138, @ColDataType,
                   "long" @Col, TYPE 3
                       RETURNING "DataTypeSettings", TYPE 3
      * ColDataType
      * Returns or sets the data type for the column.
               PROPERTY-PUT, 138, @ColDataType,
                   "long" @Col, TYPE 3,
                   "DataTypeSettings (Property Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * FontName
               PROPERTY-GET, 9, @FontName
                       RETURNING "BSTR", TYPE 8
      * FontName
               PROPERTY-PUT, 9, @FontName,
                   "BSTR (Property Value)", TYPE 8
      * FontSize
               PROPERTY-GET, 10, @FontSize
                       RETURNING "single", TYPE 4
      * FontSize
               PROPERTY-PUT, 10, @FontSize,
                   "single (Property Value)", TYPE 4
      * FontBold
               PROPERTY-GET, 11, @FontBold
                       RETURNING "boolean", TYPE 11
      * FontBold
               PROPERTY-PUT, 11, @FontBold,
                   "boolean (Property Value)", TYPE 11
      * FontItalic
               PROPERTY-GET, 12, @FontItalic
                       RETURNING "boolean", TYPE 11
      * FontItalic
               PROPERTY-PUT, 12, @FontItalic,
                   "boolean (Property Value)", TYPE 11
      * FontStrikethru
               PROPERTY-GET, 13, @FontStrikethru
                       RETURNING "boolean", TYPE 11
      * FontStrikethru
               PROPERTY-PUT, 13, @FontStrikethru,
                   "boolean (Property Value)", TYPE 11
      * FontUnderline
               PROPERTY-GET, 14, @FontUnderline
                       RETURNING "boolean", TYPE 11
      * FontUnderline
               PROPERTY-PUT, 14, @FontUnderline,
                   "boolean (Property Value)", TYPE 11
      * Rows
      * Returns or sets the total number of rows in the control.
               PROPERTY-GET, 17, @Rows
                       RETURNING "long", TYPE 3
      * Rows
      * Returns or sets the total number of rows in the control.
               PROPERTY-PUT, 17, @Rows,
                   "long (Property Value)", TYPE 3
      * Cols
      * Returns or sets the total number of columns in the control.
               PROPERTY-GET, 18, @Cols
                       RETURNING "long", TYPE 3
      * Cols
      * Returns or sets the total number of columns in the control.
               PROPERTY-PUT, 18, @Cols,
                   "long (Property Value)", TYPE 3
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-GET, 15, @Version
                       RETURNING "short", TYPE 2
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-PUT, 15, @Version,
                   "short (Property Value)", TYPE 2
      * FormatString
      * Assigns column widths, alignments, and fixed row and column text.
               PROPERTY-GET, 16, @FormatString
                       RETURNING "BSTR", TYPE 8
      * FormatString
      * Assigns column widths, alignments, and fixed row and column text.
               PROPERTY-PUT, 16, @FormatString,
                   "BSTR (Property Value)", TYPE 8
      * FixedRows
      * Returns or sets the total number of fixed (non-scrollable) rows.
               PROPERTY-GET, 19, @FixedRows
                       RETURNING "long", TYPE 3
      * FixedRows
      * Returns or sets the total number of fixed (non-scrollable) rows.
               PROPERTY-PUT, 19, @FixedRows,
                   "long (Property Value)", TYPE 3
      * FixedCols
      * Returns or sets the total number of fixed (non-scrollable) columns.
               PROPERTY-GET, 20, @FixedCols
                       RETURNING "long", TYPE 3
      * FixedCols
      * Returns or sets the total number of fixed (non-scrollable) columns.
               PROPERTY-PUT, 20, @FixedCols,
                   "long (Property Value)", TYPE 3
      * TopRow
      * Returns or sets the zero-based index of the topmost non-fixed row 
      * displayed in the control.
               PROPERTY-GET, 21, @TopRow
                       RETURNING "long", TYPE 3
      * TopRow
      * Returns or sets the zero-based index of the topmost non-fixed row 
      * displayed in the control.
               PROPERTY-PUT, 21, @TopRow,
                   "long (Property Value)", TYPE 3
      * LeftCol
      * Returns or sets the zero-based index of the leftmost non-fixed column 
      * displayed in the control.
               PROPERTY-GET, 22, @LeftCol
                       RETURNING "long", TYPE 3
      * LeftCol
      * Returns or sets the zero-based index of the leftmost non-fixed column 
      * displayed in the control.
               PROPERTY-PUT, 22, @LeftCol,
                   "long (Property Value)", TYPE 3
      * Row
      * Returns or sets the zero-based index of the current row.
               PROPERTY-GET, 23, @Row
                       RETURNING "long", TYPE 3
      * Row
      * Returns or sets the zero-based index of the current row.
               PROPERTY-PUT, 23, @Row,
                   "long (Property Value)", TYPE 3
      * Col
      * Returns or sets the zero-based index of the current column.
               PROPERTY-GET, 24, @Col
                       RETURNING "long", TYPE 3
      * Col
      * Returns or sets the zero-based index of the current column.
               PROPERTY-PUT, 24, @Col,
                   "long (Property Value)", TYPE 3
      * RowSel
      * Returns or sets the extent of a range of rows.
               PROPERTY-GET, 25, @RowSel
                       RETURNING "long", TYPE 3
      * RowSel
      * Returns or sets the extent of a range of rows.
               PROPERTY-PUT, 25, @RowSel,
                   "long (Property Value)", TYPE 3
      * ColSel
      * Returns or sets the extent of a range of columns.
               PROPERTY-GET, 26, @ColSel
                       RETURNING "long", TYPE 3
      * ColSel
      * Returns or sets the extent of a range of columns.
               PROPERTY-PUT, 26, @ColSel,
                   "long (Property Value)", TYPE 3
      * Text
      * Returns or sets the contents of the selected cell or range.
               PROPERTY-GET, 27, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns or sets the contents of the selected cell or range.
               PROPERTY-PUT, 27, @Text,
                   "BSTR (Property Value)", TYPE 8
      * BackColor
      * Returns or sets the background color of the non-fixed cells.
               PROPERTY-GET, 28, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns or sets the background color of the non-fixed cells.
               PROPERTY-PUT, 28, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColor
      * Returns or sets the foreground color of the non-fixed cells.
               PROPERTY-GET, 29, @ForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColor
      * Returns or sets the foreground color of the non-fixed cells.
               PROPERTY-PUT, 29, @ForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorFixed
      * Returns or sets the background color of the fixed rows and columns.
               PROPERTY-GET, 30, @BackColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorFixed
      * Returns or sets the background color of the fixed rows and columns.
               PROPERTY-PUT, 30, @BackColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColorFixed
      * Returns or sets the foreground color of the fixed rows and columns.
               PROPERTY-GET, 31, @ForeColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColorFixed
      * Returns or sets the foreground color of the fixed rows and columns.
               PROPERTY-PUT, 31, @ForeColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorSel
      * Returns or sets the background color of the selected cells.
               PROPERTY-GET, 32, @BackColorSel
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorSel
      * Returns or sets the background color of the selected cells.
               PROPERTY-PUT, 32, @BackColorSel,
                   "OLE_COLOR (Property Value)", TYPE 19
      * ForeColorSel
      * Returns or sets the foreground color of the selected cells.
               PROPERTY-GET, 33, @ForeColorSel
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColorSel
      * Returns or sets the foreground color of the selected cells.
               PROPERTY-PUT, 33, @ForeColorSel,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColorBkg
      * Returns or sets the background color of the area not covered by any 
      * cells.
               PROPERTY-GET, 34, @BackColorBkg
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorBkg
      * Returns or sets the background color of the area not covered by any 
      * cells.
               PROPERTY-PUT, 34, @BackColorBkg,
                   "OLE_COLOR (Property Value)", TYPE 19
      * WordWrap
      * Returns or sets whether text wider that its cell will wrap.
               PROPERTY-GET, 35, @WordWrap
                       RETURNING "boolean", TYPE 11
      * WordWrap
      * Returns or sets whether text wider that its cell will wrap.
               PROPERTY-PUT, 35, @WordWrap,
                   "boolean (Property Value)", TYPE 11
      * TextStyle
      * Returns or sets 3D effects for displaying text in non-fixed cells.
               PROPERTY-GET, 36, @TextStyle
                       RETURNING "TextStyleSettings", TYPE 3
      * TextStyle
      * Returns or sets 3D effects for displaying text in non-fixed cells.
               PROPERTY-PUT, 36, @TextStyle,
                   "TextStyleSettings (Property Value)", TYPE 3
      * TextStyleFixed
      * Returns or sets 3D effects for displaying text in fixed cells.
               PROPERTY-GET, 37, @TextStyleFixed
                       RETURNING "TextStyleSettings", TYPE 3
      * TextStyleFixed
      * Returns or sets 3D effects for displaying text in fixed cells.
               PROPERTY-PUT, 37, @TextStyleFixed,
                   "TextStyleSettings (Property Value)", TYPE 3
      * ScrollTrack
      * Returns or sets scrolling should occur while the user moves the scroll 
      * thumb.
               PROPERTY-GET, 1, @ScrollTrack
                       RETURNING "boolean", TYPE 11
      * ScrollTrack
      * Returns or sets scrolling should occur while the user moves the scroll 
      * thumb.
               PROPERTY-PUT, 1, @ScrollTrack,
                   "boolean (Property Value)", TYPE 11
      * FocusRect
      * Returns or sets the type of focus rectangle to be displayed around the 
      * current cell.
               PROPERTY-GET, 38, @FocusRect
                       RETURNING "FocusRectSettings", TYPE 3
      * FocusRect
      * Returns or sets the type of focus rectangle to be displayed around the 
      * current cell.
               PROPERTY-PUT, 38, @FocusRect,
                   "FocusRectSettings (Property Value)", TYPE 3
      * HighLight
      * Returns or sets whether selected cells will be highlighted.
               PROPERTY-GET, 39, @HighLight
                       RETURNING "ShowSelSettings", TYPE 3
      * HighLight
      * Returns or sets whether selected cells will be highlighted.
               PROPERTY-PUT, 39, @HighLight,
                   "ShowSelSettings (Property Value)", TYPE 3
      * Redraw
      * Enables or disables redrawing of the FlexArray control.
               PROPERTY-GET, 40, @Redraw
                       RETURNING "boolean", TYPE 11
      * Redraw
      * Enables or disables redrawing of the FlexArray control.
               PROPERTY-PUT, 40, @Redraw,
                   "boolean (Property Value)", TYPE 11
      * ScrollBars
      * Returns or sets whether the control will display horizontal or vertical 
      * scroll bars.
               PROPERTY-GET, 41, @ScrollBars
                       RETURNING "ScrollBarsSettings", TYPE 3
      * ScrollBars
      * Returns or sets whether the control will display horizontal or vertical 
      * scroll bars.
               PROPERTY-PUT, 41, @ScrollBars,
                   "ScrollBarsSettings (Property Value)", TYPE 3
      * MouseRow
      * Returns the zero-based index of the row under the mouse pointer.
               PROPERTY-GET, 42, @MouseRow
                       RETURNING "long", TYPE 3
      * MouseRow
      * Returns the zero-based index of the row under the mouse pointer.
               PROPERTY-PUT, 42, @MouseRow,
                   "long (Property Value)", TYPE 3
      * MouseCol
      * Returns the zero-based index of the column under the mouse pointer.
               PROPERTY-GET, 43, @MouseCol
                       RETURNING "long", TYPE 3
      * MouseCol
      * Returns the zero-based index of the column under the mouse pointer.
               PROPERTY-PUT, 43, @MouseCol,
                   "long (Property Value)", TYPE 3
      * CellLeft
      * Returns the left (x) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-GET, 44, @CellLeft
                       RETURNING "long", TYPE 3
      * CellLeft
      * Returns the left (x) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-PUT, 44, @CellLeft,
                   "long (Property Value)", TYPE 3
      * CellTop
      * Returns the top (y) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-GET, 45, @CellTop
                       RETURNING "long", TYPE 3
      * CellTop
      * Returns the top (y) coordinate of the selected cell relative to the 
      * control, in twips. Also brings the cell into view, scrolling if 
      * necessary.
               PROPERTY-PUT, 45, @CellTop,
                   "long (Property Value)", TYPE 3
      * CellWidth
      * Returns the width of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-GET, 46, @CellWidth
                       RETURNING "long", TYPE 3
      * CellWidth
      * Returns the width of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-PUT, 46, @CellWidth,
                   "long (Property Value)", TYPE 3
      * CellHeight
      * Returns the height of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-GET, 47, @CellHeight
                       RETURNING "long", TYPE 3
      * CellHeight
      * Returns the height of the selected cell, in twips. Also brings the cell 
      * into view, scrolling if necessary.
               PROPERTY-PUT, 47, @CellHeight,
                   "long (Property Value)", TYPE 3
      * RowHeightMin
      * Returns or sets a minimum row height for the entire control, in twips.
               PROPERTY-GET, 48, @RowHeightMin
                       RETURNING "long", TYPE 3
      * RowHeightMin
      * Returns or sets a minimum row height for the entire control, in twips.
               PROPERTY-PUT, 48, @RowHeightMin,
                   "long (Property Value)", TYPE 3
      * FillStyle
      * Returns or sets whether changes to the Text or Cell formatting 
      * properties apply to the current cell or to the entire selection.
               PROPERTY-GET, 49, @FillStyle
                       RETURNING "FillStyleSettings", TYPE 3
      * FillStyle
      * Returns or sets whether changes to the Text or Cell formatting 
      * properties apply to the current cell or to the entire selection.
               PROPERTY-PUT, 49, @FillStyle,
                   "FillStyleSettings (Property Value)", TYPE 3
      * GridLines
      * Returns or sets the type of lines to be drawn between non-fixed cells.
               PROPERTY-GET, 50, @GridLines
                       RETURNING "GridStyleSettings", TYPE 3
      * GridLines
      * Returns or sets the type of lines to be drawn between non-fixed cells.
               PROPERTY-PUT, 50, @GridLines,
                   "GridStyleSettings (Property Value)", TYPE 3
      * GridLinesFixed
      * Returns or sets the type of lines to be drawn between fixed cells.
               PROPERTY-GET, 51, @GridLinesFixed
                       RETURNING "GridStyleSettings", TYPE 3
      * GridLinesFixed
      * Returns or sets the type of lines to be drawn between fixed cells.
               PROPERTY-PUT, 51, @GridLinesFixed,
                   "GridStyleSettings (Property Value)", TYPE 3
      * GridColor
      * Returns or sets the color used to draw the grid lines between the 
      * non-fixed cells.
               PROPERTY-GET, 52, @GridColor
                       RETURNING "OLE_COLOR", TYPE 19
      * GridColor
      * Returns or sets the color used to draw the grid lines between the 
      * non-fixed cells.
               PROPERTY-PUT, 52, @GridColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * GridColorFixed
      * Returns or sets the color used to draw the grid lines between the fixed 
      * cells.
               PROPERTY-GET, 53, @GridColorFixed
                       RETURNING "OLE_COLOR", TYPE 19
      * GridColorFixed
      * Returns or sets the color used to draw the grid lines between the fixed 
      * cells.
               PROPERTY-PUT, 53, @GridColorFixed,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellBackColor
      * Returns or sets the background color of the selected cell or range.
               PROPERTY-GET, 54, @CellBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellBackColor
      * Returns or sets the background color of the selected cell or range.
               PROPERTY-PUT, 54, @CellBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellForeColor
      * Returns or sets the foreground color of the selected cell or range.
               PROPERTY-GET, 55, @CellForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellForeColor
      * Returns or sets the foreground color of the selected cell or range.
               PROPERTY-PUT, 55, @CellForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellAlignment
      * Returns or sets the alignment of text in the selected cell or range.
               PROPERTY-GET, 56, @CellAlignment
                       RETURNING "AlignmentSettings", TYPE 3
      * CellAlignment
      * Returns or sets the alignment of text in the selected cell or range.
               PROPERTY-PUT, 56, @CellAlignment,
                   "AlignmentSettings (Property Value)", TYPE 3
      * CellTextStyle
      * Returns or sets 3D effects for text in a selected cell or range.
               PROPERTY-GET, 57, @CellTextStyle
                       RETURNING "TextStyleSettings", TYPE 3
      * CellTextStyle
      * Returns or sets 3D effects for text in a selected cell or range.
               PROPERTY-PUT, 57, @CellTextStyle,
                   "TextStyleSettings (Property Value)", TYPE 3
      * CellPicture
      * Returns or sets the picture displayed in a selected cell or range.
               PROPERTY-GET, 58, @CellPicture
                       RETURNING "Picture*", TYPE 9
      * CellPicture
      * Returns or sets the picture displayed in a selected cell or range.
               PROPERTY-PUT, 58, @CellPicture,
                   "Picture* (Property Value)", TYPE 9
      * CellPictureAlignment
      * Returns or sets the alignment of the pictures in the selected cell or 
      * range.
               PROPERTY-GET, 59, @CellPictureAlignment
                       RETURNING "PictureAlignmentSettings", TYPE 3
      * CellPictureAlignment
      * Returns or sets the alignment of the pictures in the selected cell or 
      * range.
               PROPERTY-PUT, 59, @CellPictureAlignment,
                   "PictureAlignmentSettings (Property Value)", TYPE 3
      * CellFontName
      * Returns or sets the name of the font of the selected cell or range.
               PROPERTY-GET, 60, @CellFontName
                       RETURNING "BSTR", TYPE 8
      * CellFontName
      * Returns or sets the name of the font of the selected cell or range.
               PROPERTY-PUT, 60, @CellFontName,
                   "BSTR (Property Value)", TYPE 8
      * CellFontSize
      * Returns or sets the size of the font of the selected cell or range.
               PROPERTY-GET, 61, @CellFontSize
                       RETURNING "single", TYPE 4
      * CellFontSize
      * Returns or sets the size of the font of the selected cell or range.
               PROPERTY-PUT, 61, @CellFontSize,
                   "single (Property Value)", TYPE 4
      * CellFontBold
      * Returns or sets the Bold attribute of the font of the selected cell or 
      * range.
               PROPERTY-GET, 62, @CellFontBold
                       RETURNING "boolean", TYPE 11
      * CellFontBold
      * Returns or sets the Bold attribute of the font of the selected cell or 
      * range.
               PROPERTY-PUT, 62, @CellFontBold,
                   "boolean (Property Value)", TYPE 11
      * CellFontItalic
      * Returns or sets the Italic attribute of the font of the selected cell or 
      * range.
               PROPERTY-GET, 63, @CellFontItalic
                       RETURNING "boolean", TYPE 11
      * CellFontItalic
      * Returns or sets the Italic attribute of the font of the selected cell or 
      * range.
               PROPERTY-PUT, 63, @CellFontItalic,
                   "boolean (Property Value)", TYPE 11
      * CellFontWidth
      * Returns or sets the width of the font of the selected cell or range.
               PROPERTY-GET, 64, @CellFontWidth
                       RETURNING "single", TYPE 4
      * CellFontWidth
      * Returns or sets the width of the font of the selected cell or range.
               PROPERTY-PUT, 64, @CellFontWidth,
                   "single (Property Value)", TYPE 4
      * CellFontUnderline
      * Returns or sets the Underline attribute of the font of the selected cell 
      * or range.
               PROPERTY-GET, 74, @CellFontUnderline
                       RETURNING "boolean", TYPE 11
      * CellFontUnderline
      * Returns or sets the Underline attribute of the font of the selected cell 
      * or range.
               PROPERTY-PUT, 74, @CellFontUnderline,
                   "boolean (Property Value)", TYPE 11
      * CellFontStrikethru
      * Returns or sets the Strikethru attribute of the font of the selected 
      * cell or range.
               PROPERTY-GET, 75, @CellFontStrikethru
                       RETURNING "boolean", TYPE 11
      * CellFontStrikethru
      * Returns or sets the Strikethru attribute of the font of the selected 
      * cell or range.
               PROPERTY-PUT, 75, @CellFontStrikethru,
                   "boolean (Property Value)", TYPE 11
      * FontWidth
      * Returns or sets the width of the font, in points.
               PROPERTY-GET, 65, @FontWidth
                       RETURNING "single", TYPE 4
      * FontWidth
      * Returns or sets the width of the font, in points.
               PROPERTY-PUT, 65, @FontWidth,
                   "single (Property Value)", TYPE 4
      * Clip
      * Returns or sets the contents of a range.
               PROPERTY-GET, 66, @Clip
                       RETURNING "BSTR", TYPE 8
      * Clip
      * Returns or sets the contents of a range.
               PROPERTY-PUT, 66, @Clip,
                   "BSTR (Property Value)", TYPE 8
      * Sort
      * Sets a sorting order for the selected rows using the selected columns as 
      * keys.
               PROPERTY-GET, 67, @Sort
                       RETURNING "SortSettings", TYPE 3
      * Sort
      * Sets a sorting order for the selected rows using the selected columns as 
      * keys.
               PROPERTY-PUT, 67, @Sort,
                   "SortSettings (Property Value)", TYPE 3
      * SelectionMode
      * Returns or sets whether the control will select cells in a free range, 
      * by row, by column, or like a listbox.
               PROPERTY-GET, 68, @SelectionMode
                       RETURNING "SelModeSettings", TYPE 3
      * SelectionMode
      * Returns or sets whether the control will select cells in a free range, 
      * by row, by column, or like a listbox.
               PROPERTY-PUT, 68, @SelectionMode,
                   "SelModeSettings (Property Value)", TYPE 3
      * MergeCells
      * Returns or sets whether cells with the same contents will be merged into 
      * a single cell.
               PROPERTY-GET, 69, @MergeCells
                       RETURNING "MergeSettings", TYPE 3
      * MergeCells
      * Returns or sets whether cells with the same contents will be merged into 
      * a single cell.
               PROPERTY-PUT, 69, @MergeCells,
                   "MergeSettings (Property Value)", TYPE 3
      * Picture
      * Returns a picture of the entire control.
               PROPERTY-GET, 70, @Picture
                       RETURNING "Picture*", TYPE 9
      * Picture
      * Returns a picture of the entire control.
               PROPERTY-PUT, 70, @Picture,
                   "Picture* (Property Value)", TYPE 9
      * PictureType
      * Returns or sets the type of picture returned by the Picture property.
               PROPERTY-GET, 2, @PictureType
                       RETURNING "PictureTypeSettings", TYPE 3
      * PictureType
      * Returns or sets the type of picture returned by the Picture property.
               PROPERTY-PUT, 2, @PictureType,
                   "PictureTypeSettings (Property Value)", TYPE 3
      * AllowBigSelection
      * Returns or sets whether clicking on the fixed area will select entire 
      * columns and rows.
               PROPERTY-GET, 71, @AllowBigSelection
                       RETURNING "boolean", TYPE 11
      * AllowBigSelection
      * Returns or sets whether clicking on the fixed area will select entire 
      * columns and rows.
               PROPERTY-PUT, 71, @AllowBigSelection,
                   "boolean (Property Value)", TYPE 11
      * AllowUserResizing
      * Returns or sets whether the user is allowed to resize rows and columns 
      * with the mouse.
               PROPERTY-GET, 72, @AllowUserResizing
                       RETURNING "AllowUserResizeSettings", TYPE 3
      * AllowUserResizing
      * Returns or sets whether the user is allowed to resize rows and columns 
      * with the mouse.
               PROPERTY-PUT, 72, @AllowUserResizing,
                   "AllowUserResizeSettings (Property Value)", TYPE 3
      * MousePointer
      * Returns or sets the setting of the mouse pointer.
               PROPERTY-GET, 3, @MousePointer
                       RETURNING "MousePointerSettings", TYPE 3
      * MousePointer
      * Returns or sets the setting of the mouse pointer.
               PROPERTY-PUT, 3, @MousePointer,
                   "MousePointerSettings (Property Value)", TYPE 3
      * MouseIcon
      * Returns or sets the icon to be used as a mouse cursor.
               PROPERTY-GET, 73, @MouseIcon
                       RETURNING "Picture*", TYPE 9
      * MouseIcon
      * Returns or sets the icon to be used as a mouse cursor.
               PROPERTY-PUT, 73, @MouseIcon,
                   "Picture* (Property Value)", TYPE 9
      * DataSource
      * Returns or sets the data source.
               PROPERTY-GET, 76, @DataSource
                       RETURNING "IRowCursor*", TYPE 13
      * DataSource
      * Returns or sets the data source.
               PROPERTY-PUT, 76, @DataSource,
                   "IRowCursor* (Property Value)", TYPE 13
      * VirtualData
      * Returns or sets whether all data is fetched from the data source at once 
      * or as needed.
               PROPERTY-GET, 4, @VirtualData
                       RETURNING "boolean", TYPE 11
      * VirtualData
      * Returns or sets whether all data is fetched from the data source at once 
      * or as needed.
               PROPERTY-PUT, 4, @VirtualData,
                   "boolean (Property Value)", TYPE 11
      * Editable
      * Returns or sets whether the control allows in-cell editing.
               PROPERTY-GET, 5, @Editable
                       RETURNING "boolean", TYPE 11
      * Editable
      * Returns or sets whether the control allows in-cell editing.
               PROPERTY-PUT, 5, @Editable,
                   "boolean (Property Value)", TYPE 11
      * ComboList
      * Returns or sets the list to be used as a drop-down when editing a cell.
               PROPERTY-GET, 77, @ComboList
                       RETURNING "BSTR", TYPE 8
      * ComboList
      * Returns or sets the list to be used as a drop-down when editing a cell.
               PROPERTY-PUT, 77, @ComboList,
                   "BSTR (Property Value)", TYPE 8
      * Value
      * Returns the numeric value of the current cell.
               PROPERTY-GET, 78, @Value
                       RETURNING "double", TYPE 5
      * Value
      * Returns the numeric value of the current cell.
               PROPERTY-PUT, 78, @Value,
                   "double (Property Value)", TYPE 5
      * FloodColor
      * Returns or sets the color used to flood cells.
               PROPERTY-GET, 6, @FloodColor
                       RETURNING "OLE_COLOR", TYPE 19
      * FloodColor
      * Returns or sets the color used to flood cells.
               PROPERTY-PUT, 6, @FloodColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CellFloodPercent
      * Returns or sets the percentage of flooding for a cell.
               PROPERTY-GET, 79, @CellFloodPercent
                       RETURNING "short", TYPE 2
      * CellFloodPercent
      * Returns or sets the percentage of flooding for a cell.
               PROPERTY-PUT, 79, @CellFloodPercent,
                   "short (Property Value)", TYPE 2
      * CellFloodColor
      * Returns or sets the color to be used for flooding a cell.
               PROPERTY-GET, 80, @CellFloodColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CellFloodColor
      * Returns or sets the color to be used for flooding a cell.
               PROPERTY-PUT, 80, @CellFloodColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * SubtotalPosition
      * Returns or sets whether subtotals should be inserted above or below the 
      * totaled data.
               PROPERTY-GET, 81, @SubtotalPosition
                       RETURNING "SubtotalPositionSettings", TYPE 3
      * SubtotalPosition
      * Returns or sets whether subtotals should be inserted above or below the 
      * totaled data.
               PROPERTY-PUT, 81, @SubtotalPosition,
                   "SubtotalPositionSettings (Property Value)", TYPE 3
      * _Text
               PROPERTY-GET, 0, @_Text
                       RETURNING "BSTR", TYPE 8
      * _Text
               PROPERTY-PUT, 0, @_Text,
                   "BSTR (Property Value)", TYPE 8
      * BorderStyle
               PROPERTY-GET, -504, @BorderStyle
                       RETURNING "short", TYPE 2
      * BorderStyle
               PROPERTY-PUT, -504, @BorderStyle,
                   "short (Property Value)", TYPE 2
      * Font
               PROPERTY-GET, -512, @Font
                       RETURNING "Font*", TYPE 9
      * Font
               PROPERTY-PUT, -512, @Font,
                   "Font* (Property Value)", TYPE 9
      * Enabled
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Appearance
               PROPERTY-GET, -520, @Appearance
                       RETURNING "AppearanceSettings", TYPE 3
      * Appearance
               PROPERTY-PUT, -520, @Appearance,
                   "AppearanceSettings (Property Value)", TYPE 3
      * OutlineBar
      * Returns or sets the type of outline bar that should be displayed.
               PROPERTY-GET, 82, @OutlineBar
                       RETURNING "OutlineBarSettings", TYPE 3
      * OutlineBar
      * Returns or sets the type of outline bar that should be displayed.
               PROPERTY-PUT, 82, @OutlineBar,
                   "OutlineBarSettings (Property Value)", TYPE 3
      * TreeColor
      * Returns or sets the color used to draw the outline tree.
               PROPERTY-GET, 83, @TreeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TreeColor
      * Returns or sets the color used to draw the outline tree.
               PROPERTY-PUT, 83, @TreeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * GridLineWidth
      * Returns or sets the width of the grid lines, in pixels.
               PROPERTY-GET, 84, @GridLineWidth
                       RETURNING "short", TYPE 2
      * GridLineWidth
      * Returns or sets the width of the grid lines, in pixels.
               PROPERTY-PUT, 84, @GridLineWidth,
                   "short (Property Value)", TYPE 2
      * AutoResize
      * Returns or sets whether column widths will be automatically adjusted 
      * when data is loaded.
               PROPERTY-GET, 7, @AutoResize
                       RETURNING "boolean", TYPE 11
      * AutoResize
      * Returns or sets whether column widths will be automatically adjusted 
      * when data is loaded.
               PROPERTY-PUT, 7, @AutoResize,
                   "boolean (Property Value)", TYPE 11
      * BottomRow
      * Returns the zero-based index of the last row displayed in the control.
               PROPERTY-GET, 85, @BottomRow
                       RETURNING "long", TYPE 3
      * BottomRow
      * Returns the zero-based index of the last row displayed in the control.
               PROPERTY-PUT, 85, @BottomRow,
                   "long (Property Value)", TYPE 3
      * RightCol
      * Returns the zero-based index of the last column displayed in the 
      * control
               PROPERTY-GET, 86, @RightCol
                       RETURNING "long", TYPE 3
      * RightCol
      * Returns the zero-based index of the last column displayed in the 
      * control
               PROPERTY-PUT, 86, @RightCol,
                   "long (Property Value)", TYPE 3
      * ExtendLastCol
      * Returns or sets whether the last column should be adjusted to fit the 
      * control's width.
               PROPERTY-GET, 8, @ExtendLastCol
                       RETURNING "boolean", TYPE 11
      * ExtendLastCol
      * Returns or sets whether the last column should be adjusted to fit the 
      * control's width.
               PROPERTY-PUT, 8, @ExtendLastCol,
                   "boolean (Property Value)", TYPE 11
      * ClientWidth
      * Returns the width of the control's client area, in twips.
               PROPERTY-GET, 87, @ClientWidth
                       RETURNING "long", TYPE 3
      * ClientWidth
      * Returns the width of the control's client area, in twips.
               PROPERTY-PUT, 87, @ClientWidth,
                   "long (Property Value)", TYPE 3
      * ClientHeight
      * Returns the height of the control's client area, in twips.
               PROPERTY-GET, 88, @ClientHeight
                       RETURNING "long", TYPE 3
      * ClientHeight
      * Returns the height of the control's client area, in twips.
               PROPERTY-PUT, 88, @ClientHeight,
                   "long (Property Value)", TYPE 3
      * EditText
      * Returns or sets the text in the cell editor.
               PROPERTY-GET, 89, @EditText
                       RETURNING "BSTR", TYPE 8
      * EditText
      * Returns or sets the text in the cell editor.
               PROPERTY-PUT, 89, @EditText,
                   "BSTR (Property Value)", TYPE 8
      * hWnd
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * AutoSizeMode
      * Returns or sets whether AutoSize will adjust column widths or row 
      * heights to fit cell contents.
               PROPERTY-GET, 119, @AutoSizeMode
                       RETURNING "AutoSizeSettings", TYPE 3
      * AutoSizeMode
      * Returns or sets whether AutoSize will adjust column widths or row 
      * heights to fit cell contents.
               PROPERTY-PUT, 119, @AutoSizeMode,
                   "AutoSizeSettings (Property Value)", TYPE 3
      * RightToLeft
      * Returns or sets whether text should be displayed from right to left on 
      * Hebrew and Arabic systems.
               PROPERTY-GET, 120, @RightToLeft
                       RETURNING "boolean", TYPE 11
      * RightToLeft
      * Returns or sets whether text should be displayed from right to left on 
      * Hebrew and Arabic systems.
               PROPERTY-PUT, 120, @RightToLeft,
                   "boolean (Property Value)", TYPE 11
      * MultiTotals
      * Returns or sets whether subtotals will be displayed in a single row when 
      * possible.
               PROPERTY-GET, 121, @MultiTotals
                       RETURNING "boolean", TYPE 11
      * MultiTotals
      * Returns or sets whether subtotals will be displayed in a single row when 
      * possible.
               PROPERTY-PUT, 121, @MultiTotals,
                   "boolean (Property Value)", TYPE 11
      * BackColorAlternate
      * Returns or sets the background color for alternate rows (set to 0 to 
      * disable).
               PROPERTY-GET, 122, @BackColorAlternate
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColorAlternate
      * Returns or sets the background color for alternate rows (set to 0 to 
      * disable).
               PROPERTY-PUT, 122, @BackColorAlternate,
                   "OLE_COLOR (Property Value)", TYPE 19
      * OwnerDraw
      * Returns or sets whether and when the control will fire the DrawCell 
      * event.
               PROPERTY-GET, 123, @OwnerDraw
                       RETURNING "OwnerDrawSettings", TYPE 3
      * OwnerDraw
      * Returns or sets whether and when the control will fire the DrawCell 
      * event.
               PROPERTY-PUT, 123, @OwnerDraw,
                   "OwnerDrawSettings (Property Value)", TYPE 3
      * DataMode
      * Returns or sets the type of data binding used by the control when it is 
      * connected to a data source (read-only or read/write).
               PROPERTY-GET, 125, @DataMode
                       RETURNING "DataModeSettings", TYPE 3
      * DataMode
      * Returns or sets the type of data binding used by the control when it is 
      * connected to a data source (read-only or read/write).
               PROPERTY-PUT, 125, @DataMode,
                   "DataModeSettings (Property Value)", TYPE 3
      * OleDragMode
      * Returns or sets whether the control can act as an OLE drag/drop source, 
      * either automatically or under program control.
               PROPERTY-GET, 126, @OleDragMode
                       RETURNING "OleDragModeSettings", TYPE 3
      * OleDragMode
      * Returns or sets whether the control can act as an OLE drag/drop source, 
      * either automatically or under program control.
               PROPERTY-PUT, 126, @OleDragMode,
                   "OleDragModeSettings (Property Value)", TYPE 3
      * OleDropMode
      * Returns or sets whether the control can act as an OLE drag/drop target, 
      * either automatically or under program control.
               PROPERTY-GET, 127, @OleDropMode
                       RETURNING "OleDropModeSettings", TYPE 3
      * OleDropMode
      * Returns or sets whether the control can act as an OLE drag/drop target, 
      * either automatically or under program control.
               PROPERTY-PUT, 127, @OleDropMode,
                   "OleDropModeSettings (Property Value)", TYPE 3
      * TabBehavior
      * Returns or sets whether the tab key will move focus between controls (VB 
      * default) or between grid cells.
               PROPERTY-GET, 133, @TabBehavior
                       RETURNING "TabBehaviorSettings", TYPE 3
      * TabBehavior
      * Returns or sets whether the tab key will move focus between controls (VB 
      * default) or between grid cells.
               PROPERTY-PUT, 133, @TabBehavior,
                   "TabBehaviorSettings (Property Value)", TYPE 3
      * SheetBorder
      * Returns or sets the color used to draw the border around the sheet.
               PROPERTY-GET, 134, @SheetBorder
                       RETURNING "OLE_COLOR", TYPE 19
      * SheetBorder
      * Returns or sets the color used to draw the border around the sheet.
               PROPERTY-PUT, 134, @SheetBorder,
                   "OLE_COLOR (Property Value)", TYPE 19
      * AllowSelection
      * Returns or sets whether the user can select ranges of cells with the 
      * mouse and keyboard.
               PROPERTY-GET, 136, @AllowSelection
                       RETURNING "boolean", TYPE 11
      * AllowSelection
      * Returns or sets whether the user can select ranges of cells with the 
      * mouse and keyboard.
               PROPERTY-PUT, 136, @AllowSelection,
                   "boolean (Property Value)", TYPE 11
      * PicturesOver
      * Returns or sets whether text and pictures should be overlaid in cells.
               PROPERTY-GET, 139, @PicturesOver
                       RETURNING "boolean", TYPE 11
      * PicturesOver
      * Returns or sets whether text and pictures should be overlaid in cells.
               PROPERTY-PUT, 139, @PicturesOver,
                   "boolean (Property Value)", TYPE 11
      * CellChecked
      * Returns or sets whether a grid cell has a check mark in it.
               PROPERTY-GET, 140, @CellChecked
                       RETURNING "CellCheckedSettings", TYPE 3
      * CellChecked
      * Returns or sets whether a grid cell has a check mark in it.
               PROPERTY-PUT, 140, @CellChecked,
                   "CellCheckedSettings (Property Value)", TYPE 3
      * MergeCompare
      * Returns or sets the type of comparison used when merging cells.
               PROPERTY-GET, 141, @MergeCompare
                       RETURNING "MergeCompareSettings", TYPE 3
      * MergeCompare
      * Returns or sets the type of comparison used when merging cells.
               PROPERTY-PUT, 141, @MergeCompare,
                   "MergeCompareSettings (Property Value)", TYPE 3
      * Ellipsis
      * Returns or sets whether the control should display ellipsis (...) after 
      * long strings.
               PROPERTY-GET, 142, @Ellipsis
                       RETURNING "EllipsisSettings", TYPE 3
      * Ellipsis
      * Returns or sets whether the control should display ellipsis (...) after 
      * long strings.
               PROPERTY-PUT, 142, @Ellipsis,
                   "EllipsisSettings (Property Value)", TYPE 3
      * SelChange
      * Fired after the selected range changes.
               EVENT, 1, @vsFlexArraySelChange
      *            No Parameters
      * RowColChange
      * Fired when the current cell changes to a different cell.
               EVENT, 2, @vsFlexArrayRowColChange
      *            No Parameters
      * EnterCell
      * Fired when a cell becomes active.
               EVENT, 3, @vsFlexArrayEnterCell
      *            No Parameters
      * LeaveCell
      * Fired before the current cell changes to a different cell.
               EVENT, 4, @vsFlexArrayLeaveCell
      *            No Parameters
      * Scroll
      * Fired after the control scrolls.
               EVENT, 5, @vsFlexArrayScroll
      *            No Parameters
      * Compare
      * Fired when the Sort property is set to flexSortCustom, to allow custom 
      * comparison of rows.
               EVENT, 6, @vsFlexArrayCompare
      *            3 Parameters
      *                "long* Row1"
      *                "long* Row2"
      *                "short* Cmp"
      * Click
               EVENT, -600, @vsFlexArrayClick
      *            No Parameters
      * DblClick
               EVENT, -601, @vsFlexArrayDblClick
      *            No Parameters
      * KeyDown
               EVENT, -602, @vsFlexArrayKeyDown
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyPress
               EVENT, -603, @vsFlexArrayKeyPress
      *            1 Parameter
      *                "short* KeyAscii"
      * KeyUp
               EVENT, -604, @vsFlexArrayKeyUp
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * MouseDown
               EVENT, -605, @vsFlexArrayMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS X"
      *                "OLE_YPOS_PIXELS Y"
      * MouseMove
               EVENT, -606, @vsFlexArrayMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS X"
      *                "OLE_YPOS_PIXELS Y"
      * MouseUp
               EVENT, -607, @vsFlexArrayMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS X"
      *                "OLE_YPOS_PIXELS Y"
      * UserResized
      * Fired after the user resizes a row or a column.
               EVENT, 7, @vsFlexArrayUserResized
      *            2 Parameters
      *                "long Row"
      *                "long Col"
      * Collapsed
      * Fired after the user expands or collapses a row group in an outline.
               EVENT, 8, @vsFlexArrayCollapsed
      *            No Parameters
      * AfterEdit
      * Fired after the control exits cell edit mode.
               EVENT, 9, @vsFlexArrayAfterEdit
      *            2 Parameters
      *                "long Row"
      *                "long Col"
      * BeforeEdit
      * Fired before the control enters cell edit mode.
               EVENT, 10, @vsFlexArrayBeforeEdit
      *            3 Parameters
      *                "long Row"
      *                "long Col"
      *                "boolean* Cancel"
      * KeyPressEdit
      * Fired when the user presses a key in cell-editing mode.
               EVENT, 11, @vsFlexArrayKeyPressEdit
      *            3 Parameters
      *                "long Row"
      *                "long Col"
      *                "short* KeyAscii"
      * Validate
      * Fired before the control exits cell edit mode.
               EVENT, 12, @vsFlexArrayValidate
      *            3 Parameters
      *                "long Row"
      *                "long Col"
      *                "boolean* Cancel"
      * BeforeDataRefresh
      * Fired before reading data from the record source.
               EVENT, 13, @vsFlexArrayBeforeDataRefresh
      *            1 Parameter
      *                "boolean* Cancel"
      * AfterDataRefresh
      * Fired after reading data from the record source.
               EVENT, 14, @vsFlexArrayAfterDataRefresh
      *            No Parameters
      * DrawCell
      * Fired when the OwnerDraw property is set to allow custom cell drawing.
               EVENT, 15, @vsFlexArrayDrawCell
      *            8 Parameters
      *                "long hDC"
      *                "long Row"
      *                "long Col"
      *                "long Left"
      *                "long Top"
      *                "long Right"
      *                "long Bottom"
      *                "boolean* Done"
      * OLEStartDrag
      * Fired after an OLE drag operation is started (manually or 
      * automatically).
               EVENT, 16, @vsFlexArrayOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * Fired after every OLEDragOver event to allow the source component to 
      * provide visual feedback to the user.
               EVENT, 17, @vsFlexArrayOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * Fired on the source component when a target component performs the 
      * GetData method on the sources DataObject object.
               EVENT, 18, @vsFlexArrayOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * Fired after a drop, to inform the source component that a drag action 
      * was either performed or canceled.
               EVENT, 19, @vsFlexArrayOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * Fired when a component is dragged over another.
               EVENT, 20, @vsFlexArrayOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* X"
      *                "single* Y"
      *                "short* State"
      * OLEDragDrop
      * Fired when a source component is dropped onto a target component.
               EVENT, 21, @vsFlexArrayOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* X"
      *                "single* Y"
      * KeyDownEdit
      * Fired when the user presses a key in cell-editing mode.
               EVENT, 22, @vsFlexArrayKeyDownEdit
      *            4 Parameters
      *                "long Row"
      *                "long Col"
      *                "short* KeyCode"
      *                "short Shift"
      * KeyUpEdit
      * Fired when the user presses a key in cell-editing mode.
               EVENT, 23, @vsFlexArrayKeyUpEdit
      *            4 Parameters
      *                "long Row"
      *                "long Col"
      *                "short* KeyCode"
      *                "short Shift"
      * BeforePageBreak
      * Fired while printing the control to control page breaks.
               EVENT, 24, @vsFlexArrayBeforePageBreak
      *            2 Parameters
      *                "long Row"
      *                "boolean* BreakOK"
      * GetHeaderRow
      * Fired while printing the control to set repeating header rows.
               EVENT, 25, @vsFlexArrayGetHeaderRow
      *            2 Parameters
      *                "long Row"
      *                "long* HeaderRow"
      * Error
      * Fired after a data-access error.
               EVENT, 26, @vsFlexArrayError
      *            2 Parameters
      *                "long ErrorCode"
      *                "boolean* ShowMsgBox"
           
      * vsFlexString Dispatch Interface
           
      * _DvsFlexString
           CLASS @_DvsFlexString
               CLSID, 8AE029D4-08E3-11D1-BAA2-444553540000
               NAME, "_DvsFlexString"
      * AboutBox
               METHOD, -552, @AboutBox
      * Text
      * Returns or sets the text to be scanned searching for the Pattern 
      * string.
               PROPERTY-GET, 3, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns or sets the text to be scanned searching for the Pattern 
      * string.
               PROPERTY-PUT, 3, @Text,
                   "BSTR (Property Value)", TYPE 8
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-GET, 2, @Version
                       RETURNING "short", TYPE 2
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-PUT, 2, @Version,
                   "short (Property Value)", TYPE 2
      * Pattern
      * Returns or sets the regular expression used for matching against the 
      * Text string.
               PROPERTY-GET, 4, @Pattern
                       RETURNING "BSTR", TYPE 8
      * Pattern
      * Returns or sets the regular expression used for matching against the 
      * Text string.
               PROPERTY-PUT, 4, @Pattern,
                   "BSTR (Property Value)", TYPE 8
      * Replace
      * Sets a string to replace all matches.
               PROPERTY-GET, 5, @Replace
                       RETURNING "BSTR", TYPE 8
      * Replace
      * Sets a string to replace all matches.
               PROPERTY-PUT, 5, @Replace,
                   "BSTR (Property Value)", TYPE 8
      * MatchCount
      * Returns the number of matches found after setting the Pattern or Text 
      * properties.
               PROPERTY-GET, 6, @MatchCount
                       RETURNING "long", TYPE 3
      * MatchCount
      * Returns the number of matches found after setting the Pattern or Text 
      * properties.
               PROPERTY-PUT, 6, @MatchCount,
                   "long (Property Value)", TYPE 3
      * MatchIndex
      * Returns or sets the zero-based index of the current match when there are 
      * multiple matches.
               PROPERTY-GET, 7, @MatchIndex
                       RETURNING "long", TYPE 3
      * MatchIndex
      * Returns or sets the zero-based index of the current match when there are 
      * multiple matches.
               PROPERTY-PUT, 7, @MatchIndex,
                   "long (Property Value)", TYPE 3
      * MatchStart
      * Returns the zero-based position of the current match within the Text 
      * string.
               PROPERTY-GET, 8, @MatchStart
                       RETURNING "long", TYPE 3
      * MatchStart
      * Returns the zero-based position of the current match within the Text 
      * string.
               PROPERTY-PUT, 8, @MatchStart,
                   "long (Property Value)", TYPE 3
      * MatchLength
      * Returns the length of the current match, in characters.
               PROPERTY-GET, 9, @MatchLength
                       RETURNING "long", TYPE 3
      * MatchLength
      * Returns the length of the current match, in characters.
               PROPERTY-PUT, 9, @MatchLength,
                   "long (Property Value)", TYPE 3
      * MatchString
      * Returns or sets the string corresponding to the current match.
               PROPERTY-GET, 10, @MatchString
                       RETURNING "BSTR", TYPE 8
      * MatchString
      * Returns or sets the string corresponding to the current match.
               PROPERTY-PUT, 10, @MatchString,
                   "BSTR (Property Value)", TYPE 8
      * TagCount
      * Returns the number of tags found after setting the Pattern, Text, or 
      * MatchIndex properties.
               PROPERTY-GET, 11, @TagCount
                       RETURNING "long", TYPE 3
      * TagCount
      * Returns the number of tags found after setting the Pattern, Text, or 
      * MatchIndex properties.
               PROPERTY-PUT, 11, @TagCount,
                   "long (Property Value)", TYPE 3
      * TagIndex
      * Returns or sets the index of the current tag when there are multiple 
      * tags in the Pattern string.
               PROPERTY-GET, 12, @TagIndex
                       RETURNING "long", TYPE 3
      * TagIndex
      * Returns or sets the index of the current tag when there are multiple 
      * tags in the Pattern string.
               PROPERTY-PUT, 12, @TagIndex,
                   "long (Property Value)", TYPE 3
      * TagStart
      * Returns the position of the current tag within the Text string, starting 
      * from zero.
               PROPERTY-GET, 13, @TagStart
                       RETURNING "long", TYPE 3
      * TagStart
      * Returns the position of the current tag within the Text string, starting 
      * from zero.
               PROPERTY-PUT, 13, @TagStart,
                   "long (Property Value)", TYPE 3
      * TagLength
      * Returns the length of the current tag, in characters.
               PROPERTY-GET, 14, @TagLength
                       RETURNING "long", TYPE 3
      * TagLength
      * Returns the length of the current tag, in characters.
               PROPERTY-PUT, 14, @TagLength,
                   "long (Property Value)", TYPE 3
      * TagString
      * Returns or sets the string corresponding to the current tag.
               PROPERTY-GET, 15, @TagString
                       RETURNING "BSTR", TYPE 8
      * TagString
      * Returns or sets the string corresponding to the current tag.
               PROPERTY-PUT, 15, @TagString,
                   "BSTR (Property Value)", TYPE 8
      * Error
      * Returns status information after setting the Pattern or Text 
      * properties.
               PROPERTY-GET, 16, @Error
                       RETURNING "StringErrorSettings", TYPE 3
      * Error
      * Returns status information after setting the Pattern or Text 
      * properties.
               PROPERTY-PUT, 16, @Error,
                   "StringErrorSettings (Property Value)", TYPE 3
      * Soundex
      * Returns a phonetic code representing the current Text string.
               PROPERTY-GET, 17, @Soundex
                       RETURNING "BSTR", TYPE 8
      * Soundex
      * Returns a phonetic code representing the current Text string.
               PROPERTY-PUT, 17, @Soundex,
                   "BSTR (Property Value)", TYPE 8
      * CaseSensitive
      * Returns or sets whether matching is case-sensitive.
               PROPERTY-GET, 1, @CaseSensitive
                       RETURNING "boolean", TYPE 11
      * CaseSensitive
      * Returns or sets whether matching is case-sensitive.
               PROPERTY-PUT, 1, @CaseSensitive,
                   "boolean (Property Value)", TYPE 11
      * _Text
               PROPERTY-GET, 0, @_Text
                       RETURNING "BSTR", TYPE 8
      * _Text
               PROPERTY-PUT, 0, @_Text,
                   "BSTR (Property Value)", TYPE 8
           
      * vsFlexArray Event Interface
           
      * _DvsFlexStringEvents
           CLASS @_DvsFlexStringEvents
               CLSID, 8AE029D5-08E3-11D1-BAA2-444553540000
               NAME, "_DvsFlexStringEvents"
           
      * :-) VideoSoft vsFlexString 3.0
           
      *** Primary Interface ***
           
      * vsFlexString
           CLASS @vsFlexString
               CLSID, 8AE029D6-08E3-11D1-BAA2-444553540000
               NAME, "vsFlexString"
               PRIMARY-INTERFACE
               ACTIVE-X-CONTROL
               DEFAULT-INTERFACE, "_DvsFlexString"
               DEFAULT-SOURCE, "_DvsFlexStringEvents"
      * AboutBox
               METHOD, -552, @AboutBox
      * Text
      * Returns or sets the text to be scanned searching for the Pattern 
      * string.
               PROPERTY-GET, 3, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns or sets the text to be scanned searching for the Pattern 
      * string.
               PROPERTY-PUT, 3, @Text,
                   "BSTR (Property Value)", TYPE 8
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-GET, 2, @Version
                       RETURNING "short", TYPE 2
      * Version
      * Returns the version of vsFlex currently loaded in memory.
               PROPERTY-PUT, 2, @Version,
                   "short (Property Value)", TYPE 2
      * Pattern
      * Returns or sets the regular expression used for matching against the 
      * Text string.
               PROPERTY-GET, 4, @Pattern
                       RETURNING "BSTR", TYPE 8
      * Pattern
      * Returns or sets the regular expression used for matching against the 
      * Text string.
               PROPERTY-PUT, 4, @Pattern,
                   "BSTR (Property Value)", TYPE 8
      * Replace
      * Sets a string to replace all matches.
               PROPERTY-GET, 5, @Replace
                       RETURNING "BSTR", TYPE 8
      * Replace
      * Sets a string to replace all matches.
               PROPERTY-PUT, 5, @Replace,
                   "BSTR (Property Value)", TYPE 8
      * MatchCount
      * Returns the number of matches found after setting the Pattern or Text 
      * properties.
               PROPERTY-GET, 6, @MatchCount
                       RETURNING "long", TYPE 3
      * MatchCount
      * Returns the number of matches found after setting the Pattern or Text 
      * properties.
               PROPERTY-PUT, 6, @MatchCount,
                   "long (Property Value)", TYPE 3
      * MatchIndex
      * Returns or sets the zero-based index of the current match when there are 
      * multiple matches.
               PROPERTY-GET, 7, @MatchIndex
                       RETURNING "long", TYPE 3
      * MatchIndex
      * Returns or sets the zero-based index of the current match when there are 
      * multiple matches.
               PROPERTY-PUT, 7, @MatchIndex,
                   "long (Property Value)", TYPE 3
      * MatchStart
      * Returns the zero-based position of the current match within the Text 
      * string.
               PROPERTY-GET, 8, @MatchStart
                       RETURNING "long", TYPE 3
      * MatchStart
      * Returns the zero-based position of the current match within the Text 
      * string.
               PROPERTY-PUT, 8, @MatchStart,
                   "long (Property Value)", TYPE 3
      * MatchLength
      * Returns the length of the current match, in characters.
               PROPERTY-GET, 9, @MatchLength
                       RETURNING "long", TYPE 3
      * MatchLength
      * Returns the length of the current match, in characters.
               PROPERTY-PUT, 9, @MatchLength,
                   "long (Property Value)", TYPE 3
      * MatchString
      * Returns or sets the string corresponding to the current match.
               PROPERTY-GET, 10, @MatchString
                       RETURNING "BSTR", TYPE 8
      * MatchString
      * Returns or sets the string corresponding to the current match.
               PROPERTY-PUT, 10, @MatchString,
                   "BSTR (Property Value)", TYPE 8
      * TagCount
      * Returns the number of tags found after setting the Pattern, Text, or 
      * MatchIndex properties.
               PROPERTY-GET, 11, @TagCount
                       RETURNING "long", TYPE 3
      * TagCount
      * Returns the number of tags found after setting the Pattern, Text, or 
      * MatchIndex properties.
               PROPERTY-PUT, 11, @TagCount,
                   "long (Property Value)", TYPE 3
      * TagIndex
      * Returns or sets the index of the current tag when there are multiple 
      * tags in the Pattern string.
               PROPERTY-GET, 12, @TagIndex
                       RETURNING "long", TYPE 3
      * TagIndex
      * Returns or sets the index of the current tag when there are multiple 
      * tags in the Pattern string.
               PROPERTY-PUT, 12, @TagIndex,
                   "long (Property Value)", TYPE 3
      * TagStart
      * Returns the position of the current tag within the Text string, starting 
      * from zero.
               PROPERTY-GET, 13, @TagStart
                       RETURNING "long", TYPE 3
      * TagStart
      * Returns the position of the current tag within the Text string, starting 
      * from zero.
               PROPERTY-PUT, 13, @TagStart,
                   "long (Property Value)", TYPE 3
      * TagLength
      * Returns the length of the current tag, in characters.
               PROPERTY-GET, 14, @TagLength
                       RETURNING "long", TYPE 3
      * TagLength
      * Returns the length of the current tag, in characters.
               PROPERTY-PUT, 14, @TagLength,
                   "long (Property Value)", TYPE 3
      * TagString
      * Returns or sets the string corresponding to the current tag.
               PROPERTY-GET, 15, @TagString
                       RETURNING "BSTR", TYPE 8
      * TagString
      * Returns or sets the string corresponding to the current tag.
               PROPERTY-PUT, 15, @TagString,
                   "BSTR (Property Value)", TYPE 8
      * Error
      * Returns status information after setting the Pattern or Text 
      * properties.
               PROPERTY-GET, 16, @Error
                       RETURNING "StringErrorSettings", TYPE 3
      * Error
      * Returns status information after setting the Pattern or Text 
      * properties.
               PROPERTY-PUT, 16, @Error,
                   "StringErrorSettings (Property Value)", TYPE 3
      * Soundex
      * Returns a phonetic code representing the current Text string.
               PROPERTY-GET, 17, @Soundex
                       RETURNING "BSTR", TYPE 8
      * Soundex
      * Returns a phonetic code representing the current Text string.
               PROPERTY-PUT, 17, @Soundex,
                   "BSTR (Property Value)", TYPE 8
      * CaseSensitive
      * Returns or sets whether matching is case-sensitive.
               PROPERTY-GET, 1, @CaseSensitive
                       RETURNING "boolean", TYPE 11
      * CaseSensitive
      * Returns or sets whether matching is case-sensitive.
               PROPERTY-PUT, 1, @CaseSensitive,
                   "boolean (Property Value)", TYPE 11
      * _Text
               PROPERTY-GET, 0, @_Text
                       RETURNING "BSTR", TYPE 8
      * _Text
               PROPERTY-PUT, 0, @_Text,
                   "BSTR (Property Value)", TYPE 8