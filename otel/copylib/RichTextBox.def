      >>IMP(ACU-CBLFLAGS=-Sa)
      * d:\asya\acugt.ets\muha\Copylib\RichTextBox.def - ActiveX control 
      * Generated: Tuesday, November 02, 2010
      * Typelib..: C:\Windows\system32\RICHTX32.OCX
           
           OBJECT @RichTextLib
           
      * IVBDataObject
           CLASS @IVBDataObject
               CLSID, 2334D2B1-713E-11CF-8AE5-00AA00C00905
               NAME, "IVBDataObject"
      * Clear
      * Clears all data and formats in a DataObject object.
               METHOD, 1, @Clear
      * GetData
      * Retrieves data of a specified format from a DataObject object.
               METHOD, 2, @GetData,
                   "short" @sFormat, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
      * Determines if a specified clipboard format is supported by the 
               METHOD, 3, @GetFormat,
                   "short" @sFormat, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
      * Adds a supported format and possibly its data to a DataObject object.
               METHOD, 4, @SetData,
                   "VARIANT" @vValue, TYPE 12,
                   "VARIANT" @vFormat, TYPE 12
                       OPTIONAL 2
      * Files
      * A collection of filenames used by the vbCFFiles format.
               PROPERTY-GET, 5, @Files
                       RETURNING "IVBDataObjectFiles*", TYPE 9
           
      * DataObject
           CLASS @DataObject
               CLSID, 2334D2B2-713E-11CF-8AE5-00AA00C00905
               NAME, "DataObject"
               DEFAULT-INTERFACE, "IVBDataObject"
      * Clear
      * Clears all data and formats in a DataObject object.
               METHOD, 1, @Clear
      * GetData
      * Retrieves data of a specified format from a DataObject object.
               METHOD, 2, @GetData,
                   "short" @sFormat, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
      * Determines if a specified clipboard format is supported by the 
               METHOD, 3, @GetFormat,
                   "short" @sFormat, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
      * Adds a supported format and possibly its data to a DataObject object.
               METHOD, 4, @SetData,
                   "VARIANT" @vValue, TYPE 12,
                   "VARIANT" @vFormat, TYPE 12
                       OPTIONAL 2
      * Files
      * A collection of filenames used by the vbCFFiles format.
               PROPERTY-GET, 5, @Files
                       RETURNING "IVBDataObjectFiles*", TYPE 9
           
      * IVBDataObjectFiles
           CLASS @IVBDataObjectFiles
               CLSID, 2334D2B3-713E-11CF-8AE5-00AA00C00905
               NAME, "IVBDataObjectFiles"
      * Item
      * Returns a specific filename by index from the Files collection of a 
               PROPERTY-GET, 0, @Item,
                   "long" @lIndex, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * Count
      * Returns the number of filenames in the Files collection of a DataObject 
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Add
      * Adds a filename to the Files collection of a DataObject object 
               METHOD, 2, @Add,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vIndex, TYPE 12
                       OPTIONAL 1
      * Clear
      * Clears all filenames stored in the Files collection of a DataObject 
               METHOD, 3, @Clear
      * Remove
      * Removes a filename from the Files collection of a DataObject object 
               METHOD, 4, @Remove,
                   "VARIANT" @vIndex, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * DataObjectFiles
           CLASS @DataObjectFiles
               CLSID, 2334D2B4-713E-11CF-8AE5-00AA00C00905
               NAME, "DataObjectFiles"
               DEFAULT-INTERFACE, "IVBDataObjectFiles"
      * Item
      * Returns a specific filename by index from the Files collection of a 
               PROPERTY-GET, 0, @Item,
                   "long" @lIndex, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * Count
      * Returns the number of filenames in the Files collection of a DataObject 
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Add
      * Adds a filename to the Files collection of a DataObject object 
               METHOD, 2, @Add,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vIndex, TYPE 12
                       OPTIONAL 1
      * Clear
      * Clears all filenames stored in the Files collection of a DataObject 
               METHOD, 3, @Clear
      * Remove
      * Removes a filename from the Files collection of a DataObject object 
               METHOD, 4, @Remove,
                   "VARIANT" @vIndex, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * Constants for the OLEDragMode property (but not the DragMode or 
           
      * OLEDragConstants
           CLASS @OLEDragConstants
               CLSID, D8898460-742F-11CF-8AEA-00AA00C00905
               NAME, "OLEDragConstants"
      * "long rtfOLEDragManual"
               ENUMERATOR, @rtfOLEDragManual, 0
      * "long rtfOLEDragAutomatic"
               ENUMERATOR, @rtfOLEDragAutomatic, 1
           
      * Constants for the OLEDropMode property (but not the DragMode or 
           
      * OLEDropConstants
           CLASS @OLEDropConstants
               CLSID, D8898461-742F-11CF-8AEA-00AA00C00905
               NAME, "OLEDropConstants"
      * "long rtfOLEDropNone"
               ENUMERATOR, @rtfOLEDropNone, 0
      * "long rtfOLEDropManual"
               ENUMERATOR, @rtfOLEDropManual, 1
      * "long rtfOLEDropAutomatic"
               ENUMERATOR, @rtfOLEDropAutomatic, 2
           
      * State transition constants for the DragOver and OLEDragOver events.
           
      * DragOverConstants
           CLASS @DragOverConstants
               CLSID, D8898464-742F-11CF-8AEA-00AA00C00905
               NAME, "DragOverConstants"
      * "long rtfEnter"
               ENUMERATOR, @rtfEnter, 0
      * "long rtfLeave"
               ENUMERATOR, @rtfLeave, 1
      * "long rtfOver"
               ENUMERATOR, @rtfOver, 2
           
      * Clipboard format constants.
           
      * ClipBoardConstants
           CLASS @ClipBoardConstants
               CLSID, D8898462-742F-11CF-8AEA-00AA00C00905
               NAME, "ClipBoardConstants"
      * "long rtfCFText"
               ENUMERATOR, @rtfCFText, 1
      * "long rtfCFBitmap"
               ENUMERATOR, @rtfCFBitmap, 2
      * "long rtfCFMetafile"
               ENUMERATOR, @rtfCFMetafile, 3
      * "long rtfCFDIB"
               ENUMERATOR, @rtfCFDIB, 8
      * "long rtfCFPalette"
               ENUMERATOR, @rtfCFPalette, 9
      * "long rtfCFEMetafile"
               ENUMERATOR, @rtfCFEMetafile, 14
      * "long rtfCFFiles"
               ENUMERATOR, @rtfCFFiles, 15
      * "long rtfCFRTF"
               ENUMERATOR, @rtfCFRTF, -16639
           
      * Drop effect constants for OLE drag and drop events.
           
      * OLEDropEffectConstants
           CLASS @OLEDropEffectConstants
               CLSID, D8898463-742F-11CF-8AEA-00AA00C00905
               NAME, "OLEDropEffectConstants"
      * "long rtfOLEDropEffectNone"
               ENUMERATOR, @rtfOLEDropEffectNone, 0
      * "long rtfOLEDropEffectCopy"
               ENUMERATOR, @rtfOLEDropEffectCopy, 1
      * "long rtfOLEDropEffectMove"
               ENUMERATOR, @rtfOLEDropEffectMove, 2
      * "long rtfOLEDropEffectScroll"
               ENUMERATOR, @rtfOLEDropEffectScroll, -2147483648
           
      * Appearance constants.
           
      * AppearanceConstants
           CLASS @AppearanceConstants
               CLSID, 84B13220-741A-11CE-9575-0020AF039CA3
               NAME, "AppearanceConstants"
      * "long rtfFlat"
               ENUMERATOR, @rtfFlat, 0
      * "long rtfThreeD"
               ENUMERATOR, @rtfThreeD, 1
           
      * BorderStyle constants.
           
      * BorderStyleConstants
           CLASS @BorderStyleConstants
               CLSID, 3B7C886A-D78F-101B-B9B5-04021C009402
               NAME, "BorderStyleConstants"
      * "long rtfNoBorder"
               ENUMERATOR, @rtfNoBorder, 0
      * "long rtfFixedSingle"
               ENUMERATOR, @rtfFixedSingle, 1
           
      * Find constants.
           
      * FindConstants
           CLASS @FindConstants
               CLSID, F2991EA8-75B9-11CE-B4BC-524153480004
               NAME, "FindConstants"
      * "long rtfWholeWord"
               ENUMERATOR, @rtfWholeWord, 2
      * "long rtfMatchCase"
               ENUMERATOR, @rtfMatchCase, 4
      * "long rtfNoHighlight"
               ENUMERATOR, @rtfNoHighlight, 8
           
      * LoadSave constants.
           
      * LoadSaveConstants
           CLASS @LoadSaveConstants
               CLSID, 9FAEAB20-894B-11CE-9576-0020AF039CA3
               NAME, "LoadSaveConstants"
      * "long rtfRTF"
               ENUMERATOR, @rtfRTF, 0
      * "long rtfText"
               ENUMERATOR, @rtfText, 1
           
      * MousePointer constants.
           
      * MousePointerConstants
           CLASS @MousePointerConstants
               CLSID, 3B7C886B-D78F-101B-B9B5-04021C009402
               NAME, "MousePointerConstants"
      * "long rtfDefault"
               ENUMERATOR, @rtfDefault, 0
      * "long rtfArrow"
               ENUMERATOR, @rtfArrow, 1
      * "long rtfCross"
               ENUMERATOR, @rtfCross, 2
      * "long rtfIBeam"
               ENUMERATOR, @rtfIBeam, 3
      * "long rtfIcon"
               ENUMERATOR, @rtfIcon, 4
      * "long rtfSize"
               ENUMERATOR, @rtfSize, 5
      * "long rtfSizeNESW"
               ENUMERATOR, @rtfSizeNESW, 6
      * "long rtfSizeNS"
               ENUMERATOR, @rtfSizeNS, 7
      * "long rtfSizeNWSE"
               ENUMERATOR, @rtfSizeNWSE, 8
      * "long rtfSizeEW"
               ENUMERATOR, @rtfSizeEW, 9
      * "long rtfUpArrow"
               ENUMERATOR, @rtfUpArrow, 10
      * "long rtfHourglass"
               ENUMERATOR, @rtfHourglass, 11
      * "long rtfNoDrop"
               ENUMERATOR, @rtfNoDrop, 12
      * "long rtfArrowHourglass"
               ENUMERATOR, @rtfArrowHourglass, 13
      * "long rtfArrowQuestion"
               ENUMERATOR, @rtfArrowQuestion, 14
      * "long rtfSizeAll"
               ENUMERATOR, @rtfSizeAll, 15
      * "long rtfCustom"
               ENUMERATOR, @rtfCustom, 99
           
      * ScrollBars constants.
           
      * ScrollBarsConstants
           CLASS @ScrollBarsConstants
               CLSID, 3B7C886C-D78F-101B-B9B5-04021C009402
               NAME, "ScrollBarsConstants"
      * "long rtfNone"
               ENUMERATOR, @rtfNone, 0
      * "long rtfHorizontal"
               ENUMERATOR, @rtfHorizontal, 1
      * "long rtfVertical"
               ENUMERATOR, @rtfVertical, 2
      * "long rtfBoth"
               ENUMERATOR, @rtfBoth, 3
           
      * SelAlignment constants.
           
      * SelAlignmentConstants
           CLASS @SelAlignmentConstants
               CLSID, 32D50A00-894E-11CE-9576-0020AF039CA3
               NAME, "SelAlignmentConstants"
      * "long rtfLeft"
               ENUMERATOR, @rtfLeft, 0
      * "long rtfRight"
               ENUMERATOR, @rtfRight, 1
      * "long rtfCenter"
               ENUMERATOR, @rtfCenter, 2
           
      * OLEObject DisplayType constants
           
      * DisplayTypeConstants
           CLASS @DisplayTypeConstants
               CLSID, 587A1890-455E-11CF-8983-00AA00688B10
               NAME, "DisplayTypeConstants"
      * "long rtfDisplayContent"
               ENUMERATOR, @rtfDisplayContent, 0
      * "long rtfDisplayIcon"
               ENUMERATOR, @rtfDisplayIcon, 1
           
      * Error Constants
           
      * ErrorConstants
           CLASS @ErrorConstants
               CLSID, A97022A1-D6C5-11CF-89B4-00AA00688B10
               NAME, "ErrorConstants"
      * "long rtfOutOfMemory"
               ENUMERATOR, @rtfOutOfMemory, 7
      * "long rtfInvalidPropertyValue"
               ENUMERATOR, @rtfInvalidPropertyValue, 380
      * "long rtfInvalidPropertyArrayIndex"
               ENUMERATOR, @rtfInvalidPropertyArrayIndex, 381
      * "long rtfSetNotSupported"
               ENUMERATOR, @rtfSetNotSupported, 383
      * "long rtfSetNotPermitted"
               ENUMERATOR, @rtfSetNotPermitted, 387
      * "long rtfGetNotSupported"
               ENUMERATOR, @rtfGetNotSupported, 394
      * "long rtfInvalidProcedureCall"
               ENUMERATOR, @rtfInvalidProcedureCall, 5
      * "long rtfInvalidObjectUse"
               ENUMERATOR, @rtfInvalidObjectUse, 425
      * "long rtfWrongClipboardFormat"
               ENUMERATOR, @rtfWrongClipboardFormat, 461
      * "long rtfDataObjectLocked"
               ENUMERATOR, @rtfDataObjectLocked, 672
      * "long rtfExpectedAnArgument"
               ENUMERATOR, @rtfExpectedAnArgument, 673
      * "long rtfRecursiveOleDrag"
               ENUMERATOR, @rtfRecursiveOleDrag, 674
      * "long rtfFormatNotByteArray"
               ENUMERATOR, @rtfFormatNotByteArray, 675
      * "long rtfDataNotSetInFormat"
               ENUMERATOR, @rtfDataNotSetInFormat, 676
      * "long rtfPathFileAccessError"
               ENUMERATOR, @rtfPathFileAccessError, 75
      * "long rtfInvalidFileFormat"
               ENUMERATOR, @rtfInvalidFileFormat, 321
      * "long rtfInvalidCharPosition"
               ENUMERATOR, @rtfInvalidCharPosition, 32000
      * "long rtfInvalidHdc"
               ENUMERATOR, @rtfInvalidHdc, 32001
      * "long rtfCannotLoadFile"
               ENUMERATOR, @rtfCannotLoadFile, 32002
      * "long rtfProtected"
               ENUMERATOR, @rtfProtected, 32011
      * "long rtfInvalidKeyName"
               ENUMERATOR, @rtfInvalidKeyName, 32005
      * "long rtfInvalidClassName"
               ENUMERATOR, @rtfInvalidClassName, 32006
      * "long rtfKeyNotFound"
               ENUMERATOR, @rtfKeyNotFound, 32007
      * "long rtfOLESourceRequired"
               ENUMERATOR, @rtfOLESourceRequired, 32008
      * "long rtfNonUniqueKey"
               ENUMERATOR, @rtfNonUniqueKey, 32009
      * "long rtfInvalidObject"
               ENUMERATOR, @rtfInvalidObject, 32010
      * "long rtfOleCreate"
               ENUMERATOR, @rtfOleCreate, 32012
      * "long rtfOleServer"
               ENUMERATOR, @rtfOleServer, 32013
           
      * The RichTextBox control enables you to add insertable objects to an RTF 
           
      * IOLEObject
           CLASS @IOLEObject
               CLSID, ED117630-4090-11CF-8981-00AA00688B10
               NAME, "IOLEObject"
      * Index
      * Returns the number that uniquely identifies an object in a collection.
               PROPERTY-GET, 1, @Index
                       RETURNING "int", TYPE 22
      * Key
      * Returns/sets a string that uniquely identifies a member in a 
               PROPERTY-GET, 2, @Key
                       RETURNING "BSTR", TYPE 8
      * Key
      * Returns/sets a string that uniquely identifies a member in a 
               PROPERTY-PUT, 2, @Key,
                   "BSTR (Property_Value)", TYPE 8
      * Class
      * Returns object's OLE class name
               PROPERTY-GET, 3, @Class
                       RETURNING "BSTR", TYPE 8
      * DisplayType
      * Returns/sets a value indicating whether an object displays its contents 
               PROPERTY-GET, 5, @DisplayType
                       RETURNING "DisplayTypeConstants", TYPE 3
      * DisplayType
      * Returns/sets a value indicating whether an object displays its contents 
               PROPERTY-PUT, 5, @DisplayType,
                   "DisplayTypeConstants (Property_Value)", TYPE 3
      * ObjectVerbs
      * Returns a string array of verbs supported by the object. FetchVerbs must 
               PROPERTY-GET, 6, @ObjectVerbs
                       RETURNING "VARIANT", TYPE 12
      * ObjectVerbFlags
      * Returns a integer array of menu item state flags used to display the 
               PROPERTY-GET, 7, @ObjectVerbFlags
                       RETURNING "VARIANT", TYPE 12
      * ObjectVerbsCount
      * Returns the number of verbs supported by the object.  This is the number 
               PROPERTY-GET, 8, @ObjectVerbsCount
                       RETURNING "int", TYPE 22
      * DoVerb
      * Executes the object's verb specified by the index value.
               METHOD, 9, @DoVerb,
                   "VARIANT" @verb, TYPE 12
                       OPTIONAL 1
      * FetchVerbs
      * Fetches the verbs supported by the object.  This method must be called 
               METHOD, 10, @FetchVerbs
                       RETURNING "int", TYPE 22
           
      * RichText Control OLEObjects Collection Interface
           
      * IOLEObjects
           CLASS @IOLEObjects
               CLSID, 859321D0-3FD1-11CF-8981-00AA00688B10
               NAME, "IOLEObjects"
      * Item
      * Returns a specific item of a collection object by position, index, or 
               PROPERTY-GET, 0, @Item,
                   "VARIANT" @Item, TYPE 12
                       OPTIONAL 1
                       RETURNING "IOLEObject*", TYPE 9
      * Count
      * Returns the number of members in a collection.
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Clear
      * Clears all objects in a collection.
               METHOD, 4, @Clear
      * Add
      * Adds an OLEObject to an OLEObjects collection.
               METHOD, 2, @Add,
                   "VARIANT" @Index, TYPE 12,
                   "VARIANT" @Key, TYPE 12,
                   "VARIANT" @source, TYPE 12,
                   "VARIANT" @objclass, TYPE 12
                       OPTIONAL 4
                       RETURNING "IOLEObject*", TYPE 9
      * Remove
      * Removes a specific member from a collection.
               METHOD, 3, @Remove,
                   "VARIANT" @Item, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * Microsoft Rich Textbox Control 6.0 (SP6)
           
      * IRichText
           CLASS @IRichText
               CLSID, E9A5593C-CAB0-11D1-8C0B-0000F8754DA1
               NAME, "IRichText"
      * defTextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-GET, 0, @defTextRTF
                       RETURNING "BSTR", TYPE 8
      * defTextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-PUT, 0, @defTextRTF,
                   "BSTR (Property_Value)", TYPE 8
      * Appearance
      * Returns/sets the paint style of a control at run time.
               PROPERTY-GET, 29, @Appearance
                       RETURNING "AppearanceConstants", TYPE 3
      * Appearance
      * Returns/sets the paint style of a control at run time.
               PROPERTY-PUT, 29, @Appearance,
                   "AppearanceConstants (Property_Value)", TYPE 3
      * BackColor
      * Returns/sets the background color of an object.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns/sets the background color of an object.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property_Value)", TYPE 19
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-GET, 23, @BorderStyle
                       RETURNING "BorderStyleConstants", TYPE 3
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-PUT, 23, @BorderStyle,
                   "BorderStyleConstants (Property_Value)", TYPE 3
      * BulletIndent
      * Returns or sets the amount of indent used in a RichTextBox control when 
               PROPERTY-GET, 30, @BulletIndent
                       RETURNING "single", TYPE 4
      * BulletIndent
      * Returns or sets the amount of indent used in a RichTextBox control when 
               PROPERTY-PUT, 30, @BulletIndent,
                   "single (Property_Value)", TYPE 4
      * DisableNoScroll
      * Returns/sets a value that determines whether scroll bars in the 
               PROPERTY-GET, 7, @DisableNoScroll
                       RETURNING "boolean", TYPE 11
      * DisableNoScroll
      * Returns/sets a value that determines whether scroll bars in the 
               PROPERTY-PUT, 7, @DisableNoScroll,
                   "boolean (Property_Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether an object can respond to 
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether an object can respond to 
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property_Value)", TYPE 11
      * FileName
      * Returns/sets the filename of the file loaded into the RichTextBox 
               PROPERTY-GET, 19, @FileName
                       RETURNING "BSTR", TYPE 8
      * FileName
      * Returns/sets the filename of the file loaded into the RichTextBox 
               PROPERTY-PUT, 19, @FileName,
                   "BSTR (Property_Value)", TYPE 8
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property_Value)", TYPE 16413
      * HideSelection
      * Returns/sets a value that specifies if the selected item remains 
               PROPERTY-GET, 2, @HideSelection
                       RETURNING "boolean", TYPE 11
      * HideSelection
      * Returns/sets a value that specifies if the selected item remains 
               PROPERTY-PUT, 2, @HideSelection,
                   "boolean (Property_Value)", TYPE 11
      * Hwnd
      * Returns a handle to a control.
               PROPERTY-GET, -515, @Hwnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * Hwnd
      * Returns a handle to a control.
               PROPERTY-PUT, -515, @Hwnd,
                   "OLE_HANDLE (Property_Value)", TYPE 22
      * Locked
      * Returns/sets a value indicating whether the contents in a RichTextBox 
               PROPERTY-GET, 22, @Locked
                       RETURNING "boolean", TYPE 11
      * Locked
      * Returns/sets a value indicating whether the contents in a RichTextBox 
               PROPERTY-PUT, 22, @Locked,
                   "boolean (Property_Value)", TYPE 11
      * MaxLength
      * Returns/sets a value indicating whether there is a maximum number of 
               PROPERTY-GET, 12, @MaxLength
                       RETURNING "long", TYPE 3
      * MaxLength
      * Returns/sets a value indicating whether there is a maximum number of 
               PROPERTY-PUT, 12, @MaxLength,
                   "long (Property_Value)", TYPE 3
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 6, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 6, @MouseIcon,
                   "IPictureDisp* (Property_Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 6, @MouseIcon,
                   "IPictureDisp* (Property_Value)", TYPE 16413
      * MousePointer
      * Returns/sets a value indicating the type of mouse pointer displayed when 
               PROPERTY-GET, 1, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets a value indicating the type of mouse pointer displayed when 
               PROPERTY-PUT, 1, @MousePointer,
                   "MousePointerConstants (Property_Value)", TYPE 3
      * MultiLine
      * Returns/sets a value indicating whether a RichTextBox control can accept 
               PROPERTY-GET, 3, @MultiLine
                       RETURNING "boolean", TYPE 11
      * MultiLine
      * Returns/sets a value indicating whether a RichTextBox control can accept 
               PROPERTY-PUT, 3, @MultiLine,
                   "boolean (Property_Value)", TYPE 11
      * RightMargin
      * Sets the right margin used for textwrap, centering, etc.
               PROPERTY-GET, 32, @RightMargin
                       RETURNING "single", TYPE 4
      * RightMargin
      * Sets the right margin used for textwrap, centering, etc.
               PROPERTY-PUT, 32, @RightMargin,
                   "single (Property_Value)", TYPE 4
      * ScrollBars
      * Returns/sets a value indicating whether a RichTextBox control has 
               PROPERTY-GET, 4, @ScrollBars
                       RETURNING "ScrollBarsConstants", TYPE 3
      * ScrollBars
      * Returns/sets a value indicating whether a RichTextBox control has 
               PROPERTY-PUT, 4, @ScrollBars,
                   "ScrollBarsConstants (Property_Value)", TYPE 3
      * SelAlignment
      * Returns/sets a value that controls the alignment of the paragraphs in a 
               PROPERTY-GET, 28, @SelAlignment
                       RETURNING "VARIANT", TYPE 12
      * SelAlignment
      * Returns/sets a value that controls the alignment of the paragraphs in a 
               PROPERTY-PUT, 28, @SelAlignment,
                   "VARIANT (Property_Value)", TYPE 12
      * SelBold
      * Returns/set the bold format of the currently selected text.
               PROPERTY-GET, 24, @SelBold
                       RETURNING "VARIANT", TYPE 12
      * SelBold
      * Returns/set the bold format of the currently selected text.
               PROPERTY-PUT, 24, @SelBold,
                   "VARIANT (Property_Value)", TYPE 12
      * SelBullet
      * Returns/sets a value that determines if a paragraph in the RichTextBox 
               PROPERTY-GET, 31, @SelBullet
                       RETURNING "VARIANT", TYPE 12
      * SelBullet
      * Returns/sets a value that determines if a paragraph in the RichTextBox 
               PROPERTY-PUT, 31, @SelBullet,
                   "VARIANT (Property_Value)", TYPE 12
      * SelCharOffset
      * Returns/sets a value that determines whether text in the RichTextBox 
               PROPERTY-GET, 16, @SelCharOffset
                       RETURNING "VARIANT", TYPE 12
      * SelCharOffset
      * Returns/sets a value that determines whether text in the RichTextBox 
               PROPERTY-PUT, 16, @SelCharOffset,
                   "VARIANT (Property_Value)", TYPE 12
      * SelColor
      * Returns/sets a value that determines the color of text in the 
               PROPERTY-GET, 13, @SelColor
                       RETURNING "VARIANT", TYPE 12
      * SelColor
      * Returns/sets a value that determines the color of text in the 
               PROPERTY-PUT, 13, @SelColor,
                   "VARIANT (Property_Value)", TYPE 12
      * SelFontName
      * Returns/sets the font used to display the currently selected text or the 
               PROPERTY-GET, 14, @SelFontName
                       RETURNING "VARIANT", TYPE 12
      * SelFontName
      * Returns/sets the font used to display the currently selected text or the 
               PROPERTY-PUT, 14, @SelFontName,
                   "VARIANT (Property_Value)", TYPE 12
      * SelFontSize
      * Returns/sets a value that specifies the size of the font used to display 
               PROPERTY-GET, 15, @SelFontSize
                       RETURNING "VARIANT", TYPE 12
      * SelFontSize
      * Returns/sets a value that specifies the size of the font used to display 
               PROPERTY-PUT, 15, @SelFontSize,
                   "VARIANT (Property_Value)", TYPE 12
      * SelHangingIndent
      * Returns/sets the distance between the left edge of the first line of 
               PROPERTY-GET, 18, @SelHangingIndent
                       RETURNING "VARIANT", TYPE 12
      * SelHangingIndent
      * Returns/sets the distance between the left edge of the first line of 
               PROPERTY-PUT, 18, @SelHangingIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelIndent
      * Returns/sets the distance between the left edge of the RichTextBox 
               PROPERTY-GET, 17, @SelIndent
                       RETURNING "VARIANT", TYPE 12
      * SelIndent
      * Returns/sets the distance between the left edge of the RichTextBox 
               PROPERTY-PUT, 17, @SelIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelItalic
      * Returns/set the italic format of the currently selected text.
               PROPERTY-GET, 25, @SelItalic
                       RETURNING "VARIANT", TYPE 12
      * SelItalic
      * Returns/set the italic format of the currently selected text.
               PROPERTY-PUT, 25, @SelItalic,
                   "VARIANT (Property_Value)", TYPE 12
      * SelLength
      * Returns/sets the number of characters selected.
               PROPERTY-GET, 5, @SelLength
                       RETURNING "long", TYPE 3
      * SelLength
      * Returns/sets the number of characters selected.
               PROPERTY-PUT, 5, @SelLength,
                   "long (Property_Value)", TYPE 3
      * SelProtected
      * Returns/sets a value that determines if the selected text is protected 
               PROPERTY-GET, 48, @SelProtected
                       RETURNING "VARIANT", TYPE 12
      * SelProtected
      * Returns/sets a value that determines if the selected text is protected 
               PROPERTY-PUT, 48, @SelProtected,
                   "VARIANT (Property_Value)", TYPE 12
      * SelRightIndent
      * Returns/sets the distance between the right edge of the RichTextBox 
               PROPERTY-GET, 21, @SelRightIndent
                       RETURNING "VARIANT", TYPE 12
      * SelRightIndent
      * Returns/sets the distance between the right edge of the RichTextBox 
               PROPERTY-PUT, 21, @SelRightIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelRTF
      * Returns/sets the text (in .RTF format) in the current selection of a 
               PROPERTY-GET, 11, @SelRTF
                       RETURNING "BSTR", TYPE 8
      * SelRTF
      * Returns/sets the text (in .RTF format) in the current selection of a 
               PROPERTY-PUT, 11, @SelRTF,
                   "BSTR (Property_Value)", TYPE 8
      * SelStart
      * Returns/sets the starting point of text selected; indicates the position 
               PROPERTY-GET, 8, @SelStart
                       RETURNING "long", TYPE 3
      * SelStart
      * Returns/sets the starting point of text selected; indicates the position 
               PROPERTY-PUT, 8, @SelStart,
                   "long (Property_Value)", TYPE 3
      * SelStrikeThru
      * Returns/set the strikethru format of the currently selected text.
               PROPERTY-GET, 26, @SelStrikeThru
                       RETURNING "VARIANT", TYPE 12
      * SelStrikeThru
      * Returns/set the strikethru format of the currently selected text.
               PROPERTY-PUT, 26, @SelStrikeThru,
                   "VARIANT (Property_Value)", TYPE 12
      * SelTabCount
      * Returns/sets the number of tabs in a RichTextBox control.  Used in 
               PROPERTY-GET, 20, @SelTabCount
                       RETURNING "VARIANT", TYPE 12
      * SelTabCount
      * Returns/sets the number of tabs in a RichTextBox control.  Used in 
               PROPERTY-PUT, 20, @SelTabCount,
                   "VARIANT (Property_Value)", TYPE 12
      * SelText
      * Returns/sets the string containing the currently selected text; consists 
               PROPERTY-GET, 9, @SelText
                       RETURNING "BSTR", TYPE 8
      * SelText
      * Returns/sets the string containing the currently selected text; consists 
               PROPERTY-PUT, 9, @SelText,
                   "BSTR (Property_Value)", TYPE 8
      * SelUnderline
      * Returns/set the underline format of the currently selected text.
               PROPERTY-GET, 27, @SelUnderline
                       RETURNING "VARIANT", TYPE 12
      * SelUnderline
      * Returns/set the underline format of the currently selected text.
               PROPERTY-PUT, 27, @SelUnderline,
                   "VARIANT (Property_Value)", TYPE 12
      * Text
      * Returns/sets the text contained in an object.
               PROPERTY-GET, -517, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns/sets the text contained in an object.
               PROPERTY-PUT, -517, @Text,
                   "BSTR (Property_Value)", TYPE 8
      * TextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-GET, 10, @TextRTF
                       RETURNING "BSTR", TYPE 8
      * TextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-PUT, 10, @TextRTF,
                   "BSTR (Property_Value)", TYPE 8
      * OLEObjects
      * The RichTextBox control enables you to add insertable objects to an RTF 
               PROPERTY-GET, 42, @OLEObjects
                       RETURNING "IOLEObjects*", TYPE 9
      * AutoVerbMenu
      * Returns/sets a value that indicating whether the selected object's verbs 
               PROPERTY-GET, 43, @AutoVerbMenu
                       RETURNING "boolean", TYPE 11
      * AutoVerbMenu
      * Returns/sets a value that indicating whether the selected object's verbs 
               PROPERTY-PUT, 43, @AutoVerbMenu,
                   "boolean (Property_Value)", TYPE 11
      * OLEDragMode
      * Returns/Sets whether this control can act as an OLE drag/drop source, 
               PROPERTY-GET, 1550, @OLEDragMode
                       RETURNING "OLEDragConstants", TYPE 3
      * OLEDragMode
      * Returns/Sets whether this control can act as an OLE drag/drop source, 
               PROPERTY-PUT, 1550, @OLEDragMode,
                   "OLEDragConstants (Property_Value)", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property_Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * Find
      * Searches the text in a RichTextBox control for a given string.
               METHOD, 34, @Find,
                   "BSTR" @bstrString, TYPE 8,
                   "VARIANT" @vStart, TYPE 12,
                   "VARIANT" @vEnd, TYPE 12,
                   "VARIANT" @vOptions, TYPE 12
                       OPTIONAL 3
                       RETURNING "long", TYPE 3
      * GetLineFromChar
      * Returns the number of the line containing a specified character position 
               METHOD, 33, @GetLineFromChar,
                   "long" @lChar, TYPE 3
                       RETURNING "long", TYPE 3
      * LoadFile
      * Loads an .RTF file or text file into a RichTextBox control.
               METHOD, 37, @LoadFile,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vFileType, TYPE 12
                       OPTIONAL 1
      * Refresh
      * Forces a complete repaint of a control.
               METHOD, -550, @Refresh
      * SaveFile
      * Saves the contents of a RichTextBox control to a file.
               METHOD, 38, @SaveFile,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vFlags, TYPE 12
                       OPTIONAL 1
      * UnusedSelPrint
               METHOD, 49, @UnusedSelPrint,
                   "long" @lHDC, TYPE 3
      * SelTabs
      * Returns/sets the absolute tab positions of text in a RichTextBox 
               PROPERTY-GET, 40, @SelTabs,
                   "short" @sElement, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * SelTabs
      * Returns/sets the absolute tab positions of text in a RichTextBox 
               PROPERTY-PUT, 40, @SelTabs,
                   "short" @sElement, TYPE 2,
                   "VARIANT (Property_Value)", TYPE 12
      * Span
      * Selects text in a RichTextBox control based on a set of specified 
               METHOD, 35, @Span,
                   "BSTR" @bstrCharacterSet, TYPE 8,
                   "VARIANT" @vForward, TYPE 12,
                   "VARIANT" @vNegate, TYPE 12
                       OPTIONAL 2
      * UpTo
      * Moves the insertion point up to, but not including, the first character 
               METHOD, 36, @UpTo,
                   "BSTR" @bstrCharacterSet, TYPE 8,
                   "VARIANT" @vForward, TYPE 12,
                   "VARIANT" @vNegate, TYPE 12
                       OPTIONAL 2
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * SelPrint
      * Sends formatted text in a RichTextBox control to a device for printing.
               METHOD, 39, @SelPrint,
                   "long" @lHDC, TYPE 3,
                   "VARIANT" @vStartDoc, TYPE 12
                       OPTIONAL 1
           
      * Event interface for RichText control
           
      * DRichTextEvents
           CLASS @DRichTextEvents
               CLSID, 3B7C8862-D78F-101B-B9B5-04021C009402
               NAME, "DRichTextEvents"
      * Change
      * Indicates that the contents of a control have changed.
               METHOD, 1, @Change
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
               METHOD, -600, @Click
      * DblClick
      * Occurs when the user presses and releases a mouse button and then 
               METHOD, -601, @DblClick
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               METHOD, -602, @KeyDown,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               METHOD, -604, @KeyUp,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               METHOD, -603, @KeyPress,
                   "short*" @KeyAscii, TYPE 16386
      * MouseDown
      * Occurs when the user presses a mouse button.
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseMove
      * Occurs when the user moves the mouse.
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseUp
      * Occurs when the user presses and releases a mouse button.
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * SelChange
      * Occurs when the current selection of text in the RichTextBox control has 
               METHOD, 2, @SelChange
      * OLEStartDrag
      * OLEStartDrag event
               METHOD, 1550, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * OLEGiveFeedback event
               METHOD, 1551, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * OLESetData event
               METHOD, 1552, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * OLECompleteDrag event
               METHOD, 1553, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * OLEDragOver event
               METHOD, 1554, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * OLEDragDrop event
               METHOD, 1555, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388
           
      * Microsoft Rich Textbox Control 6.0 (SP6)
           
      *** Primary Interface ***
           
      * RichTextBox
           CLASS @RichTextBox
               CLSID, 3B7C8860-D78F-101B-B9B5-04021C009402
               NAME, "RichTextBox"
               PRIMARY-INTERFACE
               ACTIVE-X-CONTROL
               DEFAULT-INTERFACE, "IRichText"
               DEFAULT-SOURCE, "3B7C8862-D78F-101B-B9B5-04021C009402"
      * defTextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-GET, 0, @defTextRTF
                       RETURNING "BSTR", TYPE 8
      * defTextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-PUT, 0, @defTextRTF,
                   "BSTR (Property_Value)", TYPE 8
      * Appearance
      * Returns/sets the paint style of a control at run time.
               PROPERTY-GET, 29, @Appearance
                       RETURNING "AppearanceConstants", TYPE 3
      * Appearance
      * Returns/sets the paint style of a control at run time.
               PROPERTY-PUT, 29, @Appearance,
                   "AppearanceConstants (Property_Value)", TYPE 3
      * BackColor
      * Returns/sets the background color of an object.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns/sets the background color of an object.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property_Value)", TYPE 19
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-GET, 23, @BorderStyle
                       RETURNING "BorderStyleConstants", TYPE 3
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-PUT, 23, @BorderStyle,
                   "BorderStyleConstants (Property_Value)", TYPE 3
      * BulletIndent
      * Returns or sets the amount of indent used in a RichTextBox control when 
               PROPERTY-GET, 30, @BulletIndent
                       RETURNING "single", TYPE 4
      * BulletIndent
      * Returns or sets the amount of indent used in a RichTextBox control when 
               PROPERTY-PUT, 30, @BulletIndent,
                   "single (Property_Value)", TYPE 4
      * DisableNoScroll
      * Returns/sets a value that determines whether scroll bars in the 
               PROPERTY-GET, 7, @DisableNoScroll
                       RETURNING "boolean", TYPE 11
      * DisableNoScroll
      * Returns/sets a value that determines whether scroll bars in the 
               PROPERTY-PUT, 7, @DisableNoScroll,
                   "boolean (Property_Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether an object can respond to 
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether an object can respond to 
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property_Value)", TYPE 11
      * FileName
      * Returns/sets the filename of the file loaded into the RichTextBox 
               PROPERTY-GET, 19, @FileName
                       RETURNING "BSTR", TYPE 8
      * FileName
      * Returns/sets the filename of the file loaded into the RichTextBox 
               PROPERTY-PUT, 19, @FileName,
                   "BSTR (Property_Value)", TYPE 8
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property_Value)", TYPE 16413
      * HideSelection
      * Returns/sets a value that specifies if the selected item remains 
               PROPERTY-GET, 2, @HideSelection
                       RETURNING "boolean", TYPE 11
      * HideSelection
      * Returns/sets a value that specifies if the selected item remains 
               PROPERTY-PUT, 2, @HideSelection,
                   "boolean (Property_Value)", TYPE 11
      * Hwnd
      * Returns a handle to a control.
               PROPERTY-GET, -515, @Hwnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * Hwnd
      * Returns a handle to a control.
               PROPERTY-PUT, -515, @Hwnd,
                   "OLE_HANDLE (Property_Value)", TYPE 22
      * Locked
      * Returns/sets a value indicating whether the contents in a RichTextBox 
               PROPERTY-GET, 22, @Locked
                       RETURNING "boolean", TYPE 11
      * Locked
      * Returns/sets a value indicating whether the contents in a RichTextBox 
               PROPERTY-PUT, 22, @Locked,
                   "boolean (Property_Value)", TYPE 11
      * MaxLength
      * Returns/sets a value indicating whether there is a maximum number of 
               PROPERTY-GET, 12, @MaxLength
                       RETURNING "long", TYPE 3
      * MaxLength
      * Returns/sets a value indicating whether there is a maximum number of 
               PROPERTY-PUT, 12, @MaxLength,
                   "long (Property_Value)", TYPE 3
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 6, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 6, @MouseIcon,
                   "IPictureDisp* (Property_Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 6, @MouseIcon,
                   "IPictureDisp* (Property_Value)", TYPE 16413
      * MousePointer
      * Returns/sets a value indicating the type of mouse pointer displayed when 
               PROPERTY-GET, 1, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets a value indicating the type of mouse pointer displayed when 
               PROPERTY-PUT, 1, @MousePointer,
                   "MousePointerConstants (Property_Value)", TYPE 3
      * MultiLine
      * Returns/sets a value indicating whether a RichTextBox control can accept 
               PROPERTY-GET, 3, @MultiLine
                       RETURNING "boolean", TYPE 11
      * MultiLine
      * Returns/sets a value indicating whether a RichTextBox control can accept 
               PROPERTY-PUT, 3, @MultiLine,
                   "boolean (Property_Value)", TYPE 11
      * RightMargin
      * Sets the right margin used for textwrap, centering, etc.
               PROPERTY-GET, 32, @RightMargin
                       RETURNING "single", TYPE 4
      * RightMargin
      * Sets the right margin used for textwrap, centering, etc.
               PROPERTY-PUT, 32, @RightMargin,
                   "single (Property_Value)", TYPE 4
      * ScrollBars
      * Returns/sets a value indicating whether a RichTextBox control has 
               PROPERTY-GET, 4, @ScrollBars
                       RETURNING "ScrollBarsConstants", TYPE 3
      * ScrollBars
      * Returns/sets a value indicating whether a RichTextBox control has 
               PROPERTY-PUT, 4, @ScrollBars,
                   "ScrollBarsConstants (Property_Value)", TYPE 3
      * SelAlignment
      * Returns/sets a value that controls the alignment of the paragraphs in a 
               PROPERTY-GET, 28, @SelAlignment
                       RETURNING "VARIANT", TYPE 12
      * SelAlignment
      * Returns/sets a value that controls the alignment of the paragraphs in a 
               PROPERTY-PUT, 28, @SelAlignment,
                   "VARIANT (Property_Value)", TYPE 12
      * SelBold
      * Returns/set the bold format of the currently selected text.
               PROPERTY-GET, 24, @SelBold
                       RETURNING "VARIANT", TYPE 12
      * SelBold
      * Returns/set the bold format of the currently selected text.
               PROPERTY-PUT, 24, @SelBold,
                   "VARIANT (Property_Value)", TYPE 12
      * SelBullet
      * Returns/sets a value that determines if a paragraph in the RichTextBox 
               PROPERTY-GET, 31, @SelBullet
                       RETURNING "VARIANT", TYPE 12
      * SelBullet
      * Returns/sets a value that determines if a paragraph in the RichTextBox 
               PROPERTY-PUT, 31, @SelBullet,
                   "VARIANT (Property_Value)", TYPE 12
      * SelCharOffset
      * Returns/sets a value that determines whether text in the RichTextBox 
               PROPERTY-GET, 16, @SelCharOffset
                       RETURNING "VARIANT", TYPE 12
      * SelCharOffset
      * Returns/sets a value that determines whether text in the RichTextBox 
               PROPERTY-PUT, 16, @SelCharOffset,
                   "VARIANT (Property_Value)", TYPE 12
      * SelColor
      * Returns/sets a value that determines the color of text in the 
               PROPERTY-GET, 13, @SelColor
                       RETURNING "VARIANT", TYPE 12
      * SelColor
      * Returns/sets a value that determines the color of text in the 
               PROPERTY-PUT, 13, @SelColor,
                   "VARIANT (Property_Value)", TYPE 12
      * SelFontName
      * Returns/sets the font used to display the currently selected text or the 
               PROPERTY-GET, 14, @SelFontName
                       RETURNING "VARIANT", TYPE 12
      * SelFontName
      * Returns/sets the font used to display the currently selected text or the 
               PROPERTY-PUT, 14, @SelFontName,
                   "VARIANT (Property_Value)", TYPE 12
      * SelFontSize
      * Returns/sets a value that specifies the size of the font used to display 
               PROPERTY-GET, 15, @SelFontSize
                       RETURNING "VARIANT", TYPE 12
      * SelFontSize
      * Returns/sets a value that specifies the size of the font used to display 
               PROPERTY-PUT, 15, @SelFontSize,
                   "VARIANT (Property_Value)", TYPE 12
      * SelHangingIndent
      * Returns/sets the distance between the left edge of the first line of 
               PROPERTY-GET, 18, @SelHangingIndent
                       RETURNING "VARIANT", TYPE 12
      * SelHangingIndent
      * Returns/sets the distance between the left edge of the first line of 
               PROPERTY-PUT, 18, @SelHangingIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelIndent
      * Returns/sets the distance between the left edge of the RichTextBox 
               PROPERTY-GET, 17, @SelIndent
                       RETURNING "VARIANT", TYPE 12
      * SelIndent
      * Returns/sets the distance between the left edge of the RichTextBox 
               PROPERTY-PUT, 17, @SelIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelItalic
      * Returns/set the italic format of the currently selected text.
               PROPERTY-GET, 25, @SelItalic
                       RETURNING "VARIANT", TYPE 12
      * SelItalic
      * Returns/set the italic format of the currently selected text.
               PROPERTY-PUT, 25, @SelItalic,
                   "VARIANT (Property_Value)", TYPE 12
      * SelLength
      * Returns/sets the number of characters selected.
               PROPERTY-GET, 5, @SelLength
                       RETURNING "long", TYPE 3
      * SelLength
      * Returns/sets the number of characters selected.
               PROPERTY-PUT, 5, @SelLength,
                   "long (Property_Value)", TYPE 3
      * SelProtected
      * Returns/sets a value that determines if the selected text is protected 
               PROPERTY-GET, 48, @SelProtected
                       RETURNING "VARIANT", TYPE 12
      * SelProtected
      * Returns/sets a value that determines if the selected text is protected 
               PROPERTY-PUT, 48, @SelProtected,
                   "VARIANT (Property_Value)", TYPE 12
      * SelRightIndent
      * Returns/sets the distance between the right edge of the RichTextBox 
               PROPERTY-GET, 21, @SelRightIndent
                       RETURNING "VARIANT", TYPE 12
      * SelRightIndent
      * Returns/sets the distance between the right edge of the RichTextBox 
               PROPERTY-PUT, 21, @SelRightIndent,
                   "VARIANT (Property_Value)", TYPE 12
      * SelRTF
      * Returns/sets the text (in .RTF format) in the current selection of a 
               PROPERTY-GET, 11, @SelRTF
                       RETURNING "BSTR", TYPE 8
      * SelRTF
      * Returns/sets the text (in .RTF format) in the current selection of a 
               PROPERTY-PUT, 11, @SelRTF,
                   "BSTR (Property_Value)", TYPE 8
      * SelStart
      * Returns/sets the starting point of text selected; indicates the position 
               PROPERTY-GET, 8, @SelStart
                       RETURNING "long", TYPE 3
      * SelStart
      * Returns/sets the starting point of text selected; indicates the position 
               PROPERTY-PUT, 8, @SelStart,
                   "long (Property_Value)", TYPE 3
      * SelStrikeThru
      * Returns/set the strikethru format of the currently selected text.
               PROPERTY-GET, 26, @SelStrikeThru
                       RETURNING "VARIANT", TYPE 12
      * SelStrikeThru
      * Returns/set the strikethru format of the currently selected text.
               PROPERTY-PUT, 26, @SelStrikeThru,
                   "VARIANT (Property_Value)", TYPE 12
      * SelTabCount
      * Returns/sets the number of tabs in a RichTextBox control.  Used in 
               PROPERTY-GET, 20, @SelTabCount
                       RETURNING "VARIANT", TYPE 12
      * SelTabCount
      * Returns/sets the number of tabs in a RichTextBox control.  Used in 
               PROPERTY-PUT, 20, @SelTabCount,
                   "VARIANT (Property_Value)", TYPE 12
      * SelText
      * Returns/sets the string containing the currently selected text; consists 
               PROPERTY-GET, 9, @SelText
                       RETURNING "BSTR", TYPE 8
      * SelText
      * Returns/sets the string containing the currently selected text; consists 
               PROPERTY-PUT, 9, @SelText,
                   "BSTR (Property_Value)", TYPE 8
      * SelUnderline
      * Returns/set the underline format of the currently selected text.
               PROPERTY-GET, 27, @SelUnderline
                       RETURNING "VARIANT", TYPE 12
      * SelUnderline
      * Returns/set the underline format of the currently selected text.
               PROPERTY-PUT, 27, @SelUnderline,
                   "VARIANT (Property_Value)", TYPE 12
      * Text
      * Returns/sets the text contained in an object.
               PROPERTY-GET, -517, @Text
                       RETURNING "BSTR", TYPE 8
      * Text
      * Returns/sets the text contained in an object.
               PROPERTY-PUT, -517, @Text,
                   "BSTR (Property_Value)", TYPE 8
      * TextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-GET, 10, @TextRTF
                       RETURNING "BSTR", TYPE 8
      * TextRTF
      * Returns/sets the text of a RichTextBox control, including all .RTF 
               PROPERTY-PUT, 10, @TextRTF,
                   "BSTR (Property_Value)", TYPE 8
      * OLEObjects
      * The RichTextBox control enables you to add insertable objects to an RTF 
               PROPERTY-GET, 42, @OLEObjects
                       RETURNING "IOLEObjects*", TYPE 9
      * AutoVerbMenu
      * Returns/sets a value that indicating whether the selected object's verbs 
               PROPERTY-GET, 43, @AutoVerbMenu
                       RETURNING "boolean", TYPE 11
      * AutoVerbMenu
      * Returns/sets a value that indicating whether the selected object's verbs 
               PROPERTY-PUT, 43, @AutoVerbMenu,
                   "boolean (Property_Value)", TYPE 11
      * OLEDragMode
      * Returns/Sets whether this control can act as an OLE drag/drop source, 
               PROPERTY-GET, 1550, @OLEDragMode
                       RETURNING "OLEDragConstants", TYPE 3
      * OLEDragMode
      * Returns/Sets whether this control can act as an OLE drag/drop source, 
               PROPERTY-PUT, 1550, @OLEDragMode,
                   "OLEDragConstants (Property_Value)", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property_Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * Find
      * Searches the text in a RichTextBox control for a given string.
               METHOD, 34, @Find,
                   "BSTR" @bstrString, TYPE 8,
                   "VARIANT" @vStart, TYPE 12,
                   "VARIANT" @vEnd, TYPE 12,
                   "VARIANT" @vOptions, TYPE 12
                       OPTIONAL 3
                       RETURNING "long", TYPE 3
      * GetLineFromChar
      * Returns the number of the line containing a specified character position 
               METHOD, 33, @GetLineFromChar,
                   "long" @lChar, TYPE 3
                       RETURNING "long", TYPE 3
      * LoadFile
      * Loads an .RTF file or text file into a RichTextBox control.
               METHOD, 37, @LoadFile,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vFileType, TYPE 12
                       OPTIONAL 1
      * Refresh
      * Forces a complete repaint of a control.
               METHOD, -550, @Refresh
      * SaveFile
      * Saves the contents of a RichTextBox control to a file.
               METHOD, 38, @SaveFile,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vFlags, TYPE 12
                       OPTIONAL 1
      * UnusedSelPrint
               METHOD, 49, @UnusedSelPrint,
                   "long" @lHDC, TYPE 3
      * SelTabs
      * Returns/sets the absolute tab positions of text in a RichTextBox 
               PROPERTY-GET, 40, @SelTabs,
                   "short" @sElement, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * SelTabs
      * Returns/sets the absolute tab positions of text in a RichTextBox 
               PROPERTY-PUT, 40, @SelTabs,
                   "short" @sElement, TYPE 2,
                   "VARIANT (Property_Value)", TYPE 12
      * Span
      * Selects text in a RichTextBox control based on a set of specified 
               METHOD, 35, @Span,
                   "BSTR" @bstrCharacterSet, TYPE 8,
                   "VARIANT" @vForward, TYPE 12,
                   "VARIANT" @vNegate, TYPE 12
                       OPTIONAL 2
      * UpTo
      * Moves the insertion point up to, but not including, the first character 
               METHOD, 36, @UpTo,
                   "BSTR" @bstrCharacterSet, TYPE 8,
                   "VARIANT" @vForward, TYPE 12,
                   "VARIANT" @vNegate, TYPE 12
                       OPTIONAL 2
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * SelPrint
      * Sends formatted text in a RichTextBox control to a device for printing.
               METHOD, 39, @SelPrint,
                   "long" @lHDC, TYPE 3,
                   "VARIANT" @vStartDoc, TYPE 12
                       OPTIONAL 1
      * Change
      * Indicates that the contents of a control have changed.
               EVENT, 1, @RichTextBoxChange
      *            No Parameters
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
               EVENT, -600, @RichTextBoxClick
      *            No Parameters
      * DblClick
      * Occurs when the user presses and releases a mouse button and then 
               EVENT, -601, @RichTextBoxDblClick
      *            No Parameters
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               EVENT, -602, @RichTextBoxKeyDown
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               EVENT, -604, @RichTextBoxKeyUp
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               EVENT, -603, @RichTextBoxKeyPress
      *            1 Parameter
      *                "short* KeyAscii"
      * MouseDown
      * Occurs when the user presses a mouse button.
               EVENT, -605, @RichTextBoxMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseMove
      * Occurs when the user moves the mouse.
               EVENT, -606, @RichTextBoxMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseUp
      * Occurs when the user presses and releases a mouse button.
               EVENT, -607, @RichTextBoxMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * SelChange
      * Occurs when the current selection of text in the RichTextBox control has 
               EVENT, 2, @RichTextBoxSelChange
      *            No Parameters
      * OLEStartDrag
      * OLEStartDrag event
               EVENT, 1550, @RichTextBoxOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * OLEGiveFeedback event
               EVENT, 1551, @RichTextBoxOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * OLESetData event
               EVENT, 1552, @RichTextBoxOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * OLECompleteDrag event
               EVENT, 1553, @RichTextBoxOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * OLEDragOver event
               EVENT, 1554, @RichTextBoxOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
      *                "short* State"
      * OLEDragDrop
      * OLEDragDrop event
               EVENT, 1555, @RichTextBoxOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
           
      * RichText Control OLEObjects Collection Interface
           
      * OLEObjects
           CLASS @OLEObjects
               CLSID, 4A8F35A0-D900-11CF-89B4-00AA00688B10
               NAME, "OLEObjects"
               DEFAULT-INTERFACE, "IOLEObjects"
      * Item
      * Returns a specific item of a collection object by position, index, or 
               PROPERTY-GET, 0, @Item,
                   "VARIANT" @Item, TYPE 12
                       OPTIONAL 1
                       RETURNING "IOLEObject*", TYPE 9
      * Count
      * Returns the number of members in a collection.
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Clear
      * Clears all objects in a collection.
               METHOD, 4, @Clear
      * Add
      * Adds an OLEObject to an OLEObjects collection.
               METHOD, 2, @Add,
                   "VARIANT" @Index, TYPE 12,
                   "VARIANT" @Key, TYPE 12,
                   "VARIANT" @source, TYPE 12,
                   "VARIANT" @objclass, TYPE 12
                       OPTIONAL 4
                       RETURNING "IOLEObject*", TYPE 9
      * Remove
      * Removes a specific member from a collection.
               METHOD, 3, @Remove,
                   "VARIANT" @Item, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * The RichTextBox control enables you to add insertable objects to an RTF 
           
      * OLEObject
           CLASS @OLEObject
               CLSID, 4A8F35A1-D900-11CF-89B4-00AA00688B10
               NAME, "OLEObject"
               DEFAULT-INTERFACE, "IOLEObject"
      * Index
      * Returns the number that uniquely identifies an object in a collection.
               PROPERTY-GET, 1, @Index
                       RETURNING "int", TYPE 22
      * Key
      * Returns/sets a string that uniquely identifies a member in a 
               PROPERTY-GET, 2, @Key
                       RETURNING "BSTR", TYPE 8
      * Key
      * Returns/sets a string that uniquely identifies a member in a 
               PROPERTY-PUT, 2, @Key,
                   "BSTR (Property_Value)", TYPE 8
      * Class
      * Returns object's OLE class name
               PROPERTY-GET, 3, @Class
                       RETURNING "BSTR", TYPE 8
      * DisplayType
      * Returns/sets a value indicating whether an object displays its contents 
               PROPERTY-GET, 5, @DisplayType
                       RETURNING "DisplayTypeConstants", TYPE 3
      * DisplayType
      * Returns/sets a value indicating whether an object displays its contents 
               PROPERTY-PUT, 5, @DisplayType,
                   "DisplayTypeConstants (Property_Value)", TYPE 3
      * ObjectVerbs
      * Returns a string array of verbs supported by the object. FetchVerbs must 
               PROPERTY-GET, 6, @ObjectVerbs
                       RETURNING "VARIANT", TYPE 12
      * ObjectVerbFlags
      * Returns a integer array of menu item state flags used to display the 
               PROPERTY-GET, 7, @ObjectVerbFlags
                       RETURNING "VARIANT", TYPE 12
      * ObjectVerbsCount
      * Returns the number of verbs supported by the object.  This is the number 
               PROPERTY-GET, 8, @ObjectVerbsCount
                       RETURNING "int", TYPE 22
      * DoVerb
      * Executes the object's verb specified by the index value.
               METHOD, 9, @DoVerb,
                   "VARIANT" @verb, TYPE 12
                       OPTIONAL 1
      * FetchVerbs
      * Fetches the verbs supported by the object.  This method must be called 
               METHOD, 10, @FetchVerbs
                       RETURNING "int", TYPE 22
