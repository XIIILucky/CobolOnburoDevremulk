      * C:\ASYA\ACUGT\otel\Copylib\UpDown.def - ActiveX control definitions for 
      * MSComCtl2
      * Generated: Pazartesi, Þubat 14, 2000
           
           OBJECT @MSComCtl2
           
      * IVBDataObject
           CLASS @IVBDataObject
               CLSID, 2334D2B1-713E-11CF-8AE5-00AA00C00905
               NAME, "IVBDataObject"
      * Clear
      * Clears all data and formats in a DataObject object.
               METHOD, 1, @Clear
      * GetData
      * Retrieves data of a specified format from a DataObject object.
               METHOD, 2, @GetData,
                   "short" @sFormat, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
      * Determines if a specified clipboard format is supported by the 
      * DataObject object.
               METHOD, 3, @GetFormat,
                   "short" @sFormat, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
      * Adds a supported format and possibly its data to a DataObject object.
               METHOD, 4, @SetData,
                   "VARIANT" @vValue, TYPE 12,
                   "VARIANT" @vFormat, TYPE 12
                       OPTIONAL 2
      * Files
      * A collection of filenames used by the vbCFFiles format.
               PROPERTY-GET, 5, @Files
                       RETURNING "IVBDataObjectFiles*", TYPE 9
           
      * DataObject
           CLASS @DataObject
               CLSID, 2334D2B2-713E-11CF-8AE5-00AA00C00905
               NAME, "DataObject"
               DEFAULT-INTERFACE, "IVBDataObject"
      * Clear
      * Clears all data and formats in a DataObject object.
               METHOD, 1, @Clear
      * GetData
      * Retrieves data of a specified format from a DataObject object.
               METHOD, 2, @GetData,
                   "short" @sFormat, TYPE 2
                       RETURNING "VARIANT", TYPE 12
      * GetFormat
      * Determines if a specified clipboard format is supported by the 
      * DataObject object.
               METHOD, 3, @GetFormat,
                   "short" @sFormat, TYPE 2
                       RETURNING "boolean", TYPE 11
      * SetData
      * Adds a supported format and possibly its data to a DataObject object.
               METHOD, 4, @SetData,
                   "VARIANT" @vValue, TYPE 12,
                   "VARIANT" @vFormat, TYPE 12
                       OPTIONAL 2
      * Files
      * A collection of filenames used by the vbCFFiles format.
               PROPERTY-GET, 5, @Files
                       RETURNING "IVBDataObjectFiles*", TYPE 9
           
      * IVBDataObjectFiles
           CLASS @IVBDataObjectFiles
               CLSID, 2334D2B3-713E-11CF-8AE5-00AA00C00905
               NAME, "IVBDataObjectFiles"
      * Item
      * Returns a specific filename by index from the Files collection of a 
      * DataObject object (vbCFFiles format only).
               PROPERTY-GET, 0, @Item,
                   "long" @lIndex, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * Count
      * Returns the number of filenames in the Files collection of a DataObject 
      * object (vbCFFiles format only).
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Add
      * Adds a filename to the Files collection of a DataObject object 
      * (vbCFFiles format only).
               METHOD, 2, @Add,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vIndex, TYPE 12
                       OPTIONAL 1
      * Clear
      * Clears all filenames stored in the Files collection of a DataObject 
      * object (vbCFFiles format only).
               METHOD, 3, @Clear
      * Remove
      * Removes a filename from the Files collection of a DataObject object 
      * (vbCFFiles format only).
               METHOD, 4, @Remove,
                   "VARIANT" @vIndex, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * DataObjectFiles
           CLASS @DataObjectFiles
               CLSID, 2334D2B4-713E-11CF-8AE5-00AA00C00905
               NAME, "DataObjectFiles"
               DEFAULT-INTERFACE, "IVBDataObjectFiles"
      * Item
      * Returns a specific filename by index from the Files collection of a 
      * DataObject object (vbCFFiles format only).
               PROPERTY-GET, 0, @Item,
                   "long" @lIndex, TYPE 3
                       RETURNING "BSTR", TYPE 8
      * Count
      * Returns the number of filenames in the Files collection of a DataObject 
      * object (vbCFFiles format only).
               PROPERTY-GET, 1, @Count
                       RETURNING "long", TYPE 3
      * Add
      * Adds a filename to the Files collection of a DataObject object 
      * (vbCFFiles format only).
               METHOD, 2, @Add,
                   "BSTR" @bstrFilename, TYPE 8,
                   "VARIANT" @vIndex, TYPE 12
                       OPTIONAL 1
      * Clear
      * Clears all filenames stored in the Files collection of a DataObject 
      * object (vbCFFiles format only).
               METHOD, 3, @Clear
      * Remove
      * Removes a filename from the Files collection of a DataObject object 
      * (vbCFFiles format only).
               METHOD, 4, @Remove,
                   "VARIANT" @vIndex, TYPE 12
      * _NewEnum
               METHOD, -4, @_NewEnum
                       RETURNING "IUnknown*", TYPE 13
           
      * Constants for the OLEDropMode property (but not the DragMode or 
      * OLEDragMode properties).
           
      * OLEDropConstants
           CLASS @OLEDropConstants
               CLSID, D8898461-742F-11CF-8AEA-00AA00C00905
               NAME, "OLEDropConstants"
      * "long cc2OLEDropNone"
               ENUMERATOR, @cc2OLEDropNone, 0
      * "long cc2OLEDropManual"
               ENUMERATOR, @cc2OLEDropManual, 1
           
      * State transition constants for the DragOver and OLEDragOver events.
           
      * DragOverConstants
           CLASS @DragOverConstants
               CLSID, D8898464-742F-11CF-8AEA-00AA00C00905
               NAME, "DragOverConstants"
      * "long cc2Enter"
               ENUMERATOR, @cc2Enter, 0
      * "long cc2Leave"
               ENUMERATOR, @cc2Leave, 1
      * "long cc2Over"
               ENUMERATOR, @cc2Over, 2
           
      * Clipboard format constants.
           
      * ClipBoardConstants
           CLASS @ClipBoardConstants
               CLSID, D8898462-742F-11CF-8AEA-00AA00C00905
               NAME, "ClipBoardConstants"
      * "long cc2CFText"
               ENUMERATOR, @cc2CFText, 1
      * "long cc2CFBitmap"
               ENUMERATOR, @cc2CFBitmap, 2
      * "long cc2CFMetafile"
               ENUMERATOR, @cc2CFMetafile, 3
      * "long cc2CFDIB"
               ENUMERATOR, @cc2CFDIB, 8
      * "long cc2CFPalette"
               ENUMERATOR, @cc2CFPalette, 9
      * "long cc2CFEMetafile"
               ENUMERATOR, @cc2CFEMetafile, 14
      * "long cc2CFFiles"
               ENUMERATOR, @cc2CFFiles, 15
      * "long cc2CFRTF"
               ENUMERATOR, @cc2CFRTF, -16639
           
      * Drop effect constants for OLE drag and drop events.
           
      * OLEDropEffectConstants
           CLASS @OLEDropEffectConstants
               CLSID, D8898463-742F-11CF-8AEA-00AA00C00905
               NAME, "OLEDropEffectConstants"
      * "long cc2OLEDropEffectNone"
               ENUMERATOR, @cc2OLEDropEffectNone, 0
      * "long cc2OLEDropEffectCopy"
               ENUMERATOR, @cc2OLEDropEffectCopy, 1
      * "long cc2OLEDropEffectMove"
               ENUMERATOR, @cc2OLEDropEffectMove, 2
      * "long cc2OLEDropEffectScroll"
               ENUMERATOR, @cc2OLEDropEffectScroll, -2147483648
           
      * Error Constants
           
      * ErrorConstants
           CLASS @ErrorConstants
               CLSID, 79311D2C-87C0-11D1-8BE3-0000F8754DA1
               NAME, "ErrorConstants"
      * "long cc2BadFileNameOrNumber"
               ENUMERATOR, @cc2BadFileNameOrNumber, 52
      * "long cc2FileNotFound"
               ENUMERATOR, @cc2FileNotFound, 53
      * "long cc2InvalidPropertyValue"
               ENUMERATOR, @cc2InvalidPropertyValue, 380
      * "long cc2SetNotSupportedAtRuntime"
               ENUMERATOR, @cc2SetNotSupportedAtRuntime, 382
      * "long cc2SetNotSupported"
               ENUMERATOR, @cc2SetNotSupported, 383
      * "long cc2GetNotSupported"
               ENUMERATOR, @cc2GetNotSupported, 394
      * "long cc2DataObjectLocked"
               ENUMERATOR, @cc2DataObjectLocked, 672
      * "long cc2ExpectedAnArgument"
               ENUMERATOR, @cc2ExpectedAnArgument, 673
      * "long cc2InvalidProcedureCall"
               ENUMERATOR, @cc2InvalidProcedureCall, 5
      * "long cc2InvalidObjectUse"
               ENUMERATOR, @cc2InvalidObjectUse, 425
      * "long cc2WrongClipboardFormat"
               ENUMERATOR, @cc2WrongClipboardFormat, 461
      * "long cc2RecursiveOleDrag"
               ENUMERATOR, @cc2RecursiveOleDrag, 674
      * "long cc2FormatNotByteArray"
               ENUMERATOR, @cc2FormatNotByteArray, 675
      * "long cc2DataNotSetForFormat"
               ENUMERATOR, @cc2DataNotSetForFormat, 676
      * "long cc2InconsistentObject"
               ENUMERATOR, @cc2InconsistentObject, 35750
      * "long cc2ErrorDuringSet"
               ENUMERATOR, @cc2ErrorDuringSet, 35751
      * "long cc2ErrorOpeningVideo"
               ENUMERATOR, @cc2ErrorOpeningVideo, 35752
      * "long cc2ErrorPlayingVideo"
               ENUMERATOR, @cc2ErrorPlayingVideo, 35753
      * "long cc2VideoNotOpen"
               ENUMERATOR, @cc2VideoNotOpen, 35755
      * "long cc2ErrorStoppingVideo"
               ENUMERATOR, @cc2ErrorStoppingVideo, 35757
      * "long cc2ErrorClosingVideo"
               ENUMERATOR, @cc2ErrorClosingVideo, 35758
      * "long cc2CantStopAutoPlay"
               ENUMERATOR, @cc2CantStopAutoPlay, 35759
      * "long cc2NoValidBuddyCtl"
               ENUMERATOR, @cc2NoValidBuddyCtl, 35754
      * "long cc2AutoBuddyNotSet"
               ENUMERATOR, @cc2AutoBuddyNotSet, 35756
      * "long cc2BuddyNotASibling"
               ENUMERATOR, @cc2BuddyNotASibling, 35760
      * "long cc2NoUpDownAsBuddy"
               ENUMERATOR, @cc2NoUpDownAsBuddy, 35761
      * "long cc2InvalidRange"
               ENUMERATOR, @cc2InvalidRange, 35770
      * "long cc2InvalidMaxDate"
               ENUMERATOR, @cc2InvalidMaxDate, 35771
      * "long cc2InvalidMinDate"
               ENUMERATOR, @cc2InvalidMinDate, 35772
      * "long cc2DateOutOfRange"
               ENUMERATOR, @cc2DateOutOfRange, 35773
      * "long cc2InvalidMaxDateMin"
               ENUMERATOR, @cc2InvalidMaxDateMin, 35774
      * "long cc2InvalidMinDateMax"
               ENUMERATOR, @cc2InvalidMinDateMax, 35775
      * "long cc2InvalidRowColValue"
               ENUMERATOR, @cc2InvalidRowColValue, 35776
      * "long cc2InvalidRowColTotal"
               ENUMERATOR, @cc2InvalidRowColTotal, 35777
      * "long cc2MonthViewError"
               ENUMERATOR, @cc2MonthViewError, 35778
      * "long cc2SetDayMultiSelectOn"
               ENUMERATOR, @cc2SetDayMultiSelectOn, 35779
      * "long cc2SetDayOfWeekMultiSelectOn"
               ENUMERATOR, @cc2SetDayOfWeekMultiSelectOn, 35780
      * "long cc2SetMonthMultiSelectOn"
               ENUMERATOR, @cc2SetMonthMultiSelectOn, 35781
      * "long cc2SetWeekMultiSelectOn"
               ENUMERATOR, @cc2SetWeekMultiSelectOn, 35782
      * "long cc2SetYearMultiSelectOn"
               ENUMERATOR, @cc2SetYearMultiSelectOn, 35783
      * "long cc2SetMaxSelCountMultiSelectOff"
               ENUMERATOR, @cc2SetMaxSelCountMultiSelectOff, 35784
      * "long cc2SetSelEndMultiSelectOff"
               ENUMERATOR, @cc2SetSelEndMultiSelectOff, 35785
      * "long cc2SetSelStartMultiSelectOff"
               ENUMERATOR, @cc2SetSelStartMultiSelectOff, 35786
      * "long cc2NullValueNotAllowed"
               ENUMERATOR, @cc2NullValueNotAllowed, 35787
      * "long cc2DTPickerError"
               ENUMERATOR, @cc2DTPickerError, 35788
      * "long cc2ScrollValueOutOfRange"
               ENUMERATOR, @cc2ScrollValueOutOfRange, 35789
           
      * Appearance constants
           
      * AppearanceConstants
           CLASS @AppearanceConstants
               CLSID, 79311D2D-87C0-11D1-8BE3-0000F8754DA1
               NAME, "AppearanceConstants"
      * "long cc2Flat"
               ENUMERATOR, @cc2Flat, 0
      * "long cc23D"
               ENUMERATOR, @cc23D, 1
           
      * BorderStyle constants
           
      * BorderStyleConstants
           CLASS @BorderStyleConstants
               CLSID, 79311D2E-87C0-11D1-8BE3-0000F8754DA1
               NAME, "BorderStyleConstants"
      * "long cc2None"
               ENUMERATOR, @cc2None, 0
      * "long cc2FixedSingle"
               ENUMERATOR, @cc2FixedSingle, 1
           
      * MousePointer constants
           
      * MousePointerConstants
           CLASS @MousePointerConstants
               CLSID, 79311D2F-87C0-11D1-8BE3-0000F8754DA1
               NAME, "MousePointerConstants"
      * "long cc2Default"
               ENUMERATOR, @cc2Default, 0
      * "long cc2Arrow"
               ENUMERATOR, @cc2Arrow, 1
      * "long cc2Cross"
               ENUMERATOR, @cc2Cross, 2
      * "long cc2IBeam"
               ENUMERATOR, @cc2IBeam, 3
      * "long cc2Icon"
               ENUMERATOR, @cc2Icon, 4
      * "long cc2Size"
               ENUMERATOR, @cc2Size, 5
      * "long cc2SizeNESW"
               ENUMERATOR, @cc2SizeNESW, 6
      * "long cc2SizeNS"
               ENUMERATOR, @cc2SizeNS, 7
      * "long cc2SizeNWSE"
               ENUMERATOR, @cc2SizeNWSE, 8
      * "long cc2SizeEW"
               ENUMERATOR, @cc2SizeEW, 9
      * "long cc2UpArrow"
               ENUMERATOR, @cc2UpArrow, 10
      * "long cc2Hourglass"
               ENUMERATOR, @cc2Hourglass, 11
      * "long cc2NoDrop"
               ENUMERATOR, @cc2NoDrop, 12
      * "long cc2ArrowHourglass"
               ENUMERATOR, @cc2ArrowHourglass, 13
      * "long cc2ArrowQuestion"
               ENUMERATOR, @cc2ArrowQuestion, 14
      * "long cc2SizeAll"
               ENUMERATOR, @cc2SizeAll, 15
      * "long cc2Custom"
               ENUMERATOR, @cc2Custom, 99
           
      * Orientations
           
      * OrientationConstants
           CLASS @OrientationConstants
               CLSID, 603C7E7D-87C2-11D1-8BE3-0000F8754DA1
               NAME, "OrientationConstants"
      * "long cc2OrientationVertical"
               ENUMERATOR, @cc2OrientationVertical, 0
      * "long cc2OrientationHorizontal"
               ENUMERATOR, @cc2OrientationHorizontal, 1
           
      * Background Style Constants
           
      * BackStyleConstants
           CLASS @BackStyleConstants
               CLSID, B09DE712-87C1-11D1-8BE3-0000F8754DA1
               NAME, "BackStyleConstants"
      * "long cc2BackstyleTransparent"
               ENUMERATOR, @cc2BackstyleTransparent, 0
      * "long cc2BackstyleOpaque"
               ENUMERATOR, @cc2BackstyleOpaque, 1
           
      * Animation Control
           
      * IAnimation
           CLASS @IAnimation
               CLSID, B09DE713-87C1-11D1-8BE3-0000F8754DA1
               NAME, "IAnimation"
      * AutoPlay
      * Get/Set the AutoPlay property
               PROPERTY-PUT, 1, @AutoPlay,
                   "boolean (Property Value)", TYPE 11
      * AutoPlay
      * Get/Set the AutoPlay property
               PROPERTY-GET, 1, @AutoPlay
                       RETURNING "boolean", TYPE 11
      * BackStyle
      * Get/Set the background style
               PROPERTY-PUT, 2, @BackStyle,
                   "BackStyleConstants (Property Value)", TYPE 3
      * BackStyle
      * Get/Set the background style
               PROPERTY-GET, 2, @BackStyle
                       RETURNING "BackStyleConstants", TYPE 3
      * Center
      * Get/Set the center property
               PROPERTY-PUT, 3, @Center,
                   "boolean (Property Value)", TYPE 11
      * Center
      * Get/Set the center property
               PROPERTY-GET, 3, @Center
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * BackColor
      * Returns/sets the background color used for transparent animations.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColor
      * Returns/sets the background color used for transparent animations.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * Close
      * Method to close the currently open AVI file
               METHOD, 4, @Close
      * Open
      * Method to open an existing AVI file
               METHOD, 5, @Open,
                   "BSTR" @bstrFilename, TYPE 8
      * Play
      * Method to play the currently open AVI file
               METHOD, 6, @Play,
                   "VARIANT" @varRepeatCount, TYPE 12,
                   "VARIANT" @varStartFrame, TYPE 12,
                   "VARIANT" @varEndFrame, TYPE 12
                       OPTIONAL 3
      * Stop
      * Method to stop playing the current AVI file
               METHOD, 7, @Stop
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
           
      * Event interface for Animation control
           
      * DAnimationEvents
           CLASS @DAnimationEvents
               CLSID, B09DE714-87C1-11D1-8BE3-0000F8754DA1
               NAME, "DAnimationEvents"
      * Click
      * A mouse button has been clicked on the Animation control
               METHOD, -600, @Click
      * DblClick
      * A mouse button has been double-clicked on the Animation control
               METHOD, -601, @DblClick
      * MouseDown
      * A mouse button was pressed over the Animation control
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseMove
      * The mouse has moved over the Animation control
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseUp
      * A mouse button was released from the Animation control
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * OLEStartDrag
      * OLEStartDrag event
               METHOD, 1550, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * OLEGiveFeedback event
               METHOD, 1551, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * OLESetData event
               METHOD, 1552, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * OLECompleteDrag event
               METHOD, 1553, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * OLEDragOver event
               METHOD, 1554, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * OLEDragDrop event
               METHOD, 1555, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388
           
      * Animation Control
           
      * Animation
           CLASS @Animation
               CLSID, B09DE715-87C1-11D1-8BE3-0000F8754DA1
               NAME, "Animation"
               DEFAULT-INTERFACE, "IAnimation"
               DEFAULT-SOURCE, "DAnimationEvents"
      * AutoPlay
      * Get/Set the AutoPlay property
               PROPERTY-PUT, 1, @AutoPlay,
                   "boolean (Property Value)", TYPE 11
      * AutoPlay
      * Get/Set the AutoPlay property
               PROPERTY-GET, 1, @AutoPlay
                       RETURNING "boolean", TYPE 11
      * BackStyle
      * Get/Set the background style
               PROPERTY-PUT, 2, @BackStyle,
                   "BackStyleConstants (Property Value)", TYPE 3
      * BackStyle
      * Get/Set the background style
               PROPERTY-GET, 2, @BackStyle
                       RETURNING "BackStyleConstants", TYPE 3
      * Center
      * Get/Set the center property
               PROPERTY-PUT, 3, @Center,
                   "boolean (Property Value)", TYPE 11
      * Center
      * Get/Set the center property
               PROPERTY-GET, 3, @Center
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * BackColor
      * Returns/sets the background color used for transparent animations.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BackColor
      * Returns/sets the background color used for transparent animations.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * Close
      * Method to close the currently open AVI file
               METHOD, 4, @Close
      * Open
      * Method to open an existing AVI file
               METHOD, 5, @Open,
                   "BSTR" @bstrFilename, TYPE 8
      * Play
      * Method to play the currently open AVI file
               METHOD, 6, @Play,
                   "VARIANT" @varRepeatCount, TYPE 12,
                   "VARIANT" @varStartFrame, TYPE 12,
                   "VARIANT" @varEndFrame, TYPE 12
                       OPTIONAL 3
      * Stop
      * Method to stop playing the current AVI file
               METHOD, 7, @Stop
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Click
      * A mouse button has been clicked on the Animation control
               EVENT, -600, @AnimationClick
      *            No Parameters
      * DblClick
      * A mouse button has been double-clicked on the Animation control
               EVENT, -601, @AnimationDblClick
      *            No Parameters
      * MouseDown
      * A mouse button was pressed over the Animation control
               EVENT, -605, @AnimationMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseMove
      * The mouse has moved over the Animation control
               EVENT, -606, @AnimationMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseUp
      * A mouse button was released from the Animation control
               EVENT, -607, @AnimationMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * OLEStartDrag
      * OLEStartDrag event
               EVENT, 1550, @AnimationOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * OLEGiveFeedback event
               EVENT, 1551, @AnimationOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * OLESetData event
               EVENT, 1552, @AnimationOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * OLECompleteDrag event
               EVENT, 1553, @AnimationOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * OLEDragOver event
               EVENT, 1554, @AnimationOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
      *                "short* State"
      * OLEDragDrop
      * OLEDragDrop event
               EVENT, 1555, @AnimationOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
           
      * Alignments
           
      * AlignmentConstants
           CLASS @AlignmentConstants
               CLSID, 603C7E7C-87C2-11D1-8BE3-0000F8754DA1
               NAME, "AlignmentConstants"
      * "long cc2AlignmentLeft"
               ENUMERATOR, @cc2AlignmentLeft, 0
      * "long cc2AlignmentRight"
               ENUMERATOR, @cc2AlignmentRight, 1
           
      * UpDown Control
           
      * IUpDown
           CLASS @IUpDown
               CLSID, 603C7E7E-87C2-11D1-8BE3-0000F8754DA1
               NAME, "IUpDown"
      * Value
      * Get/Set the current position in the scroll range
               PROPERTY-PUT, 0, @Value,
                   "long (Property Value)", TYPE 3
      * Value
      * Get/Set the current position in the scroll range
               PROPERTY-GET, 0, @Value
                       RETURNING "long", TYPE 3
      * Acceleration
      * Get/Set the rate at which the value (position) changes
               PROPERTY-PUT, 1, @Acceleration,
                   "short (Property Value)", TYPE 2
      * Acceleration
      * Get/Set the rate at which the value (position) changes
               PROPERTY-GET, 1, @Acceleration
                       RETURNING "short", TYPE 2
      * Alignment
      * Get/Set the alignment of the UpDown control with its buddy control
               PROPERTY-PUT, 2, @Alignment,
                   "AlignmentConstants (Property Value)", TYPE 3
      * Alignment
      * Get/Set the alignment of the UpDown control with its buddy control
               PROPERTY-GET, 2, @Alignment
                       RETURNING "AlignmentConstants", TYPE 3
      * AutoBuddy
      * Get/Set the auto-buddy flag, to automatically select the buddy control
               PROPERTY-PUT, 3, @AutoBuddy,
                   "boolean (Property Value)", TYPE 11
      * AutoBuddy
      * Get/Set the auto-buddy flag, to automatically select the buddy control
               PROPERTY-GET, 3, @AutoBuddy
                       RETURNING "boolean", TYPE 11
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-PUT, 4, @BuddyControl,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-PUTREF, 4, @BuddyControl,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-GET, 4, @BuddyControl
                       RETURNING "VARIANT", TYPE 12
      * Increment
      * Get/Set the amount by which the position changes on each click
               PROPERTY-PUT, 5, @Increment,
                   "long (Property Value)", TYPE 3
      * Increment
      * Get/Set the amount by which the position changes on each click
               PROPERTY-GET, 5, @Increment
                       RETURNING "long", TYPE 3
      * Max
      * Get/Set the upper bound of the scroll range
               PROPERTY-PUT, 6, @Max,
                   "long (Property Value)", TYPE 3
      * Max
      * Get/Set the upper bound of the scroll range
               PROPERTY-GET, 6, @Max
                       RETURNING "long", TYPE 3
      * Min
      * Get/Set the lower bound of the scroll range
               PROPERTY-PUT, 7, @Min,
                   "long (Property Value)", TYPE 3
      * Min
      * Get/Set the lower bound of the scroll range
               PROPERTY-GET, 7, @Min
                       RETURNING "long", TYPE 3
      * Orientation
      * Get/Set the vertical/horizontal orientation of the control
               PROPERTY-PUT, 8, @Orientation,
                   "OrientationConstants (Property Value)", TYPE 3
      * Orientation
      * Get/Set the vertical/horizontal orientation of the control
               PROPERTY-GET, 8, @Orientation
                       RETURNING "OrientationConstants", TYPE 3
      * SyncBuddy
      * Get/Set the flag to have the buddy control kept in sync
               PROPERTY-PUT, 9, @SyncBuddy,
                   "boolean (Property Value)", TYPE 11
      * SyncBuddy
      * Get/Set the flag to have the buddy control kept in sync
               PROPERTY-GET, 9, @SyncBuddy
                       RETURNING "boolean", TYPE 11
      * Wrap
      * Get/Set whether the value (position) will wrap from max to min (or min 
      * to max)
               PROPERTY-PUT, 10, @Wrap,
                   "boolean (Property Value)", TYPE 11
      * Wrap
      * Get/Set whether the value (position) will wrap from max to min (or min 
      * to max)
               PROPERTY-GET, 10, @Wrap
                       RETURNING "boolean", TYPE 11
      * BuddyProperty
      * Get/Set which property to use to sync with Buddy Control
               PROPERTY-PUT, 11, @BuddyProperty,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyProperty
      * Get/Set which property to use to sync with Buddy Control
               PROPERTY-GET, 11, @BuddyProperty
                       RETURNING "VARIANT", TYPE 12
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
           
      * Event interface for UpDown control
           
      * DUpDownEvents
           CLASS @DUpDownEvents
               CLSID, 603C7E7F-87C2-11D1-8BE3-0000F8754DA1
               NAME, "DUpDownEvents"
      * Change
      * The current position has changed
               METHOD, 1, @Change
      * DownClick
      * The down button on the UpDown control has been clicked
               METHOD, 2, @DownClick
      * UpClick
      * The up button on the UpDown control has been clicked
               METHOD, 3, @UpClick
      * MouseDown
      * A mouse button was pressed over the UpDown control
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseMove
      * The mouse has moved over the UpDown control
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseUp
      * A mouse button was released from the UpDown control
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * OLEStartDrag
      * OLEStartDrag event
               METHOD, 1550, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * OLEGiveFeedback event
               METHOD, 1551, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * OLESetData event
               METHOD, 1552, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * OLECompleteDrag event
               METHOD, 1553, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * OLEDragOver event
               METHOD, 1554, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * OLEDragDrop event
               METHOD, 1555, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388
           
      * UpDown Control
           
      * UpDown
           CLASS @UpDown
               CLSID, 603C7E80-87C2-11D1-8BE3-0000F8754DA1
               NAME, "UpDown"
               DEFAULT-INTERFACE, "IUpDown"
               DEFAULT-SOURCE, "DUpDownEvents"
      * Value
      * Get/Set the current position in the scroll range
               PROPERTY-PUT, 0, @Value,
                   "long (Property Value)", TYPE 3
      * Value
      * Get/Set the current position in the scroll range
               PROPERTY-GET, 0, @Value
                       RETURNING "long", TYPE 3
      * Acceleration
      * Get/Set the rate at which the value (position) changes
               PROPERTY-PUT, 1, @Acceleration,
                   "short (Property Value)", TYPE 2
      * Acceleration
      * Get/Set the rate at which the value (position) changes
               PROPERTY-GET, 1, @Acceleration
                       RETURNING "short", TYPE 2
      * Alignment
      * Get/Set the alignment of the UpDown control with its buddy control
               PROPERTY-PUT, 2, @Alignment,
                   "AlignmentConstants (Property Value)", TYPE 3
      * Alignment
      * Get/Set the alignment of the UpDown control with its buddy control
               PROPERTY-GET, 2, @Alignment
                       RETURNING "AlignmentConstants", TYPE 3
      * AutoBuddy
      * Get/Set the auto-buddy flag, to automatically select the buddy control
               PROPERTY-PUT, 3, @AutoBuddy,
                   "boolean (Property Value)", TYPE 11
      * AutoBuddy
      * Get/Set the auto-buddy flag, to automatically select the buddy control
               PROPERTY-GET, 3, @AutoBuddy
                       RETURNING "boolean", TYPE 11
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-PUT, 4, @BuddyControl,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-PUTREF, 4, @BuddyControl,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyControl
      * Get/Set the control for use as a buddy control
               PROPERTY-GET, 4, @BuddyControl
                       RETURNING "VARIANT", TYPE 12
      * Increment
      * Get/Set the amount by which the position changes on each click
               PROPERTY-PUT, 5, @Increment,
                   "long (Property Value)", TYPE 3
      * Increment
      * Get/Set the amount by which the position changes on each click
               PROPERTY-GET, 5, @Increment
                       RETURNING "long", TYPE 3
      * Max
      * Get/Set the upper bound of the scroll range
               PROPERTY-PUT, 6, @Max,
                   "long (Property Value)", TYPE 3
      * Max
      * Get/Set the upper bound of the scroll range
               PROPERTY-GET, 6, @Max
                       RETURNING "long", TYPE 3
      * Min
      * Get/Set the lower bound of the scroll range
               PROPERTY-PUT, 7, @Min,
                   "long (Property Value)", TYPE 3
      * Min
      * Get/Set the lower bound of the scroll range
               PROPERTY-GET, 7, @Min
                       RETURNING "long", TYPE 3
      * Orientation
      * Get/Set the vertical/horizontal orientation of the control
               PROPERTY-PUT, 8, @Orientation,
                   "OrientationConstants (Property Value)", TYPE 3
      * Orientation
      * Get/Set the vertical/horizontal orientation of the control
               PROPERTY-GET, 8, @Orientation
                       RETURNING "OrientationConstants", TYPE 3
      * SyncBuddy
      * Get/Set the flag to have the buddy control kept in sync
               PROPERTY-PUT, 9, @SyncBuddy,
                   "boolean (Property Value)", TYPE 11
      * SyncBuddy
      * Get/Set the flag to have the buddy control kept in sync
               PROPERTY-GET, 9, @SyncBuddy
                       RETURNING "boolean", TYPE 11
      * Wrap
      * Get/Set whether the value (position) will wrap from max to min (or min 
      * to max)
               PROPERTY-PUT, 10, @Wrap,
                   "boolean (Property Value)", TYPE 11
      * Wrap
      * Get/Set whether the value (position) will wrap from max to min (or min 
      * to max)
               PROPERTY-GET, 10, @Wrap
                       RETURNING "boolean", TYPE 11
      * BuddyProperty
      * Get/Set which property to use to sync with Buddy Control
               PROPERTY-PUT, 11, @BuddyProperty,
                   "VARIANT (Property Value)", TYPE 12
      * BuddyProperty
      * Get/Set which property to use to sync with Buddy Control
               PROPERTY-GET, 11, @BuddyProperty
                       RETURNING "VARIANT", TYPE 12
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Change
      * The current position has changed
               EVENT, 1, @UpDownChange
      *            No Parameters
      * DownClick
      * The down button on the UpDown control has been clicked
               EVENT, 2, @UpDownDownClick
      *            No Parameters
      * UpClick
      * The up button on the UpDown control has been clicked
               EVENT, 3, @UpDownUpClick
      *            No Parameters
      * MouseDown
      * A mouse button was pressed over the UpDown control
               EVENT, -605, @UpDownMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseMove
      * The mouse has moved over the UpDown control
               EVENT, -606, @UpDownMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseUp
      * A mouse button was released from the UpDown control
               EVENT, -607, @UpDownMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * OLEStartDrag
      * OLEStartDrag event
               EVENT, 1550, @UpDownOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * OLEGiveFeedback event
               EVENT, 1551, @UpDownOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * OLESetData event
               EVENT, 1552, @UpDownOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * OLECompleteDrag event
               EVENT, 1553, @UpDownOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * OLEDragOver event
               EVENT, 1554, @UpDownOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
      *                "short* State"
      * OLEDragDrop
      * OLEDragDrop event
               EVENT, 1555, @UpDownOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
           
      * Day Constants
           
      * DayConstants
           CLASS @DayConstants
               CLSID, 232E4566-87C3-11D1-8BE3-0000F8754DA1
               NAME, "DayConstants"
      * "long mvwSunday"
               ENUMERATOR, @mvwSunday, 1
      * "long mvwMonday"
               ENUMERATOR, @mvwMonday, 2
      * "long mvwTuesday"
               ENUMERATOR, @mvwTuesday, 3
      * "long mvwWednesday"
               ENUMERATOR, @mvwWednesday, 4
      * "long mvwThursday"
               ENUMERATOR, @mvwThursday, 5
      * "long mvwFriday"
               ENUMERATOR, @mvwFriday, 6
      * "long mvwSaturday"
               ENUMERATOR, @mvwSaturday, 7
           
      * Month Constants
           
      * MonthConstants
           CLASS @MonthConstants
               CLSID, 232E4567-87C3-11D1-8BE3-0000F8754DA1
               NAME, "MonthConstants"
      * "long mvwJanuary"
               ENUMERATOR, @mvwJanuary, 1
      * "long mvwFebruary"
               ENUMERATOR, @mvwFebruary, 2
      * "long mvwMarch"
               ENUMERATOR, @mvwMarch, 3
      * "long mvwApril"
               ENUMERATOR, @mvwApril, 4
      * "long mvwMay"
               ENUMERATOR, @mvwMay, 5
      * "long mvwJune"
               ENUMERATOR, @mvwJune, 6
      * "long mvwJuly"
               ENUMERATOR, @mvwJuly, 7
      * "long mvwAugust"
               ENUMERATOR, @mvwAugust, 8
      * "long mvwSeptember"
               ENUMERATOR, @mvwSeptember, 9
      * "long mvwOctober"
               ENUMERATOR, @mvwOctober, 10
      * "long mvwNovember"
               ENUMERATOR, @mvwNovember, 11
      * "long mvwDecember"
               ENUMERATOR, @mvwDecember, 12
           
      * HitTest Constants
           
      * MonthViewHitTestAreas
           CLASS @MonthViewHitTestAreas
               CLSID, 232E4568-87C3-11D1-8BE3-0000F8754DA1
               NAME, "MonthViewHitTestAreas"
      * "long mvwCalendarBack"
               ENUMERATOR, @mvwCalendarBack, 0
      * "long mvwCalendarDate"
               ENUMERATOR, @mvwCalendarDate, 1
      * "long mvwCalendarDateNext"
               ENUMERATOR, @mvwCalendarDateNext, 2
      * "long mvwCalendarDatePrev"
               ENUMERATOR, @mvwCalendarDatePrev, 3
      * "long mvwCalendarDay"
               ENUMERATOR, @mvwCalendarDay, 4
      * "long mvwCalendarWeekNum"
               ENUMERATOR, @mvwCalendarWeekNum, 5
      * "long mvwNoWhere"
               ENUMERATOR, @mvwNoWhere, 6
      * "long mvwTitleBack"
               ENUMERATOR, @mvwTitleBack, 7
      * "long mvwTitleBtnNext"
               ENUMERATOR, @mvwTitleBtnNext, 8
      * "long mvwTitleBtnPrev"
               ENUMERATOR, @mvwTitleBtnPrev, 9
      * "long mvwTitleMonth"
               ENUMERATOR, @mvwTitleMonth, 10
      * "long mvwTitleYear"
               ENUMERATOR, @mvwTitleYear, 11
      * "long mvwTodayLink"
               ENUMERATOR, @mvwTodayLink, 12
           
      * Microsoft MonthView Control
           
      * IMonthView
           CLASS @IMonthView
               CLSID, 232E4565-87C3-11D1-8BE3-0000F8754DA1
               NAME, "IMonthView"
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-GET, -520, @Appearance
                       RETURNING "AppearanceConstants", TYPE 3
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-PUT, -520, @Appearance,
                   "AppearanceConstants (Property Value)", TYPE 3
      * BackColor
      * Returns/sets the background color used to display text and graphics in 
      * an object.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns/sets the background color used to display text and graphics in 
      * an object.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-GET, -504, @BorderStyle
                       RETURNING "BorderStyleConstants", TYPE 3
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-PUT, -504, @BorderStyle,
                   "BorderStyleConstants (Property Value)", TYPE 3
      * Day
      * Returns/sets the day number [1-31] for the currently selected date.
               PROPERTY-GET, 1, @Day
                       RETURNING "short", TYPE 2
      * Day
      * Returns/sets the day number [1-31] for the currently selected date.
               PROPERTY-PUT, 1, @Day,
                   "short (Property Value)", TYPE 2
      * DayBold
      * An array of boolean values, 1 for each Visible Day, indicating whether 
      * the day is displayed using a bold font.  Indexed by date.
               PROPERTY-GET, 2, @DayBold,
                   "DATE" @dateIndex, TYPE 7
                       RETURNING "boolean", TYPE 11
      * DayBold
      * An array of boolean values, 1 for each Visible Day, indicating whether 
      * the day is displayed using a bold font.  Indexed by date.
               PROPERTY-PUT, 2, @DayBold,
                   "DATE" @dateIndex, TYPE 7,
                   "boolean (Property Value)", TYPE 11
      * DayOfWeek
      * Returns the day of the week [0-6] for the currently selected date.
               PROPERTY-GET, 3, @DayOfWeek
                       RETURNING "DayConstants", TYPE 3
      * DayOfWeek
      * Returns the day of the week [0-6] for the currently selected date.
               PROPERTY-PUT, 3, @DayOfWeek,
                   "DayConstants (Property Value)", TYPE 3
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUT, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * ForeColor
      * Returns/sets the foreground color used to display text and graphics in 
      * an object.
               PROPERTY-GET, -513, @ForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColor
      * Returns/sets the foreground color used to display text and graphics in 
      * an object.
               PROPERTY-PUT, -513, @ForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 4, @MaxDate
                       RETURNING "DATE", TYPE 7
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 4, @MaxDate,
                   "DATE (Property Value)", TYPE 7
      * MaxSelCount
      * Returns/sets the limit on the number of dates that a user can 
      * multi-select.
               PROPERTY-GET, 5, @MaxSelCount
                       RETURNING "short", TYPE 2
      * MaxSelCount
      * Returns/sets the limit on the number of dates that a user can 
      * multi-select.
               PROPERTY-PUT, 5, @MaxSelCount,
                   "short (Property Value)", TYPE 2
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 6, @MinDate
                       RETURNING "DATE", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 6, @MinDate,
                   "DATE (Property Value)", TYPE 7
      * Month
      * Returns/sets the month number [1-12] for the currently selected date.
               PROPERTY-GET, 7, @Month
                       RETURNING "MonthConstants", TYPE 3
      * Month
      * Returns/sets the month number [1-12] for the currently selected date.
               PROPERTY-PUT, 7, @Month,
                   "MonthConstants (Property Value)", TYPE 3
      * MonthBackColor
      * Returns/sets the background color used to display the month portion of 
      * the MonthView.
               PROPERTY-GET, 8, @MonthBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * MonthBackColor
      * Returns/sets the background color used to display the month portion of 
      * the MonthView.
               PROPERTY-PUT, 8, @MonthBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * MonthColumns
      * Returns/sets the number of months displayed horizontally across the 
      * control.
               PROPERTY-GET, 9, @MonthColumns
                       RETURNING "short", TYPE 2
      * MonthColumns
      * Returns/sets the number of months displayed horizontally across the 
      * control.
               PROPERTY-PUT, 9, @MonthColumns,
                   "short (Property Value)", TYPE 2
      * MonthRows
      * Returns/sets the number of months displayed vertically in the control.
               PROPERTY-GET, 10, @MonthRows
                       RETURNING "short", TYPE 2
      * MonthRows
      * Returns/sets the number of months displayed vertically in the control.
               PROPERTY-PUT, 10, @MonthRows,
                   "short (Property Value)", TYPE 2
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 11, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 11, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 11, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 12, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 12, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * MultiSelect
      * Returns/sets a value that determines whether the user can select 
      * multiple dates.
               PROPERTY-GET, 13, @MultiSelect
                       RETURNING "boolean", TYPE 11
      * MultiSelect
      * Returns/sets a value that determines whether the user can select 
      * multiple dates.
               PROPERTY-PUT, 13, @MultiSelect,
                   "boolean (Property Value)", TYPE 11
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * ScrollRate
      * Returns/sets a value that determines the number of months that the 
      * control moves when the user clicks a scroll button.
               PROPERTY-GET, 14, @ScrollRate
                       RETURNING "short", TYPE 2
      * ScrollRate
      * Returns/sets a value that determines the number of months that the 
      * control moves when the user clicks a scroll button.
               PROPERTY-PUT, 14, @ScrollRate,
                   "short (Property Value)", TYPE 2
      * SelEnd
      * Returns/sets the end date for the current selection range.
               PROPERTY-GET, 15, @SelEnd
                       RETURNING "DATE", TYPE 7
      * SelEnd
      * Returns/sets the end date for the current selection range.
               PROPERTY-PUT, 15, @SelEnd,
                   "DATE (Property Value)", TYPE 7
      * SelStart
      * Returns/sets the start date for the current selection range.
               PROPERTY-GET, 16, @SelStart
                       RETURNING "DATE", TYPE 7
      * SelStart
      * Returns/sets the start date for the current selection range.
               PROPERTY-PUT, 16, @SelStart,
                   "DATE (Property Value)", TYPE 7
      * ShowToday
      * Returns/sets a value that determines whether the control displays the 
      * 'Today xx/xx/xx' literal at the bottom of the MonthView.
               PROPERTY-GET, 17, @ShowToday
                       RETURNING "boolean", TYPE 11
      * ShowToday
      * Returns/sets a value that determines whether the control displays the 
      * 'Today xx/xx/xx' literal at the bottom of the MonthView.
               PROPERTY-PUT, 17, @ShowToday,
                   "boolean (Property Value)", TYPE 11
      * ShowWeekNumbers
      * Returns/sets a value that determines whether the control displays week 
      * numbers to the left of each row of days.
               PROPERTY-GET, 18, @ShowWeekNumbers
                       RETURNING "boolean", TYPE 11
      * ShowWeekNumbers
      * Returns/sets a value that determines whether the control displays week 
      * numbers to the left of each row of days.
               PROPERTY-PUT, 18, @ShowWeekNumbers,
                   "boolean (Property Value)", TYPE 11
      * StartOfWeek
      * Returns/sets a value that determines the day of the week [Mon-Sun] 
      * displayed in the leftmost column of days.
               PROPERTY-GET, 19, @StartOfWeek
                       RETURNING "DayConstants", TYPE 3
      * StartOfWeek
      * Returns/sets a value that determines the day of the week [Mon-Sun] 
      * displayed in the leftmost column of days.
               PROPERTY-PUT, 19, @StartOfWeek,
                   "DayConstants (Property Value)", TYPE 3
      * TitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the MonthView.
               PROPERTY-GET, 20, @TitleBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the MonthView.
               PROPERTY-PUT, 20, @TitleBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * TitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the MonthView.
               PROPERTY-GET, 21, @TitleForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the MonthView.
               PROPERTY-PUT, 21, @TitleForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * TrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the MonthView that are from previous and following 
      * months.
               PROPERTY-GET, 22, @TrailingForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the MonthView that are from previous and following 
      * months.
               PROPERTY-PUT, 22, @TrailingForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * Value
      * Returns/sets the currently selected date.
               PROPERTY-GET, 23, @Value
                       RETURNING "DATE", TYPE 7
      * Value
      * Returns/sets the currently selected date.
               PROPERTY-PUT, 23, @Value,
                   "DATE (Property Value)", TYPE 7
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "DATE", TYPE 7
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "DATE (Property Value)", TYPE 7
      * VisibleDays
      * An array of dates, 1 for each day currently displayed. Indexed by a 
      * number from 1 to number of days currently displayed.
               PROPERTY-GET, 24, @VisibleDays,
                   "short" @sIndex, TYPE 2
                       RETURNING "DATE", TYPE 7
      * VisibleDays
      * An array of dates, 1 for each day currently displayed. Indexed by a 
      * number from 1 to number of days currently displayed.
               PROPERTY-PUT, 24, @VisibleDays,
                   "short" @sIndex, TYPE 2,
                   "DATE (Property Value)", TYPE 7
      * Week
      * Returns/sets the week number [1-52] for the currently selected date.
               PROPERTY-GET, 25, @Week
                       RETURNING "short", TYPE 2
      * Week
      * Returns/sets the week number [1-52] for the currently selected date.
               PROPERTY-PUT, 25, @Week,
                   "short (Property Value)", TYPE 2
      * Year
      * Returns/sets the year for the currently selected date.
               PROPERTY-GET, 26, @Year
                       RETURNING "short", TYPE 2
      * Year
      * Returns/sets the year for the currently selected date.
               PROPERTY-PUT, 26, @Year,
                   "short (Property Value)", TYPE 2
      * AboutBox
               METHOD, -552, @AboutBox
      * ComputeControlSize
      * A method that returns the width and height of a MonthView control for a 
      * given number of rows and columns.
               METHOD, 28, @ComputeControlSize,
                   "short" @Rows, TYPE 2,
                   "short" @Columns, TYPE 2,
                   "single*" @Width, TYPE 16388,
                   "single*" @Height, TYPE 16388
      * HitTest
      * A method that returns a value which indicates the MonthView element 
      * located at the specified x,y coordinates.
               METHOD, 27, @HitTest,
                   "int" @x, TYPE 22,
                   "int" @y, TYPE 22,
                   "DATE*" @Date, TYPE 16391
                       RETURNING "MonthViewHitTestAreas", TYPE 3
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
           
      * DMonthViewEvents
           CLASS @DMonthViewEvents
               CLSID, 232E4569-87C3-11D1-8BE3-0000F8754DA1
               NAME, "DMonthViewEvents"
      * DateClick
      * Occurs when the user presses and then releases a mouse button over a 
      * valid date.
               METHOD, 1, @DateClick,
                   "DATE" @DateClicked, TYPE 7
      * DateDblClick
      * Occurs when the user presses and then releases a mouse button and then 
      * presses and releases it again over a valid date.
               METHOD, 2, @DateDblClick,
                   "DATE" @DateDblClicked, TYPE 7
      * GetDayBold
      * Occurs when the control is about to display a new range of dates and 
      * needs to know which dates should be displayed with a bold font.
               METHOD, 3, @GetDayBold,
                   "DATE" @StartDate, TYPE 7,
                   "short" @Count, TYPE 2,
                   "SAFEARRAY(boolean)*" @State, TYPE 16395
      * SelChange
      * Occurs when the user selects a new date or range of dates.
               METHOD, 4, @SelChange,
                   "DATE" @StartDate, TYPE 7,
                   "DATE" @EndDate, TYPE 7,
                   "boolean*" @Cancel, TYPE 16395
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
      * object.
               METHOD, -600, @Click
      * DblClick
      * Occurs when you press and release a mouse button and then press and 
      * release it again over an object.
               METHOD, -601, @DblClick
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               METHOD, -602, @KeyDown,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               METHOD, -604, @KeyUp,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               METHOD, -603, @KeyPress,
                   "short*" @KeyAscii, TYPE 16386
      * MouseDown
      * Occurs when the user presses the mouse button while the mousepointer is 
      * over an object.
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseMove
      * Occurs when the user moves the mousepointer over an object.
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseUp
      * Occurs when the user releases the mouse button while the mousepointer is 
      * over an object.
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * OLEStartDrag
      * OLEStartDrag event
               METHOD, 1550, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * OLEGiveFeedback event
               METHOD, 1551, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * OLESetData event
               METHOD, 1552, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * OLECompleteDrag event
               METHOD, 1553, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * OLEDragOver event
               METHOD, 1554, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * OLEDragDrop event
               METHOD, 1555, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388
           
      * Microsoft MonthView Control
           
      * MonthView
           CLASS @MonthView
               CLSID, 232E456A-87C3-11D1-8BE3-0000F8754DA1
               NAME, "MonthView"
               DEFAULT-INTERFACE, "IMonthView"
               DEFAULT-SOURCE, "DMonthViewEvents"
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-GET, -520, @Appearance
                       RETURNING "AppearanceConstants", TYPE 3
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-PUT, -520, @Appearance,
                   "AppearanceConstants (Property Value)", TYPE 3
      * BackColor
      * Returns/sets the background color used to display text and graphics in 
      * an object.
               PROPERTY-GET, -501, @BackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * BackColor
      * Returns/sets the background color used to display text and graphics in 
      * an object.
               PROPERTY-PUT, -501, @BackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-GET, -504, @BorderStyle
                       RETURNING "BorderStyleConstants", TYPE 3
      * BorderStyle
      * Returns/sets the border style for an object.
               PROPERTY-PUT, -504, @BorderStyle,
                   "BorderStyleConstants (Property Value)", TYPE 3
      * Day
      * Returns/sets the day number [1-31] for the currently selected date.
               PROPERTY-GET, 1, @Day
                       RETURNING "short", TYPE 2
      * Day
      * Returns/sets the day number [1-31] for the currently selected date.
               PROPERTY-PUT, 1, @Day,
                   "short (Property Value)", TYPE 2
      * DayBold
      * An array of boolean values, 1 for each Visible Day, indicating whether 
      * the day is displayed using a bold font.  Indexed by date.
               PROPERTY-GET, 2, @DayBold,
                   "DATE" @dateIndex, TYPE 7
                       RETURNING "boolean", TYPE 11
      * DayBold
      * An array of boolean values, 1 for each Visible Day, indicating whether 
      * the day is displayed using a bold font.  Indexed by date.
               PROPERTY-PUT, 2, @DayBold,
                   "DATE" @dateIndex, TYPE 7,
                   "boolean (Property Value)", TYPE 11
      * DayOfWeek
      * Returns the day of the week [0-6] for the currently selected date.
               PROPERTY-GET, 3, @DayOfWeek
                       RETURNING "DayConstants", TYPE 3
      * DayOfWeek
      * Returns the day of the week [0-6] for the currently selected date.
               PROPERTY-PUT, 3, @DayOfWeek,
                   "DayConstants (Property Value)", TYPE 3
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUT, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * ForeColor
      * Returns/sets the foreground color used to display text and graphics in 
      * an object.
               PROPERTY-GET, -513, @ForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * ForeColor
      * Returns/sets the foreground color used to display text and graphics in 
      * an object.
               PROPERTY-PUT, -513, @ForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 4, @MaxDate
                       RETURNING "DATE", TYPE 7
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 4, @MaxDate,
                   "DATE (Property Value)", TYPE 7
      * MaxSelCount
      * Returns/sets the limit on the number of dates that a user can 
      * multi-select.
               PROPERTY-GET, 5, @MaxSelCount
                       RETURNING "short", TYPE 2
      * MaxSelCount
      * Returns/sets the limit on the number of dates that a user can 
      * multi-select.
               PROPERTY-PUT, 5, @MaxSelCount,
                   "short (Property Value)", TYPE 2
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 6, @MinDate
                       RETURNING "DATE", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 6, @MinDate,
                   "DATE (Property Value)", TYPE 7
      * Month
      * Returns/sets the month number [1-12] for the currently selected date.
               PROPERTY-GET, 7, @Month
                       RETURNING "MonthConstants", TYPE 3
      * Month
      * Returns/sets the month number [1-12] for the currently selected date.
               PROPERTY-PUT, 7, @Month,
                   "MonthConstants (Property Value)", TYPE 3
      * MonthBackColor
      * Returns/sets the background color used to display the month portion of 
      * the MonthView.
               PROPERTY-GET, 8, @MonthBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * MonthBackColor
      * Returns/sets the background color used to display the month portion of 
      * the MonthView.
               PROPERTY-PUT, 8, @MonthBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * MonthColumns
      * Returns/sets the number of months displayed horizontally across the 
      * control.
               PROPERTY-GET, 9, @MonthColumns
                       RETURNING "short", TYPE 2
      * MonthColumns
      * Returns/sets the number of months displayed horizontally across the 
      * control.
               PROPERTY-PUT, 9, @MonthColumns,
                   "short (Property Value)", TYPE 2
      * MonthRows
      * Returns/sets the number of months displayed vertically in the control.
               PROPERTY-GET, 10, @MonthRows
                       RETURNING "short", TYPE 2
      * MonthRows
      * Returns/sets the number of months displayed vertically in the control.
               PROPERTY-PUT, 10, @MonthRows,
                   "short (Property Value)", TYPE 2
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 11, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 11, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 11, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 12, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 12, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * MultiSelect
      * Returns/sets a value that determines whether the user can select 
      * multiple dates.
               PROPERTY-GET, 13, @MultiSelect
                       RETURNING "boolean", TYPE 11
      * MultiSelect
      * Returns/sets a value that determines whether the user can select 
      * multiple dates.
               PROPERTY-PUT, 13, @MultiSelect,
                   "boolean (Property Value)", TYPE 11
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * ScrollRate
      * Returns/sets a value that determines the number of months that the 
      * control moves when the user clicks a scroll button.
               PROPERTY-GET, 14, @ScrollRate
                       RETURNING "short", TYPE 2
      * ScrollRate
      * Returns/sets a value that determines the number of months that the 
      * control moves when the user clicks a scroll button.
               PROPERTY-PUT, 14, @ScrollRate,
                   "short (Property Value)", TYPE 2
      * SelEnd
      * Returns/sets the end date for the current selection range.
               PROPERTY-GET, 15, @SelEnd
                       RETURNING "DATE", TYPE 7
      * SelEnd
      * Returns/sets the end date for the current selection range.
               PROPERTY-PUT, 15, @SelEnd,
                   "DATE (Property Value)", TYPE 7
      * SelStart
      * Returns/sets the start date for the current selection range.
               PROPERTY-GET, 16, @SelStart
                       RETURNING "DATE", TYPE 7
      * SelStart
      * Returns/sets the start date for the current selection range.
               PROPERTY-PUT, 16, @SelStart,
                   "DATE (Property Value)", TYPE 7
      * ShowToday
      * Returns/sets a value that determines whether the control displays the 
      * 'Today xx/xx/xx' literal at the bottom of the MonthView.
               PROPERTY-GET, 17, @ShowToday
                       RETURNING "boolean", TYPE 11
      * ShowToday
      * Returns/sets a value that determines whether the control displays the 
      * 'Today xx/xx/xx' literal at the bottom of the MonthView.
               PROPERTY-PUT, 17, @ShowToday,
                   "boolean (Property Value)", TYPE 11
      * ShowWeekNumbers
      * Returns/sets a value that determines whether the control displays week 
      * numbers to the left of each row of days.
               PROPERTY-GET, 18, @ShowWeekNumbers
                       RETURNING "boolean", TYPE 11
      * ShowWeekNumbers
      * Returns/sets a value that determines whether the control displays week 
      * numbers to the left of each row of days.
               PROPERTY-PUT, 18, @ShowWeekNumbers,
                   "boolean (Property Value)", TYPE 11
      * StartOfWeek
      * Returns/sets a value that determines the day of the week [Mon-Sun] 
      * displayed in the leftmost column of days.
               PROPERTY-GET, 19, @StartOfWeek
                       RETURNING "DayConstants", TYPE 3
      * StartOfWeek
      * Returns/sets a value that determines the day of the week [Mon-Sun] 
      * displayed in the leftmost column of days.
               PROPERTY-PUT, 19, @StartOfWeek,
                   "DayConstants (Property Value)", TYPE 3
      * TitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the MonthView.
               PROPERTY-GET, 20, @TitleBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the MonthView.
               PROPERTY-PUT, 20, @TitleBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * TitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the MonthView.
               PROPERTY-GET, 21, @TitleForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the MonthView.
               PROPERTY-PUT, 21, @TitleForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * TrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the MonthView that are from previous and following 
      * months.
               PROPERTY-GET, 22, @TrailingForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * TrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the MonthView that are from previous and following 
      * months.
               PROPERTY-PUT, 22, @TrailingForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * Value
      * Returns/sets the currently selected date.
               PROPERTY-GET, 23, @Value
                       RETURNING "DATE", TYPE 7
      * Value
      * Returns/sets the currently selected date.
               PROPERTY-PUT, 23, @Value,
                   "DATE (Property Value)", TYPE 7
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "DATE", TYPE 7
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "DATE (Property Value)", TYPE 7
      * VisibleDays
      * An array of dates, 1 for each day currently displayed. Indexed by a 
      * number from 1 to number of days currently displayed.
               PROPERTY-GET, 24, @VisibleDays,
                   "short" @sIndex, TYPE 2
                       RETURNING "DATE", TYPE 7
      * VisibleDays
      * An array of dates, 1 for each day currently displayed. Indexed by a 
      * number from 1 to number of days currently displayed.
               PROPERTY-PUT, 24, @VisibleDays,
                   "short" @sIndex, TYPE 2,
                   "DATE (Property Value)", TYPE 7
      * Week
      * Returns/sets the week number [1-52] for the currently selected date.
               PROPERTY-GET, 25, @Week
                       RETURNING "short", TYPE 2
      * Week
      * Returns/sets the week number [1-52] for the currently selected date.
               PROPERTY-PUT, 25, @Week,
                   "short (Property Value)", TYPE 2
      * Year
      * Returns/sets the year for the currently selected date.
               PROPERTY-GET, 26, @Year
                       RETURNING "short", TYPE 2
      * Year
      * Returns/sets the year for the currently selected date.
               PROPERTY-PUT, 26, @Year,
                   "short (Property Value)", TYPE 2
      * AboutBox
               METHOD, -552, @AboutBox
      * ComputeControlSize
      * A method that returns the width and height of a MonthView control for a 
      * given number of rows and columns.
               METHOD, 28, @ComputeControlSize,
                   "short" @Rows, TYPE 2,
                   "short" @Columns, TYPE 2,
                   "single*" @Width, TYPE 16388,
                   "single*" @Height, TYPE 16388
      * HitTest
      * A method that returns a value which indicates the MonthView element 
      * located at the specified x,y coordinates.
               METHOD, 27, @HitTest,
                   "int" @x, TYPE 22,
                   "int" @y, TYPE 22,
                   "DATE*" @Date, TYPE 16391
                       RETURNING "MonthViewHitTestAreas", TYPE 3
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
      * DateClick
      * Occurs when the user presses and then releases a mouse button over a 
      * valid date.
               EVENT, 1, @MonthViewDateClick
      *            1 Parameter
      *                "DATE DateClicked"
      * DateDblClick
      * Occurs when the user presses and then releases a mouse button and then 
      * presses and releases it again over a valid date.
               EVENT, 2, @MonthViewDateDblClick
      *            1 Parameter
      *                "DATE DateDblClicked"
      * GetDayBold
      * Occurs when the control is about to display a new range of dates and 
      * needs to know which dates should be displayed with a bold font.
               EVENT, 3, @MonthViewGetDayBold
      *            3 Parameters
      *                "DATE StartDate"
      *                "short Count"
      *                "SAFEARRAY(boolean)* State"
      * SelChange
      * Occurs when the user selects a new date or range of dates.
               EVENT, 4, @MonthViewSelChange
      *            3 Parameters
      *                "DATE StartDate"
      *                "DATE EndDate"
      *                "boolean* Cancel"
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
      * object.
               EVENT, -600, @MonthViewClick
      *            No Parameters
      * DblClick
      * Occurs when you press and release a mouse button and then press and 
      * release it again over an object.
               EVENT, -601, @MonthViewDblClick
      *            No Parameters
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               EVENT, -602, @MonthViewKeyDown
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               EVENT, -604, @MonthViewKeyUp
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               EVENT, -603, @MonthViewKeyPress
      *            1 Parameter
      *                "short* KeyAscii"
      * MouseDown
      * Occurs when the user presses the mouse button while the mousepointer is 
      * over an object.
               EVENT, -605, @MonthViewMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseMove
      * Occurs when the user moves the mousepointer over an object.
               EVENT, -606, @MonthViewMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseUp
      * Occurs when the user releases the mouse button while the mousepointer is 
      * over an object.
               EVENT, -607, @MonthViewMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * OLEStartDrag
      * OLEStartDrag event
               EVENT, 1550, @MonthViewOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * OLEGiveFeedback event
               EVENT, 1551, @MonthViewOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * OLESetData event
               EVENT, 1552, @MonthViewOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * OLECompleteDrag event
               EVENT, 1553, @MonthViewOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * OLEDragOver event
               EVENT, 1554, @MonthViewOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
      *                "short* State"
      * OLEDragDrop
      * OLEDragDrop event
               EVENT, 1555, @MonthViewOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
           
      * Format Constants
           
      * FormatConstants
           CLASS @FormatConstants
               CLSID, 20DD1B9C-87C4-11D1-8BE3-0000F8754DA1
               NAME, "FormatConstants"
      * "long dtpLongDate"
               ENUMERATOR, @dtpLongDate, 0
      * "long dtpShortDate"
               ENUMERATOR, @dtpShortDate, 1
      * "long dtpTime"
               ENUMERATOR, @dtpTime, 2
      * "long dtpCustom"
               ENUMERATOR, @dtpCustom, 3
           
      * Microsoft Date and Time Picker Control
           
      * IDTPicker
           CLASS @IDTPicker
               CLSID, 20DD1B9B-87C4-11D1-8BE3-0000F8754DA1
               NAME, "IDTPicker"
      * Format
      * Determines whether dates and times are displayed using standard or 
      * custom formatting.
               PROPERTY-GET, 10, @Format
                       RETURNING "FormatConstants", TYPE 3
      * Format
      * Determines whether dates and times are displayed using standard or 
      * custom formatting.
               PROPERTY-PUT, 10, @Format,
                   "FormatConstants (Property Value)", TYPE 3
      * CalendarBackColor
      * Returns/sets the background color used to display the month portion of 
      * the dropdown calendar.
               PROPERTY-GET, 1, @CalendarBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarBackColor
      * Returns/sets the background color used to display the month portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 1, @CalendarBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarForeColor
      * Returns/sets the foreground color used to display text in the month 
      * portion of the dropdown calendar.
               PROPERTY-GET, 2, @CalendarForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarForeColor
      * Returns/sets the foreground color used to display text in the month 
      * portion of the dropdown calendar.
               PROPERTY-PUT, 2, @CalendarForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-GET, 3, @CalendarTitleBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 3, @CalendarTitleBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-GET, 4, @CalendarTitleForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 4, @CalendarTitleForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the dropdown calendar that are from previous and 
      * following months.
               PROPERTY-GET, 5, @CalendarTrailingForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the dropdown calendar that are from previous and 
      * following months.
               PROPERTY-PUT, 5, @CalendarTrailingForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CheckBox
      * Returns/sets whether the control displays a checkbox to the left of the 
      * date. When unchecked, no date is selected.
               PROPERTY-GET, 6, @CheckBox
                       RETURNING "boolean", TYPE 11
      * CheckBox
      * Returns/sets whether the control displays a checkbox to the left of the 
      * date. When unchecked, no date is selected.
               PROPERTY-PUT, 6, @CheckBox,
                   "boolean (Property Value)", TYPE 11
      * CustomFormat
      * Returns/sets the custom format string used to format the date and/or 
      * time displayed in the control.
               PROPERTY-GET, 7, @CustomFormat
                       RETURNING "BSTR", TYPE 8
      * CustomFormat
      * Returns/sets the custom format string used to format the date and/or 
      * time displayed in the control.
               PROPERTY-PUT, 7, @CustomFormat,
                   "BSTR (Property Value)", TYPE 8
      * Day
      * Returns/sets the day number [1-31] for the current date.
               PROPERTY-GET, 8, @Day
                       RETURNING "VARIANT", TYPE 12
      * Day
      * Returns/sets the day number [1-31] for the current date.
               PROPERTY-PUT, 8, @Day,
                   "VARIANT (Property Value)", TYPE 12
      * DayOfWeek
      * Returns the day of the week [0-6] for the current date.
               PROPERTY-GET, 9, @DayOfWeek
                       RETURNING "VARIANT", TYPE 12
      * DayOfWeek
      * Returns the day of the week [0-6] for the current date.
               PROPERTY-PUT, 9, @DayOfWeek,
                   "VARIANT (Property Value)", TYPE 12
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUT, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Hour
      * Returns/sets the hour number [0-23] for the current time.
               PROPERTY-GET, 11, @Hour
                       RETURNING "VARIANT", TYPE 12
      * Hour
      * Returns/sets the hour number [0-23] for the current time.
               PROPERTY-PUT, 11, @Hour,
                   "VARIANT (Property Value)", TYPE 12
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 12, @MaxDate
                       RETURNING "DATE", TYPE 7
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 12, @MaxDate,
                   "DATE (Property Value)", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 13, @MinDate
                       RETURNING "DATE", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 13, @MinDate,
                   "DATE (Property Value)", TYPE 7
      * Minute
      * Returns/sets the minute number [0-59] for the current time.
               PROPERTY-GET, 14, @Minute
                       RETURNING "VARIANT", TYPE 12
      * Minute
      * Returns/sets the minute number [0-59] for the current time.
               PROPERTY-PUT, 14, @Minute,
                   "VARIANT (Property Value)", TYPE 12
      * Month
      * Returns/sets the month number [1-12] for the current date.
               PROPERTY-GET, 15, @Month
                       RETURNING "VARIANT", TYPE 12
      * Month
      * Returns/sets the month number [1-12] for the current date.
               PROPERTY-PUT, 15, @Month,
                   "VARIANT (Property Value)", TYPE 12
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 16, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 16, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 16, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 17, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 17, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * Second
      * Returns/sets the second number [0-59] for the current time.
               PROPERTY-GET, 18, @Second
                       RETURNING "VARIANT", TYPE 12
      * Second
      * Returns/sets the second number [0-59] for the current time.
               PROPERTY-PUT, 18, @Second,
                   "VARIANT (Property Value)", TYPE 12
      * UpDown
      * Returns/sets a value that determines whether an updown (spin) button is 
      * used to modify dates instead of a dropdown calendar.
               PROPERTY-GET, 19, @UpDown
                       RETURNING "boolean", TYPE 11
      * UpDown
      * Returns/sets a value that determines whether an updown (spin) button is 
      * used to modify dates instead of a dropdown calendar.
               PROPERTY-PUT, 19, @UpDown,
                   "boolean (Property Value)", TYPE 11
      * Value
      * Returns/sets the current date.
               PROPERTY-GET, 20, @Value
                       RETURNING "VARIANT", TYPE 12
      * Value
      * Returns/sets the current date.
               PROPERTY-PUT, 20, @Value,
                   "VARIANT (Property Value)", TYPE 12
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "VARIANT", TYPE 12
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "VARIANT (Property Value)", TYPE 12
      * Year
      * Returns/sets the year for the current date.
               PROPERTY-GET, 21, @Year
                       RETURNING "VARIANT", TYPE 12
      * Year
      * Returns/sets the year for the current date.
               PROPERTY-PUT, 21, @Year,
                   "VARIANT (Property Value)", TYPE 12
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
           
      * DDTPickerEvents
           CLASS @DDTPickerEvents
               CLSID, 20DD1B9D-87C4-11D1-8BE3-0000F8754DA1
               NAME, "DDTPickerEvents"
      * CallbackKeyDown
      * Occurs when the user presses a key when the insertion point is over a 
      * callback field.
               METHOD, 1, @CallbackKeyDown,
                   "short" @KeyCode, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "BSTR" @CallbackField, TYPE 8,
                   "DATE*" @CallbackDate, TYPE 16391
      * Change
      * Occurs when the user selects a new date or changes a date in the edit 
      * portion of the control.
               METHOD, 2, @Change
      * CloseUp
      * Occurs when the user is finished selecting a date from the dropdown 
      * calendar.
               METHOD, 3, @CloseUp
      * DropDown
      * Occurs when the dropdown calendar is about to drop down.
               METHOD, 4, @DropDown
      * Format
      * Occurs when the control is requesting text to be displayed in a callback 
      * field.
               METHOD, 5, @Format,
                   "BSTR" @CallbackField, TYPE 8,
                   "BSTR*" @FormattedString, TYPE 16392
      * FormatSize
      * Occurs when the control needs to know the maximum allowable size of a 
      * callback field.
               METHOD, 6, @FormatSize,
                   "BSTR" @CallbackField, TYPE 8,
                   "short*" @Size, TYPE 16386
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
      * object.
               METHOD, -600, @Click
      * DblClick
      * Occurs when you press and release a mouse button and then press and 
      * release it again over an object.
               METHOD, -601, @DblClick
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               METHOD, -602, @KeyDown,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               METHOD, -604, @KeyUp,
                   "short*" @KeyCode, TYPE 16386,
                   "short" @Shift, TYPE 2
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               METHOD, -603, @KeyPress,
                   "short*" @KeyAscii, TYPE 16386
      * MouseDown
      * Occurs when the user presses the mouse button while the mousepointer is 
      * over an object.
               METHOD, -605, @MouseDown,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseMove
      * Occurs when the user moves the mousepointer over an object.
               METHOD, -606, @MouseMove,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * MouseUp
      * Occurs when the user releases the mouse button while the mousepointer is 
      * over an object.
               METHOD, -607, @MouseUp,
                   "short" @Button, TYPE 2,
                   "short" @Shift, TYPE 2,
                   "OLE_XPOS_PIXELS" @x, TYPE 3,
                   "OLE_YPOS_PIXELS" @y, TYPE 3
      * OLEStartDrag
      * OLEStartDrag event
               METHOD, 1550, @OLEStartDrag,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @AllowedEffects, TYPE 16387
      * OLEGiveFeedback
      * OLEGiveFeedback event
               METHOD, 1551, @OLEGiveFeedback,
                   "long*" @Effect, TYPE 16387,
                   "boolean*" @DefaultCursors, TYPE 16395
      * OLESetData
      * OLESetData event
               METHOD, 1552, @OLESetData,
                   "DataObject**" @Data, TYPE 16393,
                   "short*" @DataFormat, TYPE 16386
      * OLECompleteDrag
      * OLECompleteDrag event
               METHOD, 1553, @OLECompleteDrag,
                   "long*" @Effect, TYPE 16387
      * OLEDragOver
      * OLEDragOver event
               METHOD, 1554, @OLEDragOver,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388,
                   "short*" @State, TYPE 16386
      * OLEDragDrop
      * OLEDragDrop event
               METHOD, 1555, @OLEDragDrop,
                   "DataObject**" @Data, TYPE 16393,
                   "long*" @Effect, TYPE 16387,
                   "short*" @Button, TYPE 16386,
                   "short*" @Shift, TYPE 16386,
                   "single*" @x, TYPE 16388,
                   "single*" @y, TYPE 16388
           
      * Microsoft Date and Time Picker Control
           
      * DTPicker
           CLASS @DTPicker
               CLSID, 20DD1B9E-87C4-11D1-8BE3-0000F8754DA1
               NAME, "DTPicker"
               DEFAULT-INTERFACE, "IDTPicker"
               DEFAULT-SOURCE, "DDTPickerEvents"
      * Format
      * Determines whether dates and times are displayed using standard or 
      * custom formatting.
               PROPERTY-GET, 10, @Format
                       RETURNING "FormatConstants", TYPE 3
      * Format
      * Determines whether dates and times are displayed using standard or 
      * custom formatting.
               PROPERTY-PUT, 10, @Format,
                   "FormatConstants (Property Value)", TYPE 3
      * CalendarBackColor
      * Returns/sets the background color used to display the month portion of 
      * the dropdown calendar.
               PROPERTY-GET, 1, @CalendarBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarBackColor
      * Returns/sets the background color used to display the month portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 1, @CalendarBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarForeColor
      * Returns/sets the foreground color used to display text in the month 
      * portion of the dropdown calendar.
               PROPERTY-GET, 2, @CalendarForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarForeColor
      * Returns/sets the foreground color used to display text in the month 
      * portion of the dropdown calendar.
               PROPERTY-PUT, 2, @CalendarForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-GET, 3, @CalendarTitleBackColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTitleBackColor
      * Returns/sets the background color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 3, @CalendarTitleBackColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-GET, 4, @CalendarTitleForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTitleForeColor
      * Returns/sets the foreground color used to display the title portion of 
      * the dropdown calendar.
               PROPERTY-PUT, 4, @CalendarTitleForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CalendarTrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the dropdown calendar that are from previous and 
      * following months.
               PROPERTY-GET, 5, @CalendarTrailingForeColor
                       RETURNING "OLE_COLOR", TYPE 19
      * CalendarTrailingForeColor
      * Returns/sets the foreground color used to display the days at the 
      * beginning and end of the dropdown calendar that are from previous and 
      * following months.
               PROPERTY-PUT, 5, @CalendarTrailingForeColor,
                   "OLE_COLOR (Property Value)", TYPE 19
      * CheckBox
      * Returns/sets whether the control displays a checkbox to the left of the 
      * date. When unchecked, no date is selected.
               PROPERTY-GET, 6, @CheckBox
                       RETURNING "boolean", TYPE 11
      * CheckBox
      * Returns/sets whether the control displays a checkbox to the left of the 
      * date. When unchecked, no date is selected.
               PROPERTY-PUT, 6, @CheckBox,
                   "boolean (Property Value)", TYPE 11
      * CustomFormat
      * Returns/sets the custom format string used to format the date and/or 
      * time displayed in the control.
               PROPERTY-GET, 7, @CustomFormat
                       RETURNING "BSTR", TYPE 8
      * CustomFormat
      * Returns/sets the custom format string used to format the date and/or 
      * time displayed in the control.
               PROPERTY-PUT, 7, @CustomFormat,
                   "BSTR (Property Value)", TYPE 8
      * Day
      * Returns/sets the day number [1-31] for the current date.
               PROPERTY-GET, 8, @Day
                       RETURNING "VARIANT", TYPE 12
      * Day
      * Returns/sets the day number [1-31] for the current date.
               PROPERTY-PUT, 8, @Day,
                   "VARIANT (Property Value)", TYPE 12
      * DayOfWeek
      * Returns the day of the week [0-6] for the current date.
               PROPERTY-GET, 9, @DayOfWeek
                       RETURNING "VARIANT", TYPE 12
      * DayOfWeek
      * Returns the day of the week [0-6] for the current date.
               PROPERTY-PUT, 9, @DayOfWeek,
                   "VARIANT (Property Value)", TYPE 12
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * Font
      * Returns a Font object.
               PROPERTY-GET, -512, @Font
                       RETURNING "IFontDisp*", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUT, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Font
      * Returns a Font object.
               PROPERTY-PUTREF, -512, @Font,
                   "IFontDisp* (Property Value)", TYPE 16413
      * Hour
      * Returns/sets the hour number [0-23] for the current time.
               PROPERTY-GET, 11, @Hour
                       RETURNING "VARIANT", TYPE 12
      * Hour
      * Returns/sets the hour number [0-23] for the current time.
               PROPERTY-PUT, 11, @Hour,
                   "VARIANT (Property Value)", TYPE 12
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 12, @MaxDate
                       RETURNING "DATE", TYPE 7
      * MaxDate
      * Returns/sets the latest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 12, @MaxDate,
                   "DATE (Property Value)", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-GET, 13, @MinDate
                       RETURNING "DATE", TYPE 7
      * MinDate
      * Returns/sets the earliest date that can be displayed or accepted by the 
      * control.
               PROPERTY-PUT, 13, @MinDate,
                   "DATE (Property Value)", TYPE 7
      * Minute
      * Returns/sets the minute number [0-59] for the current time.
               PROPERTY-GET, 14, @Minute
                       RETURNING "VARIANT", TYPE 12
      * Minute
      * Returns/sets the minute number [0-59] for the current time.
               PROPERTY-PUT, 14, @Minute,
                   "VARIANT (Property Value)", TYPE 12
      * Month
      * Returns/sets the month number [1-12] for the current date.
               PROPERTY-GET, 15, @Month
                       RETURNING "VARIANT", TYPE 12
      * Month
      * Returns/sets the month number [1-12] for the current date.
               PROPERTY-PUT, 15, @Month,
                   "VARIANT (Property Value)", TYPE 12
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 16, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 16, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 16, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 17, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 17, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-GET, 1551, @OLEDropMode
                       RETURNING "OLEDropConstants", TYPE 3
      * OLEDropMode
      * Returns/Sets whether this control can act as an OLE drop target.
               PROPERTY-PUT, 1551, @OLEDropMode,
                   "OLEDropConstants (Property Value)", TYPE 3
      * Second
      * Returns/sets the second number [0-59] for the current time.
               PROPERTY-GET, 18, @Second
                       RETURNING "VARIANT", TYPE 12
      * Second
      * Returns/sets the second number [0-59] for the current time.
               PROPERTY-PUT, 18, @Second,
                   "VARIANT (Property Value)", TYPE 12
      * UpDown
      * Returns/sets a value that determines whether an updown (spin) button is 
      * used to modify dates instead of a dropdown calendar.
               PROPERTY-GET, 19, @UpDown
                       RETURNING "boolean", TYPE 11
      * UpDown
      * Returns/sets a value that determines whether an updown (spin) button is 
      * used to modify dates instead of a dropdown calendar.
               PROPERTY-PUT, 19, @UpDown,
                   "boolean (Property Value)", TYPE 11
      * Value
      * Returns/sets the current date.
               PROPERTY-GET, 20, @Value
                       RETURNING "VARIANT", TYPE 12
      * Value
      * Returns/sets the current date.
               PROPERTY-PUT, 20, @Value,
                   "VARIANT (Property Value)", TYPE 12
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "VARIANT", TYPE 12
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "VARIANT (Property Value)", TYPE 12
      * Year
      * Returns/sets the year for the current date.
               PROPERTY-GET, 21, @Year
                       RETURNING "VARIANT", TYPE 12
      * Year
      * Returns/sets the year for the current date.
               PROPERTY-PUT, 21, @Year,
                   "VARIANT (Property Value)", TYPE 12
      * AboutBox
               METHOD, -552, @AboutBox
      * OLEDrag
      * Starts an OLE drag/drop event with the given control as the source.
               METHOD, 1552, @OLEDrag
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
      * CallbackKeyDown
      * Occurs when the user presses a key when the insertion point is over a 
      * callback field.
               EVENT, 1, @DTPickerCallbackKeyDown
      *            4 Parameters
      *                "short KeyCode"
      *                "short Shift"
      *                "BSTR CallbackField"
      *                "DATE* CallbackDate"
      * Change
      * Occurs when the user selects a new date or changes a date in the edit 
      * portion of the control.
               EVENT, 2, @DTPickerChange
      *            No Parameters
      * CloseUp
      * Occurs when the user is finished selecting a date from the dropdown 
      * calendar.
               EVENT, 3, @DTPickerCloseUp
      *            No Parameters
      * DropDown
      * Occurs when the dropdown calendar is about to drop down.
               EVENT, 4, @DTPickerDropDown
      *            No Parameters
      * Format
      * Occurs when the control is requesting text to be displayed in a callback 
      * field.
               EVENT, 5, @DTPickerFormat
      *            2 Parameters
      *                "BSTR CallbackField"
      *                "BSTR* FormattedString"
      * FormatSize
      * Occurs when the control needs to know the maximum allowable size of a 
      * callback field.
               EVENT, 6, @DTPickerFormatSize
      *            2 Parameters
      *                "BSTR CallbackField"
      *                "short* Size"
      * Click
      * Occurs when the user presses and then releases a mouse button over an 
      * object.
               EVENT, -600, @DTPickerClick
      *            No Parameters
      * DblClick
      * Occurs when you press and release a mouse button and then press and 
      * release it again over an object.
               EVENT, -601, @DTPickerDblClick
      *            No Parameters
      * KeyDown
      * Occurs when the user presses a key while an object has the focus.
               EVENT, -602, @DTPickerKeyDown
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyUp
      * Occurs when the user releases a key while an object has the focus.
               EVENT, -604, @DTPickerKeyUp
      *            2 Parameters
      *                "short* KeyCode"
      *                "short Shift"
      * KeyPress
      * Occurs when the user presses and releases an ANSI key.
               EVENT, -603, @DTPickerKeyPress
      *            1 Parameter
      *                "short* KeyAscii"
      * MouseDown
      * Occurs when the user presses the mouse button while the mousepointer is 
      * over an object.
               EVENT, -605, @DTPickerMouseDown
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseMove
      * Occurs when the user moves the mousepointer over an object.
               EVENT, -606, @DTPickerMouseMove
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * MouseUp
      * Occurs when the user releases the mouse button while the mousepointer is 
      * over an object.
               EVENT, -607, @DTPickerMouseUp
      *            4 Parameters
      *                "short Button"
      *                "short Shift"
      *                "OLE_XPOS_PIXELS x"
      *                "OLE_YPOS_PIXELS y"
      * OLEStartDrag
      * OLEStartDrag event
               EVENT, 1550, @DTPickerOLEStartDrag
      *            2 Parameters
      *                "DataObject** Data"
      *                "long* AllowedEffects"
      * OLEGiveFeedback
      * OLEGiveFeedback event
               EVENT, 1551, @DTPickerOLEGiveFeedback
      *            2 Parameters
      *                "long* Effect"
      *                "boolean* DefaultCursors"
      * OLESetData
      * OLESetData event
               EVENT, 1552, @DTPickerOLESetData
      *            2 Parameters
      *                "DataObject** Data"
      *                "short* DataFormat"
      * OLECompleteDrag
      * OLECompleteDrag event
               EVENT, 1553, @DTPickerOLECompleteDrag
      *            1 Parameter
      *                "long* Effect"
      * OLEDragOver
      * OLEDragOver event
               EVENT, 1554, @DTPickerOLEDragOver
      *            7 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
      *                "short* State"
      * OLEDragDrop
      * OLEDragDrop event
               EVENT, 1555, @DTPickerOLEDragDrop
      *            6 Parameters
      *                "DataObject** Data"
      *                "long* Effect"
      *                "short* Button"
      *                "short* Shift"
      *                "single* x"
      *                "single* y"
           
      * Flat Scrollbar Appearance Constants
           
      * FlatScrollBarAppearanceConstants
           CLASS @FlatScrollBarAppearanceConstants
               CLSID, FE387535-44A3-11D1-B5B7-0000C09000C4
               NAME, "FlatScrollBarAppearanceConstants"
      * "long fsb3D"
               ENUMERATOR, @fsb3D, 0
      * "long fsbFlat"
               ENUMERATOR, @fsbFlat, 1
      * "long fsbTrack3D"
               ENUMERATOR, @fsbTrack3D, 2
           
      * Arrows Constants
           
      * ArrowsConstants
           CLASS @ArrowsConstants
               CLSID, FE387536-44A3-11D1-B5B7-0000C09000C4
               NAME, "ArrowsConstants"
      * "long cc2Both"
               ENUMERATOR, @cc2Both, 0
      * "long cc2LeftUp"
               ENUMERATOR, @cc2LeftUp, 1
      * "long cc2RightDown"
               ENUMERATOR, @cc2RightDown, 2
           
      * Microsoft Flat Scrollbar Control
           
      * IFlatSB
           CLASS @IFlatSB
               CLSID, FE387538-44A3-11D1-B5B7-0000C09000C4
               NAME, "IFlatSB"
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-GET, 1, @Appearance
                       RETURNING "FlatScrollBarAppearanceConstants", 
                           TYPE 3
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-PUT, 1, @Appearance,
                   "FlatScrollBarAppearanceConstants (Property Value)", 
                       TYPE 3
      * Arrows
      * Returns/sets which direction buttons will be enabled.
               PROPERTY-GET, 2, @Arrows
                       RETURNING "ArrowsConstants", TYPE 3
      * Arrows
      * Returns/sets which direction buttons will be enabled.
               PROPERTY-PUT, 2, @Arrows,
                   "ArrowsConstants (Property Value)", TYPE 3
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * LargeChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks the area between the scroll box and the 
      * scroll arrow.
               PROPERTY-GET, 3, @LargeChange
                       RETURNING "short", TYPE 2
      * LargeChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks the area between the scroll box and the 
      * scroll arrow.
               PROPERTY-PUT, 3, @LargeChange,
                   "short (Property Value)", TYPE 2
      * Min
      * Returns/sets the scrollbar's minimum Value property setting.
               PROPERTY-GET, 4, @Min
                       RETURNING "short", TYPE 2
      * Min
      * Returns/sets the scrollbar's minimum Value property setting.
               PROPERTY-PUT, 4, @Min,
                   "short (Property Value)", TYPE 2
      * Max
      * Returns/sets the scrollbar's maximum Value property setting.
               PROPERTY-GET, 5, @Max
                       RETURNING "short", TYPE 2
      * Max
      * Returns/sets the scrollbar's maximum Value property setting.
               PROPERTY-PUT, 5, @Max,
                   "short (Property Value)", TYPE 2
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 6, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 6, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 6, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 7, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 7, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * Orientation
      * Returns/sets a value that determines whether the scrollbar is vertical 
      * or horizontal.
               PROPERTY-GET, 8, @Orientation
                       RETURNING "OrientationConstants", TYPE 3
      * Orientation
      * Returns/sets a value that determines whether the scrollbar is vertical 
      * or horizontal.
               PROPERTY-PUT, 8, @Orientation,
                   "OrientationConstants (Property Value)", TYPE 3
      * SmallChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks a scroll arrow.
               PROPERTY-GET, 9, @SmallChange
                       RETURNING "short", TYPE 2
      * SmallChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks a scroll arrow.
               PROPERTY-PUT, 9, @SmallChange,
                   "short (Property Value)", TYPE 2
      * Value
      * Returns/sets the current position of the scroll bar.
               PROPERTY-GET, 10, @Value
                       RETURNING "short", TYPE 2
      * Value
      * Returns/sets the current position of the scroll bar.
               PROPERTY-PUT, 10, @Value,
                   "short (Property Value)", TYPE 2
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "short", TYPE 2
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "short (Property Value)", TYPE 2
      * AboutBox
               METHOD, -552, @AboutBox
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
           
      * DFlatSBEvents
           CLASS @DFlatSBEvents
               CLSID, FE387539-44A3-11D1-B5B7-0000C09000C4
               NAME, "DFlatSBEvents"
      * Change
      * Occurs when the user causes the Value property of the scroll bar to 
      * change.
               METHOD, 1, @Change
      * Scroll
      * Occurs when the scroll box is being dragged by the user.
               METHOD, 2, @Scroll
           
      * Microsoft Flat Scrollbar Control
           
      *** Primary Interface ***
           
      * FlatScrollBar
           CLASS @FlatScrollBar
               CLSID, FE38753A-44A3-11D1-B5B7-0000C09000C4
               NAME, "FlatScrollBar"
               PRIMARY-INTERFACE
               ACTIVE-X-CONTROL
               DEFAULT-INTERFACE, "IFlatSB"
               DEFAULT-SOURCE, "DFlatSBEvents"
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-GET, 1, @Appearance
                       RETURNING "FlatScrollBarAppearanceConstants", 
                           TYPE 3
      * Appearance
      * Returns/sets whether or not controls, Forms or an MDIForm are painted at 
      * run time with 3-D effects.
               PROPERTY-PUT, 1, @Appearance,
                   "FlatScrollBarAppearanceConstants (Property Value)", 
                       TYPE 3
      * Arrows
      * Returns/sets which direction buttons will be enabled.
               PROPERTY-GET, 2, @Arrows
                       RETURNING "ArrowsConstants", TYPE 3
      * Arrows
      * Returns/sets which direction buttons will be enabled.
               PROPERTY-PUT, 2, @Arrows,
                   "ArrowsConstants (Property Value)", TYPE 3
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-GET, -514, @Enabled
                       RETURNING "boolean", TYPE 11
      * Enabled
      * Returns/sets a value that determines whether a form or control can 
      * respond to user-generated events.
               PROPERTY-PUT, -514, @Enabled,
                   "boolean (Property Value)", TYPE 11
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-GET, -515, @hWnd
                       RETURNING "OLE_HANDLE", TYPE 22
      * hWnd
      * Returns a handle to a form or control.
               PROPERTY-PUT, -515, @hWnd,
                   "OLE_HANDLE (Property Value)", TYPE 22
      * LargeChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks the area between the scroll box and the 
      * scroll arrow.
               PROPERTY-GET, 3, @LargeChange
                       RETURNING "short", TYPE 2
      * LargeChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks the area between the scroll box and the 
      * scroll arrow.
               PROPERTY-PUT, 3, @LargeChange,
                   "short (Property Value)", TYPE 2
      * Min
      * Returns/sets the scrollbar's minimum Value property setting.
               PROPERTY-GET, 4, @Min
                       RETURNING "short", TYPE 2
      * Min
      * Returns/sets the scrollbar's minimum Value property setting.
               PROPERTY-PUT, 4, @Min,
                   "short (Property Value)", TYPE 2
      * Max
      * Returns/sets the scrollbar's maximum Value property setting.
               PROPERTY-GET, 5, @Max
                       RETURNING "short", TYPE 2
      * Max
      * Returns/sets the scrollbar's maximum Value property setting.
               PROPERTY-PUT, 5, @Max,
                   "short (Property Value)", TYPE 2
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-GET, 6, @MouseIcon
                       RETURNING "IPictureDisp*", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUT, 6, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MouseIcon
      * Sets a custom mouse icon.
               PROPERTY-PUTREF, 6, @MouseIcon,
                   "IPictureDisp* (Property Value)", TYPE 16413
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-GET, 7, @MousePointer
                       RETURNING "MousePointerConstants", TYPE 3
      * MousePointer
      * Returns/sets the type of mouse pointer displayed when over part of an 
      * object.
               PROPERTY-PUT, 7, @MousePointer,
                   "MousePointerConstants (Property Value)", TYPE 3
      * Orientation
      * Returns/sets a value that determines whether the scrollbar is vertical 
      * or horizontal.
               PROPERTY-GET, 8, @Orientation
                       RETURNING "OrientationConstants", TYPE 3
      * Orientation
      * Returns/sets a value that determines whether the scrollbar is vertical 
      * or horizontal.
               PROPERTY-PUT, 8, @Orientation,
                   "OrientationConstants (Property Value)", TYPE 3
      * SmallChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks a scroll arrow.
               PROPERTY-GET, 9, @SmallChange
                       RETURNING "short", TYPE 2
      * SmallChange
      * Returns/sets a value that determines the amount of change to the Value 
      * property when the user clicks a scroll arrow.
               PROPERTY-PUT, 9, @SmallChange,
                   "short (Property Value)", TYPE 2
      * Value
      * Returns/sets the current position of the scroll bar.
               PROPERTY-GET, 10, @Value
                       RETURNING "short", TYPE 2
      * Value
      * Returns/sets the current position of the scroll bar.
               PROPERTY-PUT, 10, @Value,
                   "short (Property Value)", TYPE 2
      * _Value
               PROPERTY-GET, 0, @_Value
                       RETURNING "short", TYPE 2
      * _Value
               PROPERTY-PUT, 0, @_Value,
                   "short (Property Value)", TYPE 2
      * AboutBox
               METHOD, -552, @AboutBox
      * Refresh
      * Forces a complete repaint of a form or control.
               METHOD, -550, @Refresh
      * Change
      * Occurs when the user causes the Value property of the scroll bar to 
      * change.
               EVENT, 1, @FlatScrollBarChange
      *            No Parameters
      * Scroll
      * Occurs when the scroll box is being dragged by the user.
               EVENT, 2, @FlatScrollBarScroll
      *            No Parameters
